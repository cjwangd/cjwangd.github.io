{"meta":{"title":"王长金的个人博客","subtitle":"如果鸡蛋被外力打碎，那是生命的结束；<br>如果鸡蛋被内力打碎，那是生命的开始；<br>奇迹的开端永远在事务内部","description":"如果鸡蛋被外力打碎，那是生命的结束；<br>如果鸡蛋被内力打碎，那是生命的开始；<br>奇迹的开端永远在事务内部","author":"王长金","url":"http://wangcj.com.cn","root":"/"},"pages":[],"posts":[{"title":"kettle java 脚本","slug":"kettle-java-脚本","date":"2021-08-12T05:29:00.000Z","updated":"2021-08-14T16:50:10.132Z","comments":true,"path":"2021/08/12/kettle-java-脚本/","link":"","permalink":"http://wangcj.com.cn/2021/08/12/kettle-java-%E8%84%9A%E6%9C%AC/","excerpt":"","text":"java脚本import java.sql.*; import java.util.*; import java.util.Map; import org.apache.commons.lang.StringUtils; import org.pentaho.di.core.database.*; static Map map = null; public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException &#123; Object[] r = getRow(); if (r == null) &#123; setOutputDone(); return false; &#125; if(null == map)&#123; loadPropsDict(); &#125; // 处理航段 String dep = get(Fields.In, &quot;ORI_APT_IATA&quot;).getString(r); String arr = get(Fields.In, &quot;DES_APT_IATA&quot;).getString(r); String LINE_HD = get(Fields.In, &quot;LINE_HD&quot;).getString(r); String LINE = get(Fields.In, &quot;LINE&quot;).getString(r); if(LINE.indexOf(dep)&lt;0 || LINE.indexOf(arr)&lt;0)&#123; get(Fields.Out, &quot;LINE&quot;).setValue(r,LINE_HD); &#125; LINE = get(Fields.In, &quot;LINE&quot;).getString(r); String[] codes = LINE.split(&quot;-&quot;); String props = getPropertyByIATAcode(codes); String LINE_TYPE = getLineProperty(props); get(Fields.Out, &quot;LINE_TYPE&quot;).setValue(r,LINE_TYPE); get(Fields.Out, &quot;AIR_LINE&quot;).setValue(r,LINE); String LINE_SEG = get(Fields.In, &quot;LINE_SEG&quot;).getString(r); codes = LINE_SEG.split(&quot;-&quot;); props = getPropertyByIATAcode(codes); String LEG_TYPE = getLineProperty(props); get(Fields.Out, &quot;LEG_TYPE&quot;).setValue(r,LEG_TYPE); get(Fields.Out, &quot;AIR_LEG&quot;).setValue(r,LINE_SEG); LINE = get(Fields.In, &quot;LINE&quot;).getString(r); String[] segs = LINE.split(&quot;-&quot;); Long IO_NUM=calcIo(segs,LINE); logBasic(&quot;IO_NUM=&quot;+IO_NUM); get(Fields.In, &quot;IO_NUM&quot;).setValue(r,IO_NUM); putRow(data.outputRowMeta, r); return true; &#125; public Long calcIo(String[] segs,String line)&#123; if(segs==null || segs.length&lt;2)&#123; return 0L; &#125; else if(segs.length==2)&#123; return 1L; &#125;else&#123; if(line.startsWith(&quot;PVG&quot;)||line.endsWith(&quot;PVG&quot;))&#123; return 1L; &#125;else&#123; return 2L; &#125; &#125; &#125; /**判断航线类型*/ public String getLineProperty(String str)&#123; if(str.indexOf(&quot;I&quot;)&gt;=0)&#123; return &quot;INT&quot;; &#125;else if(str.indexOf(&quot;I&quot;)&gt;=0)&#123; return &quot;REG&quot;; &#125;else&#123; return &quot;DOM&quot;; &#125; &#125; public String getPropertyByIATAcode(String[] codes)&#123; String prop = &quot;&quot;; for(int i=0;i&lt;codes.length;i++)&#123; String c = codes[i]; prop+=map.get(c); &#125; return prop; &#125; public void loadPropsDict()&#123; map = new HashMap(); //数据库连接 Database database = null; DatabaseMeta databaseMeta = null; try &#123; databaseMeta = getTransMeta().findDatabase(&quot;SMIS&quot;); if (databaseMeta == null) &#123; logError(&quot;A connection with name SMIS could not be found!&quot;); setErrors(1); return; &#125; database = new Database(getTrans(), databaseMeta); database.connect(); logBasic(&quot;success!&quot;); &#125; catch(Exception e) &#123; logError(&quot;Connecting to database SMIS failed.&quot;, e); setErrors(1); return; &#125; //查询表数据 String sql = &quot;select t.iata_cd, t.property from SA_STATION t&quot;; ResultSet resultSet; try&#123; resultSet = database.openQuery(sql); Object[] idxRow = database.getRow(resultSet); RowMetaInterface idxRowMeta = null; if (idxRow != null) &#123; idxRowMeta = database.getReturnRowMeta(); &#125; int i = 0; while (idxRow != null) &#123; int index = getInputRowMeta().size(); String code = idxRowMeta.getString(idxRow, &quot;iata_cd&quot;, null); String prop = idxRowMeta.getString(idxRow, &quot;property&quot;, null); map.put(code, prop); idxRow = database.getRow(resultSet); i++; &#125; //释放连接 if (database != null) &#123; database.disconnect(); database.closeQuery(resultSet); &#125; logBasic(&quot;加载sa_station---结束&quot;); &#125;catch(Exception e)&#123; throw new KettleException(e); &#125; &#125; java 脚本有写套路是固定的，如下 获取行Object[] r = getRow();获取输入的字段get(Fields.In, &quot;field_name&quot;).getString(r); 设置输出字段的值get(Fields.Out, &quot;LINE_TYPE&quot;).setValue(r,LINE_TYPE);传递修改后的行到下一个处理putRow(data.outputRowMeta, r); 这个是必须的，否则没有输出字段 新增字段新增字段需要申明，并在java代码设置值 这里面写的java语法跟实际还是有点区别，比如stream和泛型就好像不支持，尽管项目是jdk8","categories":[{"name":"ETL","slug":"ETL","permalink":"http://wangcj.com.cn/categories/ETL/"}],"tags":[{"name":"kettle","slug":"kettle","permalink":"http://wangcj.com.cn/tags/kettle/"},{"name":"java 脚本","slug":"java-脚本","permalink":"http://wangcj.com.cn/tags/java-%E8%84%9A%E6%9C%AC/"}],"author":"王长金"},{"title":"github,hexo 搭建个人博客","slug":"github-hexo-搭建个人博客","date":"2021-08-12T05:06:00.000Z","updated":"2021-08-15T16:19:48.517Z","comments":true,"path":"2021/08/12/github-hexo-搭建个人博客/","link":"","permalink":"http://wangcj.com.cn/2021/08/12/github-hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"1、github新建两个仓库，一个用来存放静态可访问的文件，这个仓库的名字必须是 用户名.github.io。另一个用来存放源码，用来随时随地写日志 2、配置github git config --global user.name &quot;你的GitHub用户名&quot; git config --global user.email &quot;你的GitHub注册邮箱&quot;3、hexo npm install -g hexo-cli hexo init blog cd blog npm install hexo-admin@2.3.0 –S # web写日志 npm install hexo-deployer-git@3.0.0 # 部署静态文件到github 4、hexo 配置 _config.yml deploy: type: &#39;git&#39; repo: &#39;https://github.com/username/username.github.io.git&#39; branch: &#39;master&#39; # hexo-admin authentification wangcj/wangcj@123456 admin: username: username password_hash: password_hash secret: secret 5、写日志流程 启动本地server，打开web写日志，发布 重新生成静态文件推送到github 6、域名解析 域名解析添加CNAME记录要花钱，然后https又要花钱，算了。","categories":[{"name":"博客","slug":"博客","permalink":"http://wangcj.com.cn/categories/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"hexo 博客","slug":"hexo-博客","permalink":"http://wangcj.com.cn/tags/hexo-%E5%8D%9A%E5%AE%A2/"}],"author":"王长金"},{"title":"kettle 自定义 repo 读取jar中的脚本","slug":"kettle-自定义-repo-读取jar中的脚本","date":"2021-07-13T07:32:00.000Z","updated":"2021-07-13T07:39:26.000Z","comments":true,"path":"2021/07/13/kettle-自定义-repo-读取jar中的脚本/","link":"","permalink":"http://wangcj.com.cn/2021/07/13/kettle-%E8%87%AA%E5%AE%9A%E4%B9%89-repo-%E8%AF%BB%E5%8F%96jar%E4%B8%AD%E7%9A%84%E8%84%9A%E6%9C%AC/","excerpt":"","text":"问题springboot kettle job和转换打包到jar中，kettle无法读取到转换脚本。可以通过自定义repo获取 自定义repopackage com.cares.dsp.collection.dataCollection.sims; import org.pentaho.di.core.ProgressMonitorListener; import org.pentaho.di.core.exception.KettleException; import org.pentaho.di.job.JobMeta; import org.pentaho.di.repository.RepositoryDirectory; import org.pentaho.di.repository.RepositoryDirectoryInterface; import org.pentaho.di.repository.RepositoryElementInterface; import org.pentaho.di.repository.StringObjectId; import org.pentaho.di.repository.filerep.KettleFileRepository; import org.pentaho.di.repository.filerep.KettleFileRepositoryMeta; import org.pentaho.di.shared.SharedObjects; import org.pentaho.di.trans.TransMeta; import org.springframework.core.io.ClassPathResource; import java.io.IOException; public class CustomFileRepo extends KettleFileRepository &#123; public CustomFileRepo() &#123; KettleFileRepositoryMeta repositoryMeta = new KettleFileRepositoryMeta(); repositoryMeta.setBaseDirectory(&quot;/&quot;); this.setRepositoryMeta(repositoryMeta); &#125; @Override public TransMeta loadTransformation(String transname, RepositoryDirectoryInterface repdir, ProgressMonitorListener monitor, boolean setInternalVariables, String versionName) throws KettleException &#123; if (!transname.endsWith(&quot;.ktr&quot;)) &#123; transname+=&quot;.ktr&quot;; &#125; ClassPathResource classPathResource = new ClassPathResource(&quot;kettle_jobs/smislyg/&quot;+transname); TransMeta transMeta = null; try &#123; transMeta = new TransMeta(classPathResource.getInputStream(),this,setInternalVariables,null,null); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; transMeta.setRepository(this); transMeta.setMetaStore(this.getMetaStore()); transMeta.setName(transname); transMeta.setObjectId(new StringObjectId(this.calcObjectId(repdir, transname, &quot;.ktr&quot;))); transMeta.clearChanged(); return transMeta; &#125; @Override public String calcObjectId(RepositoryDirectoryInterface dir) &#123; return dir.getName(); &#125; @Override public String calcObjectId(RepositoryDirectoryInterface directory, String name, String extension) &#123; if (!name.endsWith(&quot;.ktr&quot;)) &#123; name+=extension; &#125; return name; &#125; @Override public String calcObjectId(RepositoryElementInterface element) &#123; return element.getName(); &#125; @Override public RepositoryDirectoryInterface findDirectory(String directory) throws KettleException &#123; return new RepositoryDirectory(null,directory); &#125; @Override public SharedObjects readJobMetaSharedObjects(JobMeta jobMeta) throws KettleException &#123; return null; &#125; &#125; job 调用 自定义repo ClassPathResource classPathResource = new ClassPathResource(&quot;etl.kjb&quot;); CustomFileRepo repo = new CustomFileRepo(); JobMeta jobMeta = new JobMeta(classPathResource.getInputStream(), repo, null); Job job = new Job(repo, jobMeta); job.start(); job.waitUntilFinished();","categories":[{"name":"ETL","slug":"ETL","permalink":"http://wangcj.com.cn/categories/ETL/"}],"tags":[{"name":"kettle","slug":"kettle","permalink":"http://wangcj.com.cn/tags/kettle/"},{"name":"读取jar中的transformation","slug":"读取jar中的transformation","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E5%8F%96jar%E4%B8%AD%E7%9A%84transformation/"}],"author":"王长金"},{"title":"NSIS 打包添加自定义页面","slug":"NSIS-打包添加自定义页面","date":"2021-05-17T11:17:00.000Z","updated":"2021-05-17T11:31:20.000Z","comments":true,"path":"2021/05/17/NSIS-打包添加自定义页面/","link":"","permalink":"http://wangcj.com.cn/2021/05/17/NSIS-%E6%89%93%E5%8C%85%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2/","excerpt":"","text":"需求自助终端打包安装需要根据不同的位置设置不同的访问路径 实现在欢迎页和许可页之间插入一个自定义页面，用于选择自助终端的位置 在成功安装后，将访问路径写入启动文件 Unicode true ; Script generated by the HM NIS Edit Script Wizard. ; HM NIS Edit Wizard helper defines !define PRODUCT_NAME &quot;旅客服务自助终端&quot; !define PRODUCT_VERSION &quot;1.0&quot; !define PRODUCT_PUBLISHER &quot;上海民航华东凯亚系统集成有限公司南京研发中心&quot; !define PRODUCT_WEB_SITE &quot;http://hdcares.travelsky.cn/&quot; !define PRODUCT_DIR_REGKEY &quot;Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\start.cmd&quot; !define PRODUCT_UNINST_KEY &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$&#123;PRODUCT_NAME&#125;&quot; !define PRODUCT_UNINST_ROOT_KEY &quot;HKLM&quot; SetCompressor lzma !include nsDialogs.nsh !include LogicLib.nsh ; MUI 1.67 compatible ------ !include &quot;MUI.nsh&quot; ; MUI Settings !define MUI_ABORTWARNING !define MUI_ICON &quot;fids.ico&quot; !define MUI_UNICON &quot;fids.ico&quot; ; Language Selection Dialog Settings !define MUI_LANGDLL_REGISTRY_ROOT &quot;$&#123;PRODUCT_UNINST_ROOT_KEY&#125;&quot; !define MUI_LANGDLL_REGISTRY_KEY &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; !define MUI_LANGDLL_REGISTRY_VALUENAME &quot;NSIS:Language&quot; Var Dialog Var radioDep Var radioArr Var selectedPos ; Welcome page !insertmacro MUI_PAGE_WELCOME Page custom nsDialogsPage nsDialogsPageLeave Function nsDialogsPage !insertmacro MUI_HEADER_TEXT_PAGE &quot;位置选择&quot; &quot;选择自助终端所在位置，默认为出发层&quot; nsDialogs::Create 1018 Pop $Dialog $&#123;If&#125; $Dialog == error Abort $&#123;EndIf&#125; $&#123;NSD_CreateRadioButton&#125; 30% 30% 100% 20% &quot;出发层&quot; Pop $radioDep $&#123;NSD_CreateRadioButton&#125; 30% 45% 100% 25% &quot;到达层&quot; Pop $radioArr $&#123;NSD_SetState&#125; $radioDep $&#123;BST_CHECKED&#125; nsDialogs::Show FunctionEnd Function nsDialogsPageLeave $&#123;NSD_GetState&#125; $radioDep $0 StrCpy $selectedPos $0 FunctionEnd ; License page !insertmacro MUI_PAGE_LICENSE &quot;license.txt&quot; ; Directory page !insertmacro MUI_PAGE_DIRECTORY ; Instfiles page !insertmacro MUI_PAGE_INSTFILES ; Finish page !insertmacro MUI_PAGE_FINISH ; Uninstaller pages !insertmacro MUI_UNPAGE_INSTFILES ; Language files !insertmacro MUI_LANGUAGE &quot;SimpChinese&quot; ; Reserve files !insertmacro MUI_RESERVEFILE_INSTALLOPTIONS ; MUI end ------ Name &quot;$&#123;PRODUCT_NAME&#125; $&#123;PRODUCT_VERSION&#125;&quot; OutFile &quot;FidsInstaller.exe&quot; InstallDir &quot;$PROGRAMFILES\\$&#123;PRODUCT_NAME&#125;&quot; InstallDirRegKey HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; &quot;&quot; ShowInstDetails show ShowUnInstDetails show Function .onInit !insertmacro MUI_LANGDLL_DISPLAY FunctionEnd var depUrl var arrUrl Function .onInstSuccess ReadINIStr $0 $INSTDIR\\addr.ini address dep ReadINIStr $1 $INSTDIR\\addr.ini address arr StrCpy $depUrl $0 StrCpy $arrUrl $1 ClearErrors FileOpen $0 $INSTDIR\\start.cmd w IfErrors done FileWrite $0 &quot;echo off&quot; FileWrite $0 &quot;$\\n&quot; FileWrite $0 &quot;set cwd=$INSTDIR\\&quot; FileWrite $0 &quot;$\\n&quot; FileWrite $0 &quot;set path=%cwd%jre\\bin;%cwd%lib\\passportLib;%cwd%lib\\printer;%cwd%lib\\faceLib\\win32-x86;%cwd%lib\\ceflib\\lib\\win32;%path%&quot; FileWrite $0 &quot;$\\n&quot; $&#123;If&#125; $selectedPos == 1 FileWrite $0 &quot;start javaw -Dfids.backend.url=$depUrl -Dfile.encoding=UTF-8 -Djna.library.path=%cwd%\\idcard -classpath %cwd%lib\\*;%cwd%lib\\ceflib\\*;%cwd%jre\\lib\\*;%cwd%jre\\lib\\ext\\*;%cwd%bin\\pss-front.jar com.cares.pssfront.PssFrontApplication&quot; $&#123;EndIf&#125; $&#123;If&#125; $selectedPos == 0 FileWrite $0 &quot;start javaw -Dfids.backend.url=$arrUrl -Dfile.encoding=UTF-8 -Djna.library.path=%cwd%\\idcard -classpath %cwd%lib\\*;%cwd%lib\\ceflib\\*;%cwd%jre\\lib\\*;%cwd%jre\\lib\\ext\\*;%cwd%bin\\pss-front.jar com.cares.pssfront.PssFrontApplication&quot; $&#123;EndIf&#125; FileWrite $0 &quot;$\\n&quot; FileClose $0 done: FunctionEnd Section &quot;MainSection&quot; SEC01 SetOutPath &quot;$INSTDIR&quot; SetOverwrite try File &quot;fids.ico&quot; File &quot;addr.ini&quot; File &quot;license.txt&quot; File &quot;start.cmd&quot; File /r &quot;jre&quot; File /r &quot;lib&quot; File /r &quot;bin&quot; CreateDirectory &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;&quot; CreateShortCut &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\$&#123;PRODUCT_NAME&#125;.lnk&quot; &quot;$INSTDIR\\start.cmd&quot; &quot;&quot; &quot;$INSTDIR\\fids.ico&quot; CreateShortCut &quot;$DESKTOP\\$&#123;PRODUCT_NAME&#125;.lnk&quot; &quot;$INSTDIR\\start.cmd&quot; &quot;&quot; &quot;$INSTDIR\\fids.ico&quot; SectionEnd Section -AdditionalIcons WriteIniStr &quot;$INSTDIR\\$&#123;PRODUCT_NAME&#125;.url&quot; &quot;InternetShortcut&quot; &quot;URL&quot; &quot;$&#123;PRODUCT_WEB_SITE&#125;&quot; CreateShortCut &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\Website.lnk&quot; &quot;$INSTDIR\\$&#123;PRODUCT_NAME&#125;.url&quot; CreateShortCut &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\Uninstall.lnk&quot; &quot;$INSTDIR\\uninst.exe&quot; SectionEnd Section -Post WriteUninstaller &quot;$INSTDIR\\uninst.exe&quot; WriteRegStr HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; &quot;&quot; &quot;$INSTDIR\\start.cmd&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayName&quot; &quot;$(^Name)&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;UninstallString&quot; &quot;$INSTDIR\\uninst.exe&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayIcon&quot; &quot;$INSTDIR\\fids.ico&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayVersion&quot; &quot;$&#123;PRODUCT_VERSION&#125;&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;URLInfoAbout&quot; &quot;$&#123;PRODUCT_WEB_SITE&#125;&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;Publisher&quot; &quot;$&#123;PRODUCT_PUBLISHER&#125;&quot; WriteRegStr HKCU &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot; &quot;$&#123;PRODUCT_NAME&#125;&quot; &quot;$INSTDIR\\start.cmd&quot; SectionEnd Function un.onUninstSuccess HideWindow MessageBox MB_ICONINFORMATION|MB_OK &quot;$(^Name) 已经成功的从您的电脑中删除&quot; FunctionEnd Function un.onInit !insertmacro MUI_UNGETLANGUAGE MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 &quot;确定要删除 $(^Name) 和所有组件吗?&quot; IDYES +2 Abort FunctionEnd Section Uninstall Delete &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\Uninstall.lnk&quot; Delete &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\Website.lnk&quot; Delete &quot;$DESKTOP\\$&#123;PRODUCT_NAME&#125;.lnk&quot; Delete &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;\\$&#123;PRODUCT_NAME&#125;.lnk&quot; RMDir &quot;$SMPROGRAMS\\$&#123;PRODUCT_NAME&#125;&quot; RMDir /r /REBOOTOK $INSTDIR DeleteRegValue HKCU &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot; &quot;$&#123;PRODUCT_NAME&#125;&quot; DeleteRegKey $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; DeleteRegKey HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; SetAutoClose true SectionEnd 注意点1.在脚本开始设置 Unicode true，解决中文乱码的问题。否则需要设置脚本文件编码为中文编码。设置 Unicode true 后不要在nsis编辑器中打开，打开后中文是乱码。此时调用命令行打包就行了 效果图","categories":[{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/categories/%E6%89%93%E5%8C%85/"}],"tags":[{"name":"NSIS","slug":"NSIS","permalink":"http://wangcj.com.cn/tags/NSIS/"},{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8C%85/"},{"name":"自定义页面","slug":"自定义页面","permalink":"http://wangcj.com.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2/"}],"author":"王长金"},{"title":"bootstrapTreeTable 行拖拽","slug":"bootstrapTreeTable-行拖拽","date":"2021-05-14T03:05:00.000Z","updated":"2021-05-14T03:37:50.000Z","comments":true,"path":"2021/05/14/bootstrapTreeTable-行拖拽/","link":"","permalink":"http://wangcj.com.cn/2021/05/14/bootstrapTreeTable-%E8%A1%8C%E6%8B%96%E6%8B%BD/","excerpt":"","text":"引入 tabledndjquery.tablednd.1.0.5.min.js &lt;script th:src=&quot;@&#123;/statics/ajax/libs/tablednd/jquery.tablednd.1.0.5.min.js&#125;&quot;&gt;&lt;/script&gt;bootstrapTreeTable 添加渲染回调在renderTable 函数末尾增加如下内容 if(options.onTreeTableRendered &amp;&amp; (typeof options.onTreeTableRendered ==&quot;function&quot;))&#123; options.onTreeTableRendered.apply(); &#125;注册渲染回调function onTreeTableRendered()&#123; $.modal.closeLoading(); $(&#39;#bootstrap-tree-table&#39;).tableDnD(&#123; onDragStyle: null, onDropStyle: null, onDragClass: &#39;reorder_rows_onDragClass&#39;, onDrop: onDrop, onAllowDrop: onAllowDrop, onDragStart: onDragStart, dragHandle: null &#125;); &#125; var options = &#123; code: &quot;id&quot;, parentCode: &quot;parent&quot;, expandColumn: &quot;1&quot;, uniqueId: &quot;id&quot;, url: prefix + &quot;/list?ruleId=&quot;+ruleId, createUrl: prefix + &quot;/add/&#123;id&#125;&quot;, updateUrl: prefix + &quot;/edit/&#123;id&#125;&quot;, removeUrl: prefix + &quot;/remove/&#123;id&#125;&quot;, exportUrl: prefix + &quot;/export&quot;, modalName: &quot;消息解析规则项&quot;, clickToSelect: false, onTreeTableRendered:onTreeTableRendered, columns: [&#123; field: &#39;selectItem&#39;, radio: true &#125;, &#123; field: &#39;name&#39;, title: &#39;数据项名称&#39;, width:&#39;300px&#39;, align: &#39;left&#39; &#125;, /* &#123; field: &#39;id&#39;, title: &#39;规则表主键&#39;, align: &#39;left&#39; &#125;,*/ &#123; field: &#39;parent&#39;, title: &#39;父级规则项&#39;, align: &#39;left&#39;, visible:false &#125;, &#123; field: &#39;seq&#39;, title: &#39;规则排序&#39;, align: &#39;left&#39; &#125;, &#123; field: &#39;format&#39;, title: &#39;解析表达式&#39;, align: &#39;left&#39;, formatter: function(value, row, index) &#123; return &#39;&lt;div class=&quot;basic-r&quot; style=\\&#39;width:120px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;\\&#39; title=&quot;&#39;+value+&#39;&quot;&gt;&#39;+value+&#39;&lt;/div&gt;&#39;; &#125; &#125;, &#123; field: &#39;status&#39;, title: &#39;是否可选&#39;, align: &#39;left&#39;, formatter: function(value, row, index) &#123; return $.table.selectDictLabel(statusDatas, value); &#125; &#125;, &#123; field: &#39;value&#39;, title: &#39;常量&#39;, align: &#39;left&#39;, formatter: function(value, row, index) &#123; return &#39;&lt;div class=&quot;basic-r&quot; style=\\&#39;width:120px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;\\&#39; title=&quot;&#39;+value+&#39;&quot;&gt;&#39;+value+&#39;&lt;/div&gt;&#39;; &#125; &#125;, &#123; field: &#39;field&#39;, title: &#39;输出到根节点&#39;, align: &#39;left&#39; &#125;, &#123; field: &#39;isout&#39;, title: &#39;输出&#39;, align: &#39;left&#39;, formatter: function(value, row, index) &#123; return $.table.selectDictLabel(isoutDatas, value); &#125; &#125;, &#123; title: &#39;操作&#39;, align: &#39;center&#39;, align: &#39;left&#39;, formatter: function(value, row, index) &#123; var actions = []; actions.push(&#39;&lt;a class=&quot;btn btn-success btn-xs &#39; + editFlag + &#39;&quot; href=&quot;javascript:void(0)&quot; onclick=&quot;$.operate.edit(\\&#39;&#39; + row.id + &#39;\\&#39;)&quot;&gt;&lt;i class=&quot;fa fa-edit&quot;&gt;&lt;/i&gt;编辑&lt;/a&gt; &#39;); actions.push(&#39;&lt;a class=&quot;btn btn-info btn-xs &#39; + addFlag + &#39;&quot; href=&quot;javascript:void(0)&quot; onclick=&quot;$.operate.add(\\&#39;&#39; + row.id + &#39;\\&#39;)&quot;&gt;&lt;i class=&quot;fa fa-plus&quot;&gt;&lt;/i&gt;新增&lt;/a&gt; &#39;); actions.push(&#39;&lt;a class=&quot;btn btn-danger btn-xs &#39; + removeFlag + &#39;&quot; href=&quot;javascript:void(0)&quot; onclick=&quot;$.operate.remove(\\&#39;&#39; + row.id + &#39;\\&#39;)&quot;&gt;&lt;i class=&quot;fa fa-remove&quot;&gt;&lt;/i&gt;删除&lt;/a&gt;&#39;); return actions.join(&#39;&#39;); &#125; &#125;] &#125;; $.treeTable.init(options); &#125;); 行拖拽功能实现函数function onDrop(table, droppedRow)&#123; $.modal.loading(&quot;正在保存数据，请稍后...&quot;); var dragRow = getRowData(droppedRow); var toRow = getRowData(dragToRow); let droppedRowTop = $(droppedRow).offset(); let dragToRowRowTop = $(dragToRow).offset(); // dir = true 向下 false 向上 let dir = droppedRowTop.top&gt;dragToRowRowTop.top?true:false; // toRow 的所有平级要重新排序，拖拽的行的parent的code要改变 dragRow.parent = toRow.parent; var bros = getBro(toRow.parent); // 删除已有的 for (var i = 0; i &lt; bros.length; i++) &#123; if (bros[i].id == dragRow.id) &#123; bros.splice(i,1); break; &#125; &#125; // 插入 for (var i = 0; i &lt; bros.length; i++) &#123; if (bros[i].id == toRow.id) &#123; let index=i; if (dir) &#123; index=i+1; &#125; bros.splice(index,0,&#123; id:dragRow.id, seq:dragRow.seq, parent:dragRow.parent &#125;); break; &#125; &#125; // 排序 for (var i = 0; i &lt;bros.length; i++) &#123; bros[i].seq=i+1; &#125; // 更新后台，重新加载treetable $.ajax(&#123; method:&#39;post&#39;, url:prefix+&#39;/editBatch&#39;, data: JSON.stringify(bros), success:function (res)&#123; $.treeTable.refresh(); &#125;, dataType:&#39;json&#39;, contentType:&#39;application/json&#39; &#125;) &#125; function onDragStart(table, row)&#123; &#125; function dragHandle()&#123; &#125; function onAllowDrop(draged,bottom)&#123; dragToRow = bottom; var dragRow = getRowData(draged); var toRow = getRowData(dragToRow); if (toRow.parent == dragRow.id) &#123; return false; &#125; return true; &#125; function getRowData(row) &#123; var target = $(&#39;#bootstrap-tree-table&#39;).data(&#39;bootstrap.tree.table&#39;); var dataList = target.data_obj; var id = $(row).find(&#39;input[name=select_item]&#39;).val(); return dataList[&#39;id_&#39;+id]; &#125; function setNewPid(rowid,newpid)&#123; var target = $(&#39;#bootstrap-tree-table&#39;).data(&#39;bootstrap.tree.table&#39;); var dataList = target.data_obj; var row = dataList[&#39;id_&#39;+rowid]; row.parent = newpid; &#125; function getBro(pid)&#123; var target = $(&#39;#bootstrap-tree-table&#39;).data(&#39;bootstrap.tree.table&#39;); var dataList = target.data_obj; var bros =[]; for (var i in dataList) &#123; if(pid== dataList[i].parent)&#123; bros.push(&#123; id:dataList[i].id, seq:dataList[i].seq, parent:dataList[i].parent &#125;); &#125; &#125; return bros; &#125; 效果","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"拖拽","slug":"拖拽","permalink":"http://wangcj.com.cn/tags/%E6%8B%96%E6%8B%BD/"},{"name":"bootstrap tree table","slug":"bootstrap-tree-table","permalink":"http://wangcj.com.cn/tags/bootstrap-tree-table/"}],"author":"王长金"},{"title":"SPRINGBOOT 收发 IBMMQ 消息","slug":"SPRINGBOOT-收发-IBMMQ-消息","date":"2021-05-11T13:17:00.000Z","updated":"2021-05-12T06:40:02.000Z","comments":true,"path":"2021/05/11/SPRINGBOOT-收发-IBMMQ-消息/","link":"","permalink":"http://wangcj.com.cn/2021/05/11/SPRINGBOOT-%E6%94%B6%E5%8F%91-IBMMQ-%E6%B6%88%E6%81%AF/","excerpt":"","text":"环境1，IBMMQ 9.1 2,SPRINGBOOT 2.3.1.RELEASE 依赖 &lt;dependency&gt; &lt;groupId&gt;com.ibm.mq&lt;/groupId&gt; &lt;artifactId&gt;com.ibm.mq.allclient&lt;/artifactId&gt; &lt;version&gt;9.1.1.0&lt;/version&gt; &lt;/dependency&gt;发送消息配置package cn.sh.cares.exec.config; import com.ibm.mq.MQEnvironment; import com.ibm.mq.MQQueueManager; import com.ibm.mq.constants.CMQC; import com.ibm.mq.jms.MQQueue; import com.ibm.mq.jms.MQQueueConnectionFactory; import com.ibm.msg.client.wmq.WMQConstants; import lombok.extern.slf4j.Slf4j; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.jms.connection.CachingConnectionFactory; import org.springframework.jms.connection.JmsTransactionManager; import org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter; import org.springframework.jms.core.JmsOperations; import org.springframework.jms.core.JmsTemplate; import org.springframework.transaction.PlatformTransactionManager; import javax.jms.JMSException; import static com.ibm.msg.client.wmq.common.CommonConstants.WMQ_CLIENT_RECONNECT; @Slf4j @Configuration public class IbmMqConfig &#123; @Value(&quot;$&#123;ibm.host&#125;&quot;) private String host; @Value(&quot;$&#123;ibm.port&#125;&quot;) private Integer port; @Value(&quot;$&#123;ibm.channel&#125;&quot;) private String channel; @Value(&quot;$&#123;ibm.queue_manager&#125;&quot;) private String queue_manager; @Value(&quot;$&#123;ibm.userId&#125;&quot;) private String userId; @Value(&quot;$&#123;ibm.password&#125;&quot;) private String password; @Value(&quot;$&#123;ibm.ccsid&#125;&quot;) private String ccsid; @Bean(name=&quot;mqQueueConnectionFactoryUp&quot;) public MQQueueConnectionFactory mqQueueConnectionFactory()&#123; MQQueueConnectionFactory mqQueueConnectionFactory = new MQQueueConnectionFactory(); mqQueueConnectionFactory.setHostName(host); try &#123; mqQueueConnectionFactory.setTransportType(WMQConstants.WMQ_CM_CLIENT); mqQueueConnectionFactory.setCCSID(Integer.valueOf(ccsid)); mqQueueConnectionFactory.setChannel(channel); mqQueueConnectionFactory.setPort(port); mqQueueConnectionFactory.setClientReconnectOptions(WMQ_CLIENT_RECONNECT); mqQueueConnectionFactory.setClientReconnectTimeout(60); mqQueueConnectionFactory.setQueueManager(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueueConnectionFactory; &#125; @Bean(name=&quot;userCredentialsConnectionFactoryAdapterUp&quot;) public UserCredentialsConnectionFactoryAdapter userCredentialsConnectionFactoryAdapter(@Qualifier(&quot;mqQueueConnectionFactoryUp&quot;) MQQueueConnectionFactory mqQueueConnectionFactory)&#123; UserCredentialsConnectionFactoryAdapter userCredentialsConnectionFactoryAdapter = new UserCredentialsConnectionFactoryAdapter(); userCredentialsConnectionFactoryAdapter.setUsername(userId); userCredentialsConnectionFactoryAdapter.setPassword(password); userCredentialsConnectionFactoryAdapter.setTargetConnectionFactory(mqQueueConnectionFactory); return userCredentialsConnectionFactoryAdapter; &#125; @Bean(name=&quot;cachingConnectionFactory&quot;) public CachingConnectionFactory cachingConnectionFactory(@Qualifier(&quot;userCredentialsConnectionFactoryAdapterUp&quot;) UserCredentialsConnectionFactoryAdapter userCredentialsConnectionFactoryAdapter)&#123; CachingConnectionFactory cachingConnectionFactory = new CachingConnectionFactory(); cachingConnectionFactory.setTargetConnectionFactory(userCredentialsConnectionFactoryAdapter); cachingConnectionFactory.setSessionCacheSize(5); cachingConnectionFactory.setReconnectOnException(true); return cachingConnectionFactory; &#125; @Bean(name=&quot;jmsTransactionManager&quot;) public PlatformTransactionManager jmsTransactionManager(CachingConnectionFactory cachingConnectionFactory)&#123; JmsTransactionManager jmsTransactionManager = new JmsTransactionManager(); jmsTransactionManager.setConnectionFactory(cachingConnectionFactory); return jmsTransactionManager; &#125; @Bean(name=&quot;jmsOperations&quot;) public JmsOperations jmsOperations(CachingConnectionFactory cachingConnectionFactory)&#123; JmsTemplate jmsTemplate = new JmsTemplate(cachingConnectionFactory); jmsTemplate.setReceiveTimeout(60000); return jmsTemplate; &#125; &#125; 发送消息package cn.sh.cares.exec.service.impl; import cn.sh.cares.exec.message.struct.Mqmessage; import cn.sh.cares.exec.service.JaxbService; import cn.sh.cares.exec.service.MessageSender; import com.xxl.job.core.log.XxlJobLogger; import lombok.extern.slf4j.Slf4j; import org.apache.commons.lang3.StringUtils; import org.apache.commons.lang3.time.DateFormatUtils; import org.apache.commons.text.StringEscapeUtils; import org.springframework.beans.factory.annotation.Value; import org.springframework.jms.core.JmsOperations; import org.springframework.stereotype.Service; import javax.annotation.Resource; import javax.jms.TextMessage; import java.io.FileWriter; import java.nio.file.Path; import java.nio.file.Paths; import java.util.Date; @Slf4j @Service public class MessageSenderImpl implements MessageSender &#123; @Resource private JmsOperations jmsOperations; @Resource private JaxbService jaxbService; @Value(&quot;$&#123;apoi.log.msg&#125;&quot;) private String msgPath; @Value(&quot;$&#123;ibm.queue_name&#125;&quot;) private String queueName; @Override public void send(Mqmessage mqmessage) &#123; log.debug(&quot;开始发送&quot;); String msg = jaxbService.serializeMsg(mqmessage); if (StringUtils.isEmpty(msg)) &#123; log.debug(&quot;消息为空&quot;); return; &#125; XxlJobLogger.log(StringEscapeUtils.escapeXml10(msg)); log.debug(msg); try &#123; jmsOperations.send(queueName, session -&gt; &#123; TextMessage textMessage = session.createTextMessage(); textMessage.setText(msg); return textMessage; &#125;); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;消息发送失败 msg=&#123;&#125;,error=&#123;&#125;&quot;, msg, e.getMessage()); &#125; finally &#123; writeToFile(msg); &#125; &#125; private void writeToFile(String msg) &#123; Path path = Paths.get(msgPath, DateFormatUtils.format(new Date(), &quot;yyyy-MM-dd&quot;)); try &#123; if (!path.toFile().exists()) &#123; if (!path.toFile().getParentFile().exists()) &#123; path.toFile().getParentFile().mkdirs(); &#125; path.toFile().createNewFile(); &#125; FileWriter printWriter = new FileWriter(path.toFile(), true); printWriter.append(msg).append(&quot;\\n&quot;); printWriter.flush(); printWriter.close(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125; 监听队列消息监听配置package cn.sh.cares.exec.config; import cn.sh.cares.exec.service.impl.NtfmDlndErrorHandle; import cn.sh.cares.exec.service.impl.NtfmDlndMsgErrorListener; import cn.sh.cares.exec.service.impl.NtfmDlndMsgListener; import com.ibm.mq.jms.MQQueue; import com.ibm.mq.jms.MQQueueConnectionFactory; import com.ibm.msg.client.wmq.WMQConstants; import lombok.extern.slf4j.Slf4j; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter; import org.springframework.jms.listener.DefaultMessageListenerContainer; import javax.annotation.Resource; import javax.jms.JMSException; import static com.ibm.msg.client.wmq.common.CommonConstants.WMQ_CLIENT_RECONNECT_Q_MGR; @Slf4j @Configuration public class IbmMqDownConfig &#123; @Value(&quot;$&#123;ibm.host.down&#125;&quot;) private String host; @Value(&quot;$&#123;ibm.channel.down&#125;&quot;) private String channel; @Value(&quot;$&#123;ibm.queue_manager.down&#125;&quot;) private String queue_manager; @Value(&quot;$&#123;ibm.userId.down&#125;&quot;) private String userId; @Value(&quot;$&#123;ibm.password.down&#125;&quot;) private String password; @Value(&quot;$&#123;ibm.ccsid.down&#125;&quot;) private String ccsid; @Resource NtfmDlndMsgErrorListener ntfmDlndMsgErrorListener; @Resource NtfmDlndErrorHandle ntfmDlndErrorHandle; /**=======================MQ 通道工厂============================**/ @Bean(name=&quot;mqQueueConnectionFactory&quot;) public MQQueueConnectionFactory mqQueueConnectionFactory()&#123; MQQueueConnectionFactory mqQueueConnectionFactory = new MQQueueConnectionFactory(); try &#123; mqQueueConnectionFactory.setTransportType(WMQConstants.WMQ_CM_CLIENT); mqQueueConnectionFactory.setCCSID(Integer.valueOf(ccsid)); mqQueueConnectionFactory.setChannel(channel); mqQueueConnectionFactory.setConnectionNameList(host); mqQueueConnectionFactory.setClientReconnectOptions(WMQ_CLIENT_RECONNECT_Q_MGR); mqQueueConnectionFactory.setQueueManager(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueueConnectionFactory; &#125; @Bean(name=&quot;userCredentialsConnectionFactoryAdapter&quot;) public UserCredentialsConnectionFactoryAdapter userCredentialsConnectionFactoryAdapter(@Qualifier(&quot;mqQueueConnectionFactory&quot;) MQQueueConnectionFactory mqQueueConnectionFactory)&#123; UserCredentialsConnectionFactoryAdapter userCredentialsConnectionFactoryAdapter = new UserCredentialsConnectionFactoryAdapter(); userCredentialsConnectionFactoryAdapter.setUsername(userId); userCredentialsConnectionFactoryAdapter.setPassword(password); userCredentialsConnectionFactoryAdapter.setTargetConnectionFactory(mqQueueConnectionFactory); return userCredentialsConnectionFactoryAdapter; &#125; /**============================MQ 消息监听接收=============================**/ //队列连接 @Bean(name=&quot;FCTI&quot;) public MQQueue mqueueFCTI()&#123; MQQueue mqQueue = new MQQueue(); try &#123; mqQueue.setBaseQueueName(&quot;FCTI.TO.ZSJN&quot;); mqQueue.setBaseQueueManagerName(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueue; &#125; //对队列进行监听 @Bean(name=&quot;FCTI-MsgContainer&quot;) public DefaultMessageListenerContainer msgContainerFCTI(@Qualifier(&quot;userCredentialsConnectionFactoryAdapter&quot;) UserCredentialsConnectionFactoryAdapter adapter, @Qualifier(value = &quot;FCTI&quot;) MQQueue mqQueue, NtfmDlndMsgListener listener)&#123; DefaultMessageListenerContainer defaultMessageListenerContainer = new DefaultMessageListenerContainer(); defaultMessageListenerContainer.setConnectionFactory(adapter); defaultMessageListenerContainer.setDestination(mqQueue); defaultMessageListenerContainer.setMessageListener(listener); defaultMessageListenerContainer.setExceptionListener(ntfmDlndMsgErrorListener); defaultMessageListenerContainer.setErrorHandler(ntfmDlndErrorHandle); defaultMessageListenerContainer.setConcurrentConsumers(1); defaultMessageListenerContainer.setConcurrency(&quot;1&quot;); return defaultMessageListenerContainer; &#125; @Bean(name=&quot;MDRS&quot;) public MQQueue mqueueMDRS()&#123; MQQueue mqQueue = new MQQueue(); try &#123; mqQueue.setBaseQueueName(&quot;MDRS.TO.ZSJN&quot;); mqQueue.setBaseQueueManagerName(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueue; &#125; //对队列进行监听 @Bean(name=&quot;MDRS-MsgContainer&quot;) public DefaultMessageListenerContainer msgContainerMDRS(@Qualifier(&quot;userCredentialsConnectionFactoryAdapter&quot;) UserCredentialsConnectionFactoryAdapter adapter, @Qualifier(value = &quot;MDRS&quot;) MQQueue mqQueue, NtfmDlndMsgListener listener)&#123; DefaultMessageListenerContainer defaultMessageListenerContainer = new DefaultMessageListenerContainer(); defaultMessageListenerContainer.setConnectionFactory(adapter); defaultMessageListenerContainer.setDestination(mqQueue); defaultMessageListenerContainer.setMessageListener(listener); defaultMessageListenerContainer.setExceptionListener(ntfmDlndMsgErrorListener); defaultMessageListenerContainer.setErrorHandler(ntfmDlndErrorHandle); defaultMessageListenerContainer.setConcurrentConsumers(1); defaultMessageListenerContainer.setConcurrency(&quot;1&quot;); return defaultMessageListenerContainer; &#125; @Bean(name=&quot;PADR&quot;) public MQQueue mqueuePADR()&#123; MQQueue mqQueue = new MQQueue(); try &#123; mqQueue.setBaseQueueName(&quot;PADR.TO.ZSJN&quot;); mqQueue.setBaseQueueManagerName(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueue; &#125; //对队列进行监听 @Bean(name=&quot;PADR-MsgContainer&quot;) public DefaultMessageListenerContainer msgContainerPADR(@Qualifier(&quot;userCredentialsConnectionFactoryAdapter&quot;) UserCredentialsConnectionFactoryAdapter adapter, @Qualifier(value = &quot;PADR&quot;) MQQueue mqQueue, NtfmDlndMsgListener listener)&#123; DefaultMessageListenerContainer defaultMessageListenerContainer = new DefaultMessageListenerContainer(); defaultMessageListenerContainer.setConnectionFactory(adapter); defaultMessageListenerContainer.setDestination(mqQueue); defaultMessageListenerContainer.setMessageListener(listener); defaultMessageListenerContainer.setExceptionListener(ntfmDlndMsgErrorListener); defaultMessageListenerContainer.setErrorHandler(ntfmDlndErrorHandle); defaultMessageListenerContainer.setConcurrentConsumers(1); defaultMessageListenerContainer.setConcurrency(&quot;1&quot;); return defaultMessageListenerContainer; &#125; @Bean(name=&quot;APFE&quot;) public MQQueue mqueueAPFE()&#123; MQQueue mqQueue = new MQQueue(); try &#123; mqQueue.setBaseQueueName(&quot;APFE.TO.ZSJN&quot;); mqQueue.setBaseQueueManagerName(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueue; &#125; //对队列进行监听 @Bean(name=&quot;APFE-MsgContainer&quot;) public DefaultMessageListenerContainer msgContainerAPFE(@Qualifier(&quot;userCredentialsConnectionFactoryAdapter&quot;) UserCredentialsConnectionFactoryAdapter adapter, @Qualifier(value = &quot;APFE&quot;) MQQueue mqQueue, NtfmDlndMsgListener listener)&#123; DefaultMessageListenerContainer defaultMessageListenerContainer = new DefaultMessageListenerContainer(); defaultMessageListenerContainer.setConnectionFactory(adapter); defaultMessageListenerContainer.setDestination(mqQueue); defaultMessageListenerContainer.setMessageListener(listener); defaultMessageListenerContainer.setExceptionListener(ntfmDlndMsgErrorListener); defaultMessageListenerContainer.setErrorHandler(ntfmDlndErrorHandle); defaultMessageListenerContainer.setConcurrentConsumers(1); defaultMessageListenerContainer.setConcurrency(&quot;1&quot;); return defaultMessageListenerContainer; &#125; @Bean(name=&quot;FTMI&quot;) public MQQueue mqueueFTMI()&#123; MQQueue mqQueue = new MQQueue(); try &#123; mqQueue.setBaseQueueName(&quot;FTMI.TO.ZSJN&quot;); mqQueue.setBaseQueueManagerName(queue_manager); &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; return mqQueue; &#125; //对队列进行监听 @Bean(name=&quot;FTMI-MsgContainer&quot;) public DefaultMessageListenerContainer msgContainerFTMI(@Qualifier(&quot;userCredentialsConnectionFactoryAdapter&quot;) UserCredentialsConnectionFactoryAdapter adapter, @Qualifier(value = &quot;FTMI&quot;) MQQueue mqQueue, NtfmDlndMsgListener listener)&#123; DefaultMessageListenerContainer defaultMessageListenerContainer = new DefaultMessageListenerContainer(); defaultMessageListenerContainer.setConnectionFactory(adapter); defaultMessageListenerContainer.setDestination(mqQueue); defaultMessageListenerContainer.setMessageListener(listener); defaultMessageListenerContainer.setExceptionListener(ntfmDlndMsgErrorListener); defaultMessageListenerContainer.setErrorHandler(ntfmDlndErrorHandle); defaultMessageListenerContainer.setConcurrentConsumers(1); defaultMessageListenerContainer.setConcurrency(&quot;1&quot;); return defaultMessageListenerContainer; &#125; &#125; 消息处理package cn.sh.cares.exec.service.impl; import cn.sh.cares.exec.service.NtfmDlndMsgPersist; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Service; import javax.annotation.Resource; import javax.jms.*; import java.nio.charset.StandardCharsets; /** * @author wangcj * @desc * @date 2021/5/10 15:11 **/ @Slf4j @Service public class NtfmDlndMsgListener implements MessageListener &#123; @Resource NtfmDlndMsgPersist msgPersist; @Override public void onMessage(Message message) &#123; String str = null; // 1、读取报文 try &#123; if (message instanceof BytesMessage) &#123; BytesMessage bm = (BytesMessage) message; byte[] bys = null; bys = new byte[(int) bm.getBodyLength()]; bm.readBytes(bys); str = new String(bys, StandardCharsets.UTF_8); &#125; else &#123; str = ((TextMessage) message).getText(); &#125; &#125; catch (JMSException e) &#123; e.printStackTrace(); &#125; log.debug(&quot;收到下行消息 ：：&#123;&#125;&quot;, str); // TODO 消息解析入库 try &#123; msgPersist.storeMsg(str); &#125; catch (Exception e) &#123; log.error(&quot;下行消息持久化异常&quot;, e); &#125; &#125; &#125; 断线重连测试消息监听容器使用 DefaultMessageListenerContainer 而不是 SimpleMessageListenerContainer，SimpleMessageListenerContainer 无法断线重连。 DefaultMessageListenerContainer 断线后默认是5秒重连一次，时间间隔可设置 单位 ：毫秒 defaultMessageListenerContainer.setRecoveryInterval(6000);搭建docker环境测试","categories":[{"name":"SPRINGBOOT ","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"IBMMQ","slug":"IBMMQ","permalink":"http://wangcj.com.cn/tags/IBMMQ/"},{"name":"发送IBMMQ","slug":"发送IBMMQ","permalink":"http://wangcj.com.cn/tags/%E5%8F%91%E9%80%81IBMMQ/"},{"name":"监听IBMMQ","slug":"监听IBMMQ","permalink":"http://wangcj.com.cn/tags/%E7%9B%91%E5%90%ACIBMMQ/"}],"author":"王长金"},{"title":"JNI 调用热敏打印机","slug":"JNI-调用热敏打印机","date":"2021-05-06T06:50:00.000Z","updated":"2021-05-06T07:01:13.000Z","comments":true,"path":"2021/05/06/JNI-调用热敏打印机/","link":"","permalink":"http://wangcj.com.cn/2021/05/06/JNI-%E8%B0%83%E7%94%A8%E7%83%AD%E6%95%8F%E6%89%93%E5%8D%B0%E6%9C%BA/","excerpt":"","text":"环境打印机是美松的热敏打印机，厂商只提供动态库和demo。 win10 1909 + vs2017 java 本地方法参考demo中的代码，写好java接口 package com.cares.msprint; /** * @author wangcj * @desc * @date 2021/4/28 16:21 **/ public class MsPrintSdk &#123; public static native int SetPrintport(String strPort, int iBaudrate); public static native int SetUsbportauto(); public static native int SetInit(); public static native int SetClean(); public static native int SetClose(); public static native int SetAlignment(int iAlignment); public static native int SetAlignmentLeftRight(int iAlignment); public static native int SetSizetext(int iHeight, int iWidth); public static native int SetSizechar(int iHeight, int iWidth, int iUnderline, int iAsciitype); public static native int SetSizechinese(int iHeight, int iWidth, int iUnderline, int iChinesetype); public static native int SetLinespace(int iLinespace); public static native int SetBold(int iBold); public static native int SetSpacechar(int iSpace); public static native int SetSpacechinese(int iChsleftspace, int iChsrightspace); public static native int SetNvbmp(int iNums, String strPath); public static native int SetMarkoffsetcut(int iOffset); public static native int SetMarkoffsetprint(int iOffset); public static native int SetLeftmargin(int iLeftspace); public static native int SetDirection(int iDirection); public static native int SetItalic(int iItalic); public static native int SetRotate(int iRotate); public static native int SetWhitemodel(int iWhite); public static native int SetCommandmode(int iMode); public static native int SetUnderline(int underline); public static native int SetReadZKmode(int mode); public static native int SetHTseat(String bHTseat, int iLength); public static native int PrintNextHT(); public static native int PrintSelfcheck(); public static native int PrintString(String strData, int iImme); public static native int PrintFeedline(int iLine); public static native int PrintCutpaper(int iMode); public static native int PrintQrcode(String strData, int iLmargin, int iMside, int iRound); public static native int PrintQRcode500II(int iwidth, String strData); public static native int Print1Dbar(int iWidth, int iHeight, int iHrisize, int iHriseat, int iCodetype, String strData); public static native int PrintPdf417(int iDotwidth, int iDotheight, int iDatarows, int iDatacolumns, String strData); public static native int PrintDiskbmpfile(String strPath); public static native int PrintNvmbp(int iNvindex, int iMode); public static native int PrintMarkposition(); public static native int PrintMarkpositionprint(); public static native int PrintMarkpositioncut(); public static native int PrintMarkcutpaper(int iMode); public static native int PrintTransmit(String bCmd, int iLength); public static native int PrintChangeRow(); public static native int PrintRemainQR(); public static native int PrintFeedDot(int Lnumber); public static native String GetProductinformation(int iFstype); public static native int GetTransmit(String bCmd, int iLength, String bRecv, int iRelen); public static native int GetStatus(); public static native int GetStatusspecial(); public static native int GetSDKinformation(String bInfodata); public static native int SetRotation_Intomode(); public static native int PrintRotation_Data(); public static native int PrintRotation_Sendtext(String strData, int iImme); public static native int PrintRotation_Sendcode(int leftspace, int iWidth, int iHeight, int iCodetype, String strData); public static native int PrintRotation_Changeline(); public static native int SetRotation_Leftspace(int iLeftspace); public static native int SetPrintIDorName(String strIDorNAME); public static native String GetPrintIDorName(); public static native int SetComportauto(); public static native int SetPrintportFlowCtrl(int iFlowCtrlFlag); public static native void SetTraceLog(int iLog); public static native int PrintPDF_CCCB_A(String strPath); public static native int PrintPDF_CCCB_B(String strPath); public static native int GetStatus_TS(); public static native int SetPrintConn(int iConnWay, String strName, String strValue); public static native int PrintDataMatrix(String strData, int iSize); &#125; 使用javah 生成头文件/* DO NOT EDIT THIS FILE - it is machine generated */ #include &lt;jni.h&gt; /* Header for class com_cares_msprint_MsPrintSdk */ #ifndef _Included_com_cares_msprint_MsPrintSdk #define _Included_com_cares_msprint_MsPrintSdk #ifdef __cplusplus extern &quot;C&quot; &#123; #endif /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintport * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintport (JNIEnv *, jclass, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetUsbportauto * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetUsbportauto (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetInit * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetInit (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetClean * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetClean (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetClose * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetClose (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetAlignment * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetAlignment (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetAlignmentLeftRight * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetAlignmentLeftRight (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizetext * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizetext (JNIEnv *, jclass, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizechar * Signature: (IIII)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizechar (JNIEnv *, jclass, jint, jint, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizechinese * Signature: (IIII)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizechinese (JNIEnv *, jclass, jint, jint, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetLinespace * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetLinespace (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetBold * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetBold (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSpacechar * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSpacechar (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSpacechinese * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSpacechinese (JNIEnv *, jclass, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetNvbmp * Signature: (ILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetNvbmp (JNIEnv *, jclass, jint, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetMarkoffsetcut * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetMarkoffsetcut (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetMarkoffsetprint * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetMarkoffsetprint (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetLeftmargin * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetLeftmargin (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetDirection * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetDirection (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetItalic * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetItalic (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotate * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotate (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetWhitemodel * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetWhitemodel (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetCommandmode * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetCommandmode (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetUnderline * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetUnderline (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetReadZKmode * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetReadZKmode (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetHTseat * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetHTseat (JNIEnv *, jclass, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintNextHT * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintNextHT (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintSelfcheck * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintSelfcheck (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintString * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintString (JNIEnv *, jclass, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintFeedline * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintFeedline (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintCutpaper * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintCutpaper (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintQrcode * Signature: (Ljava/lang/String;III)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintQrcode (JNIEnv *, jclass, jstring, jint, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintQRcode500II * Signature: (ILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintQRcode500II (JNIEnv *, jclass, jint, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: Print1Dbar * Signature: (IIIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_Print1Dbar (JNIEnv *, jclass, jint, jint, jint, jint, jint, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPdf417 * Signature: (IIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPdf417 (JNIEnv *, jclass, jint, jint, jint, jint, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintDiskbmpfile * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintDiskbmpfile (JNIEnv *, jclass, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintNvmbp * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintNvmbp (JNIEnv *, jclass, jint, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkposition * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkposition (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkpositionprint * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkpositionprint (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkpositioncut * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkpositioncut (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkcutpaper * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkcutpaper (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintTransmit * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintTransmit (JNIEnv *, jclass, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintChangeRow * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintChangeRow (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRemainQR * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRemainQR (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintFeedDot * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintFeedDot (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetProductinformation * Signature: (ILjava/lang/String;I)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetProductinformation (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetTransmit * Signature: (Ljava/lang/String;ILjava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetTransmit (JNIEnv *, jclass, jstring, jint, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatus * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatus (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatusspecial * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatusspecial (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetSDKinformation * Signature: (Ljava/lang/String;)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetSDKinformation (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotation_Intomode * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotation_1Intomode (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Data * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Data (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Sendtext * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Sendtext (JNIEnv *, jclass, jstring, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Sendcode * Signature: (IIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Sendcode (JNIEnv *, jclass, jint, jint, jint, jint, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Changeline * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Changeline (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotation_Leftspace * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotation_1Leftspace (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintIDorName * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintIDorName (JNIEnv *, jclass, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetPrintIDorName * Signature: (Ljava/lang/String;)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetPrintIDorName (JNIEnv *, jclass, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetComportauto * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetComportauto (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintportFlowCtrl * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintportFlowCtrl (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetTraceLog * Signature: (I)V */ JNIEXPORT void JNICALL Java_com_cares_msprint_MsPrintSdk_SetTraceLog (JNIEnv *, jclass, jint); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPDF_CCCB_A * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPDF_1CCCB_1A (JNIEnv *, jclass, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPDF_CCCB_B * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPDF_1CCCB_1B (JNIEnv *, jclass, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatus_TS * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatus_1TS (JNIEnv *, jclass); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintConn * Signature: (ILjava/lang/String;Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintConn (JNIEnv *, jclass, jint, jstring, jstring); /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintDataMatrix * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintDataMatrix (JNIEnv *, jclass, jstring, jint); #ifdef __cplusplus &#125; #endif #endif 新建vs空白工程工程构建目标设置为dll，添加jdk的头文件和美松的sdk头文件 jni实现#include &quot;com_cares_msprint_MsPrintSdk.h&quot; #include &quot;Msprintsdk.h&quot; #include &quot;windows.h&quot; #include &quot;tchar.h&quot; JavaVM * g_jvm = NULL; HINSTANCE m_hInstancePrint; char* jstringTostring(JNIEnv* env, jstring jstr); /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintport * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintport (JNIEnv *env, jclass, jstring strPort, jint iBaudrate) &#123; const char* c = env-&gt;GetStringUTFChars(strPort, false); return SetPrintport(c,iBaudrate); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetUsbportauto * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetUsbportauto (JNIEnv *env, jclass) &#123; return SetUsbportauto(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetInit * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetInit (JNIEnv *env, jclass) &#123; return SetInit(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetClean * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetClean (JNIEnv *env, jclass) &#123; return SetClean(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetClose * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetClose (JNIEnv *, jclass) &#123; return SetClose(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetAlignment * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetAlignment (JNIEnv *, jclass, jint iAlignment) &#123; return SetAlignment(iAlignment); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetAlignmentLeftRight * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetAlignmentLeftRight (JNIEnv *, jclass, jint iAlignment) &#123; return SetAlignmentLeftRight(iAlignment); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizetext * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizetext (JNIEnv *, jclass, jint iHeight, jint iWidth) &#123; return SetSizetext(iHeight, iWidth); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizechar * Signature: (IIII)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizechar (JNIEnv *, jclass, jint iHeight, jint iWidth, jint iUnderline, jint iAsciitype) &#123; return SetSizechar(iHeight, iWidth, iUnderline, iAsciitype); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSizechinese * Signature: (IIII)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSizechinese (JNIEnv *, jclass, jint iHeight, jint iWidth, jint iUnderline, jint iChineseType) &#123; return SetSizechinese(iHeight, iWidth, iUnderline, iChineseType); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetLinespace * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetLinespace (JNIEnv *, jclass, jint iLineSpace) &#123; return SetLinespace(iLineSpace); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetBold * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetBold (JNIEnv *, jclass, jint iBold) &#123; return SetBold(iBold); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSpacechar * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSpacechar (JNIEnv *, jclass, jint iSpace) &#123; return SetSpacechar(iSpace); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetSpacechinese * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetSpacechinese (JNIEnv *, jclass, jint left, jint right) &#123; return SetSpacechinese(left, right); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetNvbmp * Signature: (ILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetNvbmp (JNIEnv *env, jclass, jint nums, jstring strPath) &#123; const char* path = env-&gt;GetStringUTFChars(strPath,0); return SetNvbmp(nums,path); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetMarkoffsetcut * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetMarkoffsetcut (JNIEnv *, jclass, jint offset) &#123; return SetMarkoffsetcut(offset); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetMarkoffsetprint * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetMarkoffsetprint (JNIEnv *, jclass, jint offset) &#123; return SetMarkoffsetprint(offset); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetLeftmargin * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetLeftmargin (JNIEnv *, jclass, jint left) &#123; return SetLeftmargin(left); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetDirection * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetDirection (JNIEnv *, jclass, jint dir) &#123; return SetDirection(dir); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetItalic * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetItalic (JNIEnv *, jclass, jint i) &#123; return SetItalic(i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotate * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotate (JNIEnv *, jclass, jint i) &#123; return SetRotate(i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetWhitemodel * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetWhitemodel (JNIEnv *, jclass, jint i) &#123; return SetWhitemodel(i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetCommandmode * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetCommandmode (JNIEnv *, jclass, jint mode) &#123; return SetCommandmode(mode); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetUnderline * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetUnderline (JNIEnv *, jclass, jint i) &#123; return SetUnderline(i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetReadZKmode * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetReadZKmode (JNIEnv *, jclass, jint mode) &#123; return SetReadZKmode(mode); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetHTseat * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetHTseat (JNIEnv *env, jclass, jstring set, jint len) &#123; const char* setstr = env-&gt;GetStringUTFChars(set, 0); return SetHTseat(setstr,len); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintNextHT * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintNextHT (JNIEnv *, jclass) &#123; return PrintNextHT(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintSelfcheck * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintSelfcheck (JNIEnv *, jclass) &#123; return PrintSelfcheck(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintString * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintString (JNIEnv *env, jclass, jstring c, jint i) &#123; const char* data = jstringTostring(env, c); int res = PrintString(data, i); free((void*)data); return res; &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintFeedline * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintFeedline (JNIEnv *, jclass, jint i) &#123; return PrintFeedline(i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintCutpaper * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintCutpaper (JNIEnv *, jclass, jint m) &#123; return PrintCutpaper(m); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintQrcode * Signature: (Ljava/lang/String;III)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintQrcode (JNIEnv *env, jclass, jstring data, jint margin, jint side, jint round) &#123; const char* code = env-&gt;GetStringUTFChars(data, 0); return PrintQrcode(code, margin, side, round); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintQRcode500II * Signature: (ILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintQRcode500II (JNIEnv *env, jclass, jint width, jstring data) &#123; const char* code = env-&gt;GetStringUTFChars(data, 0); return PrintQRcode500II(width, code); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: Print1Dbar * Signature: (IIIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_Print1Dbar (JNIEnv *env, jclass, jint width, jint height, jint size, jint seat, jint type, jstring data) &#123; const char* code = env-&gt;GetStringUTFChars(data, 0); return Print1Dbar(width, height, size, seat, type, code); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPdf417 * Signature: (IIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPdf417 (JNIEnv *env, jclass, jint width, jint height, jint rows, jint cols, jstring data) &#123; const char* code = env-&gt;GetStringUTFChars(data, 0); return PrintPdf417(width, height, rows, cols, code); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintDiskbmpfile * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintDiskbmpfile (JNIEnv *env, jclass, jstring data) &#123; const char* code = env-&gt;GetStringUTFChars(data, 0); return PrintDiskbmpfile(code); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintNvmbp * Signature: (II)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintNvmbp (JNIEnv *, jclass, jint idx, jint mode) &#123; return PrintNvmbp(idx,mode); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkposition * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkposition (JNIEnv *, jclass) &#123; return PrintMarkposition(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkpositionprint * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkpositionprint (JNIEnv *, jclass) &#123; return PrintMarkpositionprint(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkpositioncut * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkpositioncut (JNIEnv *, jclass) &#123; return PrintMarkpositioncut(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintMarkcutpaper * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintMarkcutpaper (JNIEnv *, jclass, jint mode) &#123; return PrintMarkcutpaper(mode); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintTransmit * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintTransmit (JNIEnv *env, jclass, jstring cmd, jint len) &#123; const char* code = env-&gt;GetStringUTFChars(cmd, 0); return PrintTransmit(code, len); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintChangeRow * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintChangeRow (JNIEnv *, jclass) &#123; return PrintChangeRow(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRemainQR * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRemainQR (JNIEnv *, jclass) &#123; return PrintRemainQR(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintFeedDot * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintFeedDot (JNIEnv *, jclass, jint num) &#123; return PrintFeedDot(num); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetProductinformation * Signature: (ILjava/lang/String;I)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetProductinformation (JNIEnv *env, jclass, jint) &#123; int iLen = 0; char bFiddata[30] = &#123; 0 &#125;; int r = GetProductinformation(3, bFiddata, iLen); if (0 == r) &#123; return env-&gt;NewStringUTF(bFiddata); &#125; return nullptr; &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetTransmit * Signature: (Ljava/lang/String;ILjava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetTransmit (JNIEnv *, jclass, jstring, jint, jstring, jint) &#123; // 暂不实现 return 0; &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatus * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatus (JNIEnv *, jclass) &#123; return GetStatus(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatusspecial * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatusspecial (JNIEnv *, jclass) &#123; return GetStatusspecial(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetSDKinformation * Signature: (Ljava/lang/String;)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetSDKinformation (JNIEnv *env, jclass) &#123; char bInfodata[20] = &#123; 0 &#125;; int r = GetSDKinformation(bInfodata); if (r == 0) &#123; return env-&gt;NewStringUTF(bInfodata); &#125; return nullptr; &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotation_Intomode * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotation_1Intomode (JNIEnv *, jclass) &#123; return SetRotation_Intomode(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Data * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Data (JNIEnv *, jclass) &#123; return PrintRotation_Data(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Sendtext * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Sendtext (JNIEnv *env, jclass, jstring text, jint i) &#123; const unsigned char* str = (unsigned char*)env-&gt;GetStringUTFChars(text, 0); return PrintRotation_Sendtext(str, i); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Sendcode * Signature: (IIIILjava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Sendcode (JNIEnv *env, jclass, jint iLeftspace, jint height, jint width, jint codeType, jstring strData) &#123; const char* data = env-&gt;GetStringUTFChars(strData,0); return PrintRotation_Sendcode(iLeftspace, height, width, codeType, data); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintRotation_Changeline * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintRotation_1Changeline (JNIEnv *, jclass) &#123; return PrintRotation_Changeline(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetRotation_Leftspace * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetRotation_1Leftspace (JNIEnv *, jclass, jint iLeftspace) &#123; return SetRotation_Leftspace(iLeftspace); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintIDorName * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintIDorName (JNIEnv *env, jclass, jstring strIDorNAME) &#123; const char* idname = env-&gt;GetStringUTFChars(strIDorNAME, 0); return SetPrintIDorName(idname); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetPrintIDorName * Signature: (Ljava/lang/String;)I */ JNIEXPORT jstring JNICALL Java_com_cares_msprint_MsPrintSdk_GetPrintIDorName (JNIEnv *env, jclass) &#123; char recv[100] = &#123; 0 &#125;; int res = GetPrintIDorName(recv); if (res != 0) &#123; return nullptr; &#125; jstring str = env-&gt;NewStringUTF(recv); return str; &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetComportauto * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetComportauto (JNIEnv *, jclass) &#123; return SetComportauto(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintportFlowCtrl * Signature: (I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintportFlowCtrl (JNIEnv *, jclass, jint iFlowCtrlFlag) &#123; return SetPrintportFlowCtrl(iFlowCtrlFlag); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetTraceLog * Signature: (I)V */ JNIEXPORT void JNICALL Java_com_cares_msprint_MsPrintSdk_SetTraceLog (JNIEnv *, jclass, jint iLog) &#123; return SetTraceLog(iLog); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPDF_CCCB_A * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPDF_1CCCB_1A (JNIEnv *env, jclass, jstring path) &#123; const char* strPath = env-&gt;GetStringUTFChars(path, 0); return PrintPDF_CCCB_A(strPath); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintPDF_CCCB_B * Signature: (Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintPDF_1CCCB_1B (JNIEnv *env, jclass, jstring path) &#123; const char* strPath = env-&gt;GetStringUTFChars(path, 0); return PrintPDF_CCCB_B(strPath); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: GetStatus_TS * Signature: ()I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_GetStatus_1TS (JNIEnv *, jclass) &#123; return GetStatus_TS(); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: SetPrintConn * Signature: (ILjava/lang/String;Ljava/lang/String;)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_SetPrintConn (JNIEnv *env, jclass, jint iConnWay, jstring strName, jstring strValue) &#123; const char* key = env-&gt;GetStringUTFChars(strName,0); const char* value = env-&gt;GetStringUTFChars(strValue, 0); return SetPrintConn(iConnWay,key,value); &#125; /* * Class: com_cares_msprint_MsPrintSdk * Method: PrintDataMatrix * Signature: (Ljava/lang/String;I)I */ JNIEXPORT jint JNICALL Java_com_cares_msprint_MsPrintSdk_PrintDataMatrix (JNIEnv *env, jclass, jstring strData, jint iSize) &#123; const char* chs = env-&gt;GetStringUTFChars(strData,0); return PrintDataMatrix(chs, iSize); &#125; JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved) &#123; JNIEnv *env = NULL; jint result = -1; // 加载 打印机函数 m_hInstancePrint = LoadLibrary(&quot;Msprintsdk.dll&quot;); if (m_hInstancePrint != NULL) &#123; SetPrintport = (int(*)(const char* strPort, int iBaudrate))GetProcAddress(m_hInstancePrint, &quot;SetPrintport&quot;); SetInit = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetInit&quot;); SetUsbportauto = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetUsbportauto&quot;); SetClose = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetClose&quot;); SetClean = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetClean&quot;); SetAlignment = (int(*)(int iAlignment))GetProcAddress(m_hInstancePrint, &quot;SetAlignment&quot;); SetAlignmentLeftRight = (int(*)(int iAlignment))GetProcAddress(m_hInstancePrint, &quot;SetAlignmentLeftRight&quot;); SetSizetext = (int(*)(int iHeight, int iWidth))GetProcAddress(m_hInstancePrint, &quot;SetSizetext&quot;); SetSizechar = (int(*)(int iHeight, int iWidth, int iUnderline, int iAsciitype))GetProcAddress(m_hInstancePrint, &quot;SetSizechar&quot;); SetSizechinese = (int(*)(int iHeight, int iWidth, int iUnderline, int iChinesetype))GetProcAddress(m_hInstancePrint, &quot;SetSizechinese&quot;); SetLinespace = (int(*)(int iLinespace))GetProcAddress(m_hInstancePrint, &quot;SetLinespace&quot;); SetBold = (int(*)(int iBold))GetProcAddress(m_hInstancePrint, &quot;SetBold&quot;); SetSpacechar = (int(*)(int iSpace))GetProcAddress(m_hInstancePrint, &quot;SetSpacechar&quot;); SetSpacechinese = (int(*)(int iChsleftspace, int iChsrightspace))GetProcAddress(m_hInstancePrint, &quot;SetSpacechinese&quot;); SetNvbmp = (int(*)(int iNums, const char* strPath))GetProcAddress(m_hInstancePrint, &quot;SetNvbmp&quot;); SetReadZKmode = (int(*)(int mode))GetProcAddress(m_hInstancePrint, &quot;SetReadZKmode&quot;); SetHTseat = (int(*)(const char* bHTseat, int iLength))GetProcAddress(m_hInstancePrint, &quot;SetHTseat&quot;); PrintNextHT = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintNextHT&quot;); PrintNvmbp = (int(*)(int iNvindex, int iMode))GetProcAddress(m_hInstancePrint, &quot;PrintNvmbp&quot;); PrintSelfcheck = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintSelfcheck&quot;); PrintString = (int(*)(const char* strData, int iImme))GetProcAddress(m_hInstancePrint, &quot;PrintString&quot;); PrintFeedline = (int(*)(int iLine))GetProcAddress(m_hInstancePrint, &quot;PrintFeedline&quot;); PrintQrcode = (int(*)(const char* strData, int iLmargin, int iMside, int iRound))GetProcAddress(m_hInstancePrint, &quot;PrintQrcode&quot;); PrintCutpaper = (int(*)(int iMode))GetProcAddress(m_hInstancePrint, &quot;PrintCutpaper&quot;); PrintMarkposition = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintMarkposition&quot;); PrintMarkcutpaper = (int(*)(int iMode))GetProcAddress(m_hInstancePrint, &quot;PrintMarkcutpaper&quot;); PrintDiskbmpfile = (int(*)(const char* strPath))GetProcAddress(m_hInstancePrint, &quot;PrintDiskbmpfile&quot;); PrintTransmit = (int(*)(const char* bCmd, int iLength))GetProcAddress(m_hInstancePrint, &quot;PrintTransmit&quot;); PrintRemainQR = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintRemainQR&quot;); SetCommandmode = (int(*)(int iMode))GetProcAddress(m_hInstancePrint, &quot;SetCommandmode&quot;); GetTransmit = (int(*)(const char* bCmd, int iLength, char* bRecv, int iRelen))GetProcAddress(m_hInstancePrint, &quot;GetTransmit&quot;); GetStatus = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;GetStatus&quot;); GetProductinformation = (int(*)(int iFstype, char *bFiddata, int iFidlen))GetProcAddress(m_hInstancePrint, &quot;GetProductinformation&quot;); Print1Dbar = (int(*)(int iWidth, int iHeight, int iHrisize, int iHriseat, int iCodetype, const char* strData))GetProcAddress(m_hInstancePrint, &quot;Print1Dbar&quot;); GetSDKinformation = (int(*)(char *bInfodata))GetProcAddress(m_hInstancePrint, &quot;GetSDKinformation&quot;); SetRotation_Intomode = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetRotation_Intomode&quot;); PrintRotation_Data = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintRotation_Data&quot;); PrintRotation_Sendtext = (int(*)(const unsigned char* strData, int iImme))GetProcAddress(m_hInstancePrint, &quot;PrintRotation_Sendtext&quot;); PrintRotation_Sendcode = (int(*)(int leftspace, int iWidth, int iHeight, int iCodetype, const char* strData))GetProcAddress(m_hInstancePrint, &quot;PrintRotation_Sendcode&quot;); PrintRotation_Changeline = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;PrintRotation_Changeline&quot;); SetRotation_Leftspace = (int(*)(int iLeftspace))GetProcAddress(m_hInstancePrint, &quot;SetRotation_Leftspace&quot;); SetPrintIDorName = (int(*)(const char* strIDorNAME))GetProcAddress(m_hInstancePrint, &quot;SetPrintIDorName&quot;); GetPrintIDorName = (int(*)(char* strIDorNAME))GetProcAddress(m_hInstancePrint, &quot;GetPrintIDorName&quot;); SetLeftmargin = (int(*)(int iLeftspace))GetProcAddress(m_hInstancePrint, &quot;SetLeftmargin&quot;); SetComportauto = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;SetComportauto&quot;); SetPrintportFlowCtrl = (int(*)(int iFlowCtrlFlag))GetProcAddress(m_hInstancePrint, &quot;SetPrintportFlowCtrl&quot;); PrintFeedDot = (int(*)(int Lnumber))GetProcAddress(m_hInstancePrint, &quot;PrintFeedDot&quot;); SetTraceLog = (void(*)(int iLog))GetProcAddress(m_hInstancePrint, &quot;SetTraceLog&quot;); PrintPDF_CCCB_A = (int(*)(const char* strPath))GetProcAddress(m_hInstancePrint, &quot;PrintPDF_CCCB_A&quot;); PrintPDF_CCCB_B = (int(*)(const char* strPath))GetProcAddress(m_hInstancePrint, &quot;PrintPDF_CCCB_B&quot;); GetStatus_TS = (int(*)(void))GetProcAddress(m_hInstancePrint, &quot;GetStatus_TS&quot;); SetPrintConn = (int(*)(int iConnWay, const char *strName, const char *strValue))GetProcAddress(m_hInstancePrint, &quot;SetPrintConn&quot;); PrintDataMatrix = (int(*)(const char* strData, int iSize))GetProcAddress(m_hInstancePrint, &quot;PrintDataMatrix&quot;); PrintQRcode500II = (int(*)(int iwidth, const char* strData))GetProcAddress(m_hInstancePrint, &quot;PrintQRcode500II&quot;); PrintPdf417 = (int(*)(int iDotwidth, int iDotheight, int iDatarows, int iDatacolumns, const char* strData))GetProcAddress(m_hInstancePrint, &quot;PrintPdf417&quot;); SetTraceLog(1); &#125; else &#123; printf(&quot;Loading DLL file failed!\\n&quot;); fflush(stdout); return -1; &#125; if (jvm-&gt;GetEnv((void **)&amp;env, JNI_VERSION_1_4) != JNI_OK) &#123; return -1; &#125; g_jvm = jvm; result = JNI_VERSION_1_8; printf(&quot;JNI_OnLoad sucess\\n&quot;); fflush(stdout); return result; &#125; char* jstringTostring(JNIEnv* env, jstring jstr) &#123; int length = env-&gt;GetStringLength(jstr); const jchar* jcstr = env-&gt;GetStringChars(jstr, 0); char* rtn = (char*)malloc(length * 2 + 1); int size = 0; size = WideCharToMultiByte(CP_ACP, 0, (LPCWSTR)jcstr, length, rtn, (length * 2 + 1), NULL, NULL); if (size &lt;= 0) return NULL; env-&gt;ReleaseStringChars(jstr, jcstr); rtn[size] = 0; return rtn; &#125; JNI 传中文字符char* jstringTostring(JNIEnv* env, jstring jstr) &#123; int length = env-&gt;GetStringLength(jstr); const jchar* jcstr = env-&gt;GetStringChars(jstr, 0); char* rtn = (char*)malloc(length * 2 + 1); int size = 0; size = WideCharToMultiByte(CP_ACP, 0, (LPCWSTR)jcstr, length, rtn, (length * 2 + 1), NULL, NULL); if (size &lt;= 0) return NULL; env-&gt;ReleaseStringChars(jstr, jcstr); rtn[size] = 0; return rtn; &#125;使用完后注意 free java 测试代码public class PrinterTest &#123; public static void main(String[] args) &#123; int res=-1; System.loadLibrary(&quot;MsPrintSdkJni&quot;); res = MsPrintSdk.SetUsbportauto(); System.out.println(&quot;SetUsbportauto=&quot;+res); res=MsPrintSdk.SetInit(); System.out.println(&quot;SetInit=&quot;+res); MsPrintSdk.SetSizetext(2,2); res=MsPrintSdk.PrintString(&quot;测试中文测试中文测试中文测试中文测试中文测试中文测试中文测试中文测试中文\\n&quot;, 0); res=MsPrintSdk.PrintString(&quot;您前面有 2 人等候,注意业务窗口的呼叫号码信息。过号请重新取号。\\n&quot;, 0); System.out.println(&quot;PrintString=&quot;+res); PrintQrcode(&quot;QR Code:123456&quot;,27,8,0); MsPrintSdk.PrintFeedline(6); MsPrintSdk.PrintCutpaper(1); MsPrintSdk.SetClose(); &#125; &#125;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/tags/JNI/"},{"name":"热敏打印机","slug":"热敏打印机","permalink":"http://wangcj.com.cn/tags/%E7%83%AD%E6%95%8F%E6%89%93%E5%8D%B0%E6%9C%BA/"}],"author":"王长金"},{"title":"JCEF 添加MP4等视频的支持","slug":"JCEF-添加MP4等视频的支持","date":"2021-05-01T00:05:00.000Z","updated":"2021-05-01T00:43:17.000Z","comments":true,"path":"2021/05/01/JCEF-添加MP4等视频的支持/","link":"","permalink":"http://wangcj.com.cn/2021/05/01/JCEF-%E6%B7%BB%E5%8A%A0MP4%E7%AD%89%E8%A7%86%E9%A2%91%E7%9A%84%E6%94%AF%E6%8C%81/","excerpt":"","text":"jcef 使用的cef动态库是不支持MP4播放的，只支持完全开源的ogg格式，若要能播放MP4需要对 cef进行重新编译 撰写本文时，jcef最新版本用到的cef版本是88，官网最新的已经到91了，我们只能去编译jcef配套的88版本，以免出现兼容性问题和浪费时间。编译一次cef太费时间。 编译环境1.windows 10 专业版 20H2,I79750H,64GB RAM, 2T NVME SSD 2.ninja 3.cmake 4.visual studio 2019 community 5.300M宽带 6.忍者VPN，class for windows 安装 cft-tap 网卡，将流量全部从此网卡转发，免去配各种代理的麻烦 7.python 2.7+ 以上 ninja、cmake、python 的可执行文件添加到path 开始编译步骤基本参考官网 创建文件夹文件夹的名称不要包含特殊字符和除ASCII字符以外的字符，总体长度不要超过35，所在磁盘空闲空间最好有400GB c:\\code\\automate c:\\code\\chromium_git 下载depot_tools https://storage.googleapis.com/chrome-infra/depot_tools.zip将 depot_tools.zip复制到 c:\\code 下，winrar 解压到 depot_tools 文件夹 下载自动脚本 automate-git.py最好选择从对应的要编译的分支的目录去下载这个脚本，我比较了88和master（91）文件并没有区别 https://bitbucket.org/chromiumembedded/cef/raw/master/tools/automate/automate-git.py将下载的文件复制到 c:\\code\\automate 下 新建 构建脚本 update.bat#不构建debug版本，节约时间 --no-debug-build #MP4支持的重要设置 set GN_DEFINES=is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome GYP_DEFINES=buildtype=Official#构建88版本,如果构建master，此参数可不写 --branch=4324 #执行构建 --force-build构建32位版本set CEF_USE_GN=1 set GN_DEFINES=is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome set GYP_DEFINES=buildtype=Official set GYP_MSVS_VERSION=2019 set CEF_ARCHIVE_FORMAT=tar.bz2 set GN_ARGUMENTS=--ide=vs2019 --sln=cef --filters=//cef/* python ..\\automate\\automate-git.py --download-dir=c:\\code\\chromium_git --depot-tools-dir=c:\\code\\depot_tools --force-build --minimal-distrib --client-distrib --branch=4324 --no-debug-build 构建 64 位版本set CEF_USE_GN=1 set GN_DEFINES=is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome set GYP_DEFINES=buildtype=Official set GYP_MSVS_VERSION=2019 set CEF_ARCHIVE_FORMAT=tar.bz2 set GN_ARGUMENTS=--ide=vs2019 --sln=cef --filters=//cef/* python ..\\automate\\automate-git.py --download-dir=c:\\code\\chromium_git --depot-tools-dir=c:\\code\\depot_tools --force-build --x64-build --minimal-distrib --client-distrib --branch=4324 --no-debug-build打开cmd窗口，执行update.bat 脚本等待构建完成，大概要24小时左右。构建完成，构建物在目录c:\\code\\chromium_git\\chromium\\src\\cef\\binary_distrib下 测试构建生成目录c:\\code\\chromium_git\\chromium\\src\\cef\\binary_distrib下的win32 client,打开client.exe,输入有mp4的url，发现可以播放mp4了 将win32 client 下的动态库替换jcef构建包里的动态库，jcef with mp4 support ready.","categories":[{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/categories/JCEF/"}],"tags":[{"name":"mp4播放支持","slug":"mp4播放支持","permalink":"http://wangcj.com.cn/tags/mp4%E6%92%AD%E6%94%BE%E6%94%AF%E6%8C%81/"},{"name":"cef编译","slug":"cef编译","permalink":"http://wangcj.com.cn/tags/cef%E7%BC%96%E8%AF%91/"}],"author":"王长金"},{"title":"通过 Oracle AQ  监控表的变化","slug":"通过-Oracle-AQ-监控表的变化","date":"2021-04-29T08:43:06.000Z","updated":"2021-04-29T08:55:43.000Z","comments":true,"path":"2021/04/29/通过-Oracle-AQ-监控表的变化/","link":"","permalink":"http://wangcj.com.cn/2021/04/29/%E9%80%9A%E8%BF%87-Oracle-AQ-%E7%9B%91%E6%8E%A7%E8%A1%A8%E7%9A%84%E5%8F%98%E5%8C%96/","excerpt":"","text":"之前通过java代码去发送这个变化，这个方案的潜在问题是java代码可能阻塞导致表的数据更新变慢。当然也可以把变化通过 oracle java 代码发送到我们的队列中间件，但是数据库既然有，就用现成的。 获取相关权限grant execute on DBMS_AQ to sia; GRANT EXECUTE ANY PROCEDURE TO sia; GRANT aq_administrator_role TO sia; GRANT aq_user_role TO sia; GRANT EXECUTE ON dbms_aqadm TO sia; GRANT EXECUTE ON dbms_aq TO sia; GRANT EXECUTE ON dbms_aqin TO sia; 创建类型create type acdm_upload_queue_payload_type as object ( msgtype varchar2(20), message varchar2(4000) ); 创建队列表begin dbms_aqadm.create_queue_table( queue_table =&gt; &#39;acdm_upload_queue_table&#39;, queue_payload_type =&gt; &#39;acdm_upload_queue_payload_type&#39;, multiple_consumers =&gt; false ); end;创建队列begin dbms_aqadm.create_queue ( queue_name =&gt; &#39;ntfm_acdm_queue&#39;, queue_table =&gt; &#39;acdm_upload_queue_table&#39; ); dbms_aqadm.start_queue( queue_name =&gt; &#39;ntfm_acdm_queue&#39; ); end; 创建存储过程create or replace procedure aq_send_msg(queueName in varchar2,msgType in varchar2,msg in varchar2) is r_enqueue_options DBMS_AQ.ENQUEUE_OPTIONS_T; r_message_properties DBMS_AQ.MESSAGE_PROPERTIES_T; v_message_handle RAW(16); o_payload acdm_upload_queue_payload_type; begin o_payload := acdm_upload_queue_payload_type(msgType,msg); dbms_aq.enqueue( queue_name =&gt; queueName, enqueue_options =&gt; r_enqueue_options, message_properties =&gt; r_message_properties, payload =&gt; o_payload, msgid =&gt; v_message_handle ); end aq_send_msg; 创建触发器如果只监控指定的列的数据的变化，可以列出要监控的列 CREATE OR REPLACE TRIGGER TRI_ACDM_TD_FLIGHT AFTER INSERT OR UPDATE OF PLEG_REGNO, PLEG_FLTNO, PLEG_PLANE_TYPE, PLEG_CDM_WAKE, PLEG_VIP, PLEG_TYPE, PLEG_TM_PTD, PLEG_CDM_TOBT, PLEG_PARK_ARR, PLEG_TM_ATA, PLEG_BAG_TRANS_BELT_ARR, PLEG_CDM_AOBT, PLEG_PARK_DEP, PLEG_BRD_GATE, PLEG_TM_ATD ON AOC.TD_PLAN_LEG FOR EACH ROW DECLARE -- local variables here BEGIN -- 发送空管局 IF (:NEW.PLEG_CDM_TOBT != :OLD.PLEG_CDM_TOBT) THEN AQ_SEND_MSG(&#39;ntfm_acdm_queue&#39;, &#39;FCDM&#39;, :NEW.PLEG_ID || &#39;,&#39; || :NEW.PLEG_AP_THR_DEP); END IF; AQ_SEND_MSG(&#39;ntfm_acdm_queue&#39;, &#39;FLI&#39;, :NEW.PLEG_ID || &#39;,&#39; || :NEW.PLEG_AP_THR_DEP); -- 发送民航局 -- aq_send_msg(&#39;osccaac_acdm_queue&#39;,&#39;FLI&#39;,:new.pleg_id||&#39;,&#39;|| :new.pleg_ap_thr_dep); END TRI_ACDM_TD_FLIGHT;清空队列--- 清空队列 -- purge queue DECLARE po_t dbms_aqadm.aq$_purge_options_t; BEGIN dbms_aqadm.purge_queue_table(&#39;acdm_upload_queue_table&#39;, NULL, po_t); END;引入依赖这几个依赖去oracle 安装目录下找 &lt;dependency&gt; &lt;groupId&gt;com.oracle&lt;/groupId&gt; &lt;artifactId&gt;jmscommon&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/aqlib/jmscommon.jar&lt;/systemPath&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.oracle&lt;/groupId&gt; &lt;artifactId&gt;aqapi&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/aqlib/aqapi_g.jar&lt;/systemPath&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.oracle&lt;/groupId&gt; &lt;artifactId&gt;jta&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/aqlib/jta.jar&lt;/systemPath&gt; &lt;/dependency&gt; 数据类型转换类 public class OracleQueueMsgType implements CustomDatum, CustomDatumFactory &#123; public static final String _SQL_NAME = &quot;OracleQueueMsgType&quot;; public static final int _SQL_TYPECODE = OracleTypes.STRUCT; MutableStruct _struct; // 12表示字符串 static int[] _sqlType = &#123; 12,12 &#125;; static CustomDatumFactory[] _factory = new CustomDatumFactory[2]; static final OracleQueueMsgType _MessageFactory = new OracleQueueMsgType(); public static CustomDatumFactory getFactory() &#123; return _MessageFactory; &#125; public OracleQueueMsgType() &#123; _struct = new MutableStruct(new Object[2], _sqlType, _factory); &#125; public Datum toDatum(OracleConnection c) throws SQLException &#123; return _struct.toDatum(c, _SQL_NAME); &#125; public CustomDatum create(Datum d, int sqlType) throws SQLException &#123; if (d == null) return null; OracleQueueMsgType o = new OracleQueueMsgType(); o._struct = new MutableStruct((STRUCT) d, _sqlType, _factory); return o; &#125; public AqMsg getContent() throws SQLException &#123; String msgType = (String) _struct.getAttribute(0); String msg = (String) _struct.getAttribute(1); return new AqMsg(msgType,msg); &#125; &#125;Java 数据类型@Data @ToString public class AqMsg &#123; public AqMsg(String msgType, String msg) &#123; this.msgType = msgType; this.msg = msg; &#125; private String msgType; private String msg; &#125; 消息监听public class OracleMessageListener implements MessageListener &#123; @Resource FplnServiceImpl fplnService; @Resource FpdiServiceImpl fpdiService; @Resource FpaiServiceImpl fpaiService; @Override public void onMessage(Message message) &#123; System.out.println(&quot;ok&quot;); AQjmsAdtMessage adtMessage = (AQjmsAdtMessage) message; try &#123; OracleQueueMsgType payload = (OracleQueueMsgType) adtMessage.getAdtPayload(); AqMsg aqMsg = payload.getContent(); if (null == aqMsg) &#123; return; &#125; if (AqMsgTypeEnum.AMB.name().equals(aqMsg.getMsgType())) &#123; log.debug(&quot;收到航班动态数据变更通知 ambid=&#123;&#125;&quot;,aqMsg.getMsg()); fplnService.processAmb(Long.valueOf(aqMsg.getMsg())); &#125; else if (AqMsgTypeEnum.FLI.name().equals(aqMsg.getMsgType())) &#123; log.debug(&quot;收到航班属性数据的更新通知 msg=&#123;&#125;&quot;,aqMsg); processFlight(aqMsg.getMsg()); &#125; else if (AqMsgTypeEnum.GUA.name().equals(aqMsg.getMsgType())) &#123; log.debug(&quot;收到航班保障数据的更新通知 msg=&#123;&#125;&quot;,aqMsg); processFlight(aqMsg.getMsg()); &#125; else if (AqMsgTypeEnum.FCDM.name().equals(aqMsg.getMsgType())) &#123; log.debug(&quot;收到航班保障数据的更新通知 msg=&#123;&#125;&quot;,aqMsg); fpdiService.processFcdmById(Long.valueOf(aqMsg.getMsg().split(&quot;,&quot;)[0])); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; private void processFlight(String msg) &#123; String[] msgstr = msg.split(&quot;,&quot;); if (AIRPORT_CODE.equals(msgstr[1])) &#123; fpdiService.processById(Long.valueOf(msgstr[0])); &#125;else&#123; fpaiService.processById(Long.valueOf(msgstr[0])); &#125; &#125; &#125;","categories":[],"tags":[],"author":"王长金"},{"title":"人脸跟踪输出到 html 展示","slug":"人脸跟踪输出到-html-展示","date":"2021-04-28T01:24:00.000Z","updated":"2021-05-12T07:42:29.000Z","comments":true,"path":"2021/04/28/人脸跟踪输出到-html-展示/","link":"","permalink":"http://wangcj.com.cn/2021/04/28/%E4%BA%BA%E8%84%B8%E8%B7%9F%E8%B8%AA%E8%BE%93%E5%87%BA%E5%88%B0-html-%E5%B1%95%E7%A4%BA/","excerpt":"","text":"人脸跟踪回调函数 public int FrameCallBackData(int width, int height, int bytesPerPixel, int stride, byte[] data, String faces) &#123; // 暂无展示需求 opencv_core.IplImage iplImage = cvCreateImageHeader(cvSize(width, height), IPL_DEPTH_8U, 3); BytePointer bytePointer = new BytePointer(data); cvSetData(iplImage, bytePointer, ((width * 3) + 3) &gt;&gt; 2 &lt;&lt; 2); // 画人脸框 if (StringUtils.isNotEmpty(faces)) &#123; log.info(&quot;faces=&#123;&#125;&quot;, faces); List&lt;FacePos&gt; facePosList = transToFacePos(faces); int faceNum = facePosList.size(); for (int i = 0; i &lt; faceNum; i++) &#123; int left = facePosList.get(i).x; int top = facePosList.get(i).y; int right = left + facePosList.get(i).w; int bottom = top + facePosList.get(i).h; cvRectangle(iplImage, cvPoint(left, top), cvPoint(right, bottom), CV_RGB(255, 255, 0), 2, 1, 0 ); &#125; &#125; BufferedImage bufferedImage = Java2DFrameUtils.toBufferedImage(iplImage); ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(10240); try &#123; ImageIO.write(bufferedImage, &quot;jpg&quot;, byteArrayOutputStream); String base64 = Base64.encodeBase64String(byteArrayOutputStream.toByteArray()); CefBrowser cefBrowser = applicationContext.getBean(CefBrowser.class); cefBrowser.executeJavaScript(&quot;loadImg(&#39;&quot; + base64 + &quot;&#39;)&quot;, &quot;&quot;, 0); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; cvWaitKey(30); cvReleaseImageHeader(iplImage); return 0; &#125; 前端代码&lt;html&gt; &lt;body&gt; &lt;canvas id=&quot;screenshot&quot;&gt;&lt;/canvas&gt; &lt;script&gt; var img = new Image(); var screenshot = document.getElementById(&quot;screenshot&quot;); var ctx = screenshot.getContext(&#39;2d&#39;) img.onload = function (e) &#123; var i = e.currentTarget; screenshot.width = i.width; screenshot.height = i.height; ctx.clearRect(0, 0, screenshot.width, screenshot.height); ctx.drawImage(img, 0, 0, i.width, i.height); &#125; function loadImg(base64) &#123; img.src = &quot;data:image/png;base64,&quot; + base64; &#125; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 问题jcef 49 版本在一段时间后会发生白屏现象，将版本升级到88 则没有出现","categories":[{"name":"计算机视觉","slug":"计算机视觉","permalink":"http://wangcj.com.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"}],"tags":[{"name":"人脸跟踪","slug":"人脸跟踪","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8%E8%B7%9F%E8%B8%AA/"},{"name":"人脸web展示","slug":"人脸web展示","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8web%E5%B1%95%E7%A4%BA/"}],"author":"王长金"},{"title":"FFMPEG 视频格式转换","slug":"FFMPEG-视频格式转换","date":"2021-04-27T03:16:00.000Z","updated":"2021-04-27T03:19:07.000Z","comments":true,"path":"2021/04/27/FFMPEG-视频格式转换/","link":"","permalink":"http://wangcj.com.cn/2021/04/27/FFMPEG-%E8%A7%86%E9%A2%91%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/","excerpt":"","text":"mp4 to oggffmpeg -i source.mp4 -acodec libvorbis destination.ogg 3gp to aviffmpeg -i source.3gp -f avi -vcodec xvid -acodec mp3 -ar 22050 destination.aviflv to 3gpffmpeg -i source.flv -s 176×144 -vcodec h263 -r 25 -b 200 -ab 64 -acodec mp3 -ac 1 -ar 8000 destination.3gpflv to mp4ffmpeg -i source.flv -vcodec h264 -r 25 -b 200 -ab 128 -acodec mp3 -ac 2 -ar 44100 destination.mp3avi to mp4ffmpeg -i source.avi -f psp -r 29.97 -b 768k -ar 24000 -ab 64k -s 320×240 destination.mp4mp4 to 3gpffmpeg -i source.mp4 -s 176×144 -vcodec h263 -r 25 -b 12200 -ab 12200 -ac 1 -ar 8000 destination.3gpavi to 3gpffmpeg -i source.avi-s qcif -vcodec h263 -acodec mp3 -ac 1 -ar 8000 -r 25 -ab 32 -y destination.3gpmpg to 3gpffmpeg -i source.mpg -s qcif -vcodec h263 -acodec mp3 -ac 1 -ar 8000 -ab 32 -y destination.3gpffmpeg常用参数的介绍-i 指定要转换视频的源文件 -s 视频转换后视频的分辨率 -vcodec 视频转换时使用的编解码器 -r 视频转换换的桢率(默认25桢每秒) -b 视频转换换的bit率 -ab 音频转换后的bit率(默认64k) -acodec 制度音频使用的编码器 -ac 制定转换后音频的声道 -ar 音频转换后的采样率","categories":[{"name":"计算机视觉","slug":"计算机视觉","permalink":"http://wangcj.com.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"}],"tags":[{"name":"FFMPEG","slug":"FFMPEG","permalink":"http://wangcj.com.cn/tags/FFMPEG/"},{"name":"视频格式转换","slug":"视频格式转换","permalink":"http://wangcj.com.cn/tags/%E8%A7%86%E9%A2%91%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"}],"author":"王长金"},{"title":"JNI 方式调用瑞为人脸识别SDK","slug":"JNI-方式调用瑞为人脸识别SDK","date":"2021-04-21T04:51:00.000Z","updated":"2021-04-24T15:04:12.000Z","comments":true,"path":"2021/04/21/JNI-方式调用瑞为人脸识别SDK/","link":"","permalink":"http://wangcj.com.cn/2021/04/21/JNI-%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8%E7%91%9E%E4%B8%BA%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%ABSDK/","excerpt":"","text":"环境开发环境win10 64位 + vs2015 + jdk1.8 32位 目标运行环境win7 64位 + jre1.8 32 位 代码实现瑞为SDK接口#ifndef _RECONOVA_FACE_CAMERA_SDK_H_ #define _RECONOVA_FACE_CAMERA_SDK_H_ #ifdef WIN32 #ifdef RECONOVAFACECAMERASDK_EXPORTS #define RECONOVAFACECAMERASDK_API __declspec(dllexport) #else #define RECONOVAFACECAMERASDK_API __declspec(dllimport) #pragma comment(lib, &quot;ReconovaFaceCameraSdk&quot;) #endif #else #define RECONOVAFACECAMERASDK_API #endif #ifdef __cplusplus extern &quot;C&quot; &#123; #endif /** * 图片信息定义，图片格式BGR24 */ typedef struct ReconovaBGR24Image_s &#123; int width; /* 宽 */ int height; /* 高 */ int widthStep; /* 步长，四字节对齐 */ int imageSize; /* 图片数据大小 */ char *imageData; /* 图片数据 */ &#125; ReconovaBGR24Image_t; /** * 人脸区域定义，从眉毛到下巴的矩形框 */ typedef struct ReconovaFaceRectInfo_s &#123; int left; /* 左边界值 */ int top; /* 上边界值 */ int right; /* 右边界值 */ int bottom; /* 下边界值 */ &#125; ReconovaFaceRectInfo_t; /** * 人脸特征信息 */ typedef struct ReconovaFaceFeature_s &#123; int featLength; /* 特征数据长度 */ char *featData; /* 特征数据 */ &#125; ReconovaFaceFeature_t; /** * 人员跟踪信息 */ typedef struct ReconovaPersonTraceInfo_s &#123; unsigned int personId; /* 人员ID */ ReconovaBGR24Image_t frameImage; /* 当前人脸对应的现场图片 */ ReconovaFaceRectInfo_t faceRect; /* 人脸位置 */ ReconovaBGR24Image_t faceImage; /* 人脸图片 */ ReconovaFaceFeature_t faceFeature; /* 人脸特征信息 */ &#125; ReconovaPersonTraceInfo_t; /** * 人员跟踪状态 */ typedef enum ReconovaPersonTraceStatus_e &#123; RECONOVA_PERSON_TRACE_STATUS_ENTER, /* 人员进去 */ RECONOVA_PERSON_TRACE_STATUS_UPDATE,/* 人员更新 */ RECONOVA_PERSON_TRACE_STATUS_LEAVE /* 人员离开 */ &#125; ReconovaPersonTraceStatus_t; /** * 视频帧回调 * @param image 视频帧信息 * @parma faceList 人脸框列表 * @parma faceNum 人脸个数 * @parma data 用户自定义数据 */ typedef int (*ReconovaFrameCallBack_t)(ReconovaBGR24Image_t *image, ReconovaFaceRectInfo_t *faceList, int faceNum, void *data); /** * 人员跟踪信息回调 * @param personTraceInfo 人员跟踪信息 * @param personTraceStatus 人员跟踪状态 * @param data 用户自定义数据 */ typedef int (*ReconovaPersonTraceInfoCallBack_t)(ReconovaPersonTraceInfo_t *personTraceInfo, ReconovaPersonTraceStatus_t personTraceStatus, void *data); /** * 模块初始化 * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkInit(void); /** * 模块反初始化，释放资源 * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkUnInit(void); /** * 注册视频帧回调 * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * * @note 该接口需要在启动USB像机之前调用 * 该接口推送的是BGR24的图片原始数据 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkRegisterFrameCallBack(ReconovaFrameCallBack_t callBack, void *data); /** * 注册人员跟踪信息回调 * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack(ReconovaPersonTraceInfoCallBack_t callBack, void *data); /** * 启动人脸摄像头 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkFaceCameraStart(void); /** * 停止人脸摄像头 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkFaceCameraStop(void); #ifdef __cplusplus &#125; #endif #endif /* _RECONOVA_FACE_CAMERA_SDK_H_ */ JAVA 代码数据结构定义ReconovaBGR24Imagepackage com.cares.reconova.model; /** * @author wangcj * @desc * @date 2021/4/20 10:11 **/ public class ReconovaBGR24Image &#123; public int width; /* 宽 */ public int height; /* 高 */ public int widthStep; /* 步长，四字节对齐 */ public int imageSize; /* 图片数据大小 */ public byte[] imageData; /* 图片数据 */ &#125; ReconovaFaceFeaturepackage com.cares.reconova.model; /** * @author wangcj * @desc * @date 2021/4/20 10:12 **/ public class ReconovaFaceFeature &#123; public int featLength; /* 特征数据长度 */ public byte[] featData; /* 特征数据 */ &#125; ReconovaFaceRectInfopackage com.cares.reconova.model; /** * @author wangcj * @desc * @date 2021/4/20 10:12 **/ public class ReconovaFaceRectInfo &#123; public int left; /* 左边界值 */ public int top; /* 上边界值 */ public int right; /* 右边界值 */ public int bottom; /* 下边界值 */ &#125; ReconovaPersonTraceInfopackage com.cares.reconova.model; /** * @author wangcj * @desc * @date 2021/4/20 10:13 **/ public class ReconovaPersonTraceInfo &#123; public int personId; /* 人员ID */ public ReconovaBGR24Image frameImage; /* 当前人脸对应的现场图片 */ public ReconovaFaceRectInfo faceRect; /* 人脸位置 */ public ReconovaBGR24Image faceImage; /* 人脸图片 */ public ReconovaFaceFeature faceFeature; /* 人脸特征信息 */ &#125; ReconovaPersonTraceStatuspackage com.cares.reconova.model; /** * @author wangcj * @desc * @date 2021/4/20 10:14 **/ public enum ReconovaPersonTraceStatus &#123; RECONOVA_PERSON_TRACE_STATUS_ENTER, /* 人员进去 */ RECONOVA_PERSON_TRACE_STATUS_UPDATE,/* 人员更新 */ RECONOVA_PERSON_TRACE_STATUS_LEAVE /* 人员离开 */ &#125; 回调接口定义视频帧回调package com.cares.reconova.service; import com.cares.reconova.model.ReconovaBGR24Image; import com.cares.reconova.model.ReconovaFaceRectInfo; /** * @author wangcj * @desc * @date 2021/4/20 10:16 **/ public interface ReconovaFrameCallBack &#123; /** * 视频帧回调 * @param image 视频帧信息 * @parma faceList 人脸框列表 * @parma faceNum 人脸个数 * @parma data 用户自定义数据 */ int invoke(ReconovaBGR24Image image, ReconovaFaceRectInfo[] faceList, int faceNum, byte[] data); &#125; 人脸跟踪回调package com.cares.reconova.service; import com.cares.reconova.model.ReconovaPersonTraceInfo; import com.cares.reconova.model.ReconovaPersonTraceStatus; /** * @author wangcj * @desc * @date 2021/4/20 10:16 **/ public interface ReconovaPersonTraceInfoCallBack &#123; /** * 人员跟踪信息回调 * @param personTraceInfo 人员跟踪信息 * @param personTraceStatus 人员跟踪状态 * @param data 用户自定义数据 */ int invoke(ReconovaPersonTraceInfo personTraceInfo, ReconovaPersonTraceStatus personTraceStatus, byte[] data); &#125; 回调接口实现视频帧回调package com.cares.reconova.service; import com.cares.reconova.model.ReconovaBGR24Image; import com.cares.reconova.model.ReconovaFaceRectInfo; import org.bytedeco.javacpp.BytePointer; import org.bytedeco.javacpp.opencv_core; import static org.bytedeco.javacpp.opencv_core.*; import static org.bytedeco.javacpp.opencv_highgui.*; import static org.bytedeco.javacpp.opencv_imgproc.cvRectangle; public class ReconovaFrameCallBackImpl implements ReconovaFrameCallBack&#123; @Override public int invoke(ReconovaBGR24Image image, ReconovaFaceRectInfo[] faceList, int faceNum, byte[] data) &#123; opencv_core.IplImage iplImage = cvCreateImageHeader(cvSize(image.width, image.height), IPL_DEPTH_8U, 3); BytePointer bytePointer = new BytePointer(image.imageData); cvSetData(iplImage, bytePointer, ((image.width * 3) + 3) &gt;&gt; 2 &lt;&lt; 2); for (int i = 0; i &lt; faceNum; i++) &#123; cvRectangle(iplImage, cvPoint(faceList[i].left, faceList[i].top), cvPoint(faceList[i].right, faceList[i].bottom), CV_RGB(0, 255, 0), 1, 4, 0 ); &#125; cvNamedWindow(&quot;test&quot;,CV_WINDOW_FULLSCREEN); cvResizeWindow(&quot;test&quot;, image.width, image.height); cvShowImage(&quot;test&quot;, iplImage); cvWaitKey(30); cvReleaseImageHeader(iplImage); return 0; &#125; &#125; 人脸跟踪回调package com.cares.reconova.service; import com.cares.reconova.model.ReconovaPersonTraceInfo; import com.cares.reconova.model.ReconovaPersonTraceStatus; import lombok.extern.slf4j.Slf4j; /** * @author wangcj * @desc * @date 2021/4/20 21:33 **/ @Slf4j public class ReconovaPersonTraceInfoCallBackImpl implements ReconovaPersonTraceInfoCallBack&#123; @Override public int invoke(ReconovaPersonTraceInfo personTraceInfo, ReconovaPersonTraceStatus personTraceStatus, byte[] data) &#123; log.info(&quot;personTraceStatus=&#123;&#125;&quot;,personTraceStatus); return 0; &#125; &#125; JAVA JNI 接口定义package com.cares.reconova; import com.cares.reconova.service.ReconovaFrameCallBack; import com.cares.reconova.service.ReconovaPersonTraceInfoCallBack; /** * @author wangcj * @desc * @date 2021/4/20 10:10 **/ public class ReconovaFaceCameraSdk &#123; public ReconovaFaceCameraSdk() &#123; System.loadLibrary(&quot;ReconovaFaceCameraSdkJNI&quot;); &#125; /** * 模块初始化 * * @return 成功返回0，失败返回负数 */ public native int ReconovaFaceCameraSdkInit(); /** * 模块反初始化，释放资源 * * @return 成功返回0，失败返回负数 */ public native int ReconovaFaceCameraSdkUnInit(); /** * 注册视频帧回调 * * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * @return 成功返回0，失败返回负数 * @note 该接口需要在启动USB像机之前调用 * 该接口推送的是BGR24的图片原始数据 */ public native int ReconovaFaceCameraSdkRegisterFrameCallBack(ReconovaFrameCallBack callBack, byte[] data); /** * 注册人员跟踪信息回调 * * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * @return 成功返回0，失败返回负数 */ public native int ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack(ReconovaPersonTraceInfoCallBack callBack, byte[] data); /** * 启动人脸摄像头 * * @return 成功返回0，失败返回负数 */ public native int ReconovaFaceCameraSdkFaceCameraStart(); /** * 停止人脸摄像头 * * @return 成功返回0，失败返回负数 */ public native int ReconovaFaceCameraSdkFaceCameraStop(); &#125; C++ 代码工程建立1.新建空白win 32 console application,类型为dll，非exe，编译目标为x86 2.将工程和解决方案命名为 ReconovaFaceCameraSdkJNI或者将targetName 环境变量修改为 ReconovaFaceCameraSdkJNI 3.VC++ directories 添加jdk目录下的 include 和include/win32,瑞为的sdk inc目录到工程headers 目录 4.VC++ directories 添加瑞为的 ReconovaFaceCameraSdk.lib文件夹 到工程lib文件夹,或者拷贝ReconovaFaceCameraSdk.lib到工程目录下，用#pragma 处理(#pragma comment(lib, “ReconovaFaceCameraSdk”)) 5.使用javah 将定义的java jni 接口转成头文件 6.添加实现代码 JNI 实现工程添加Source.cpp #include &quot;com_cares_reconova_ReconovaFaceCameraSdk.h&quot; #include &lt;ReconovaFaceCameraSdk.h&gt; #include &lt;string.h&gt; #include &lt;memory.h&gt; #pragma comment(lib, &quot;ReconovaFaceCameraSdk&quot;) JavaVM * g_jvm = NULL; jobject g_framecallbackobj = NULL; jobject g_traceInfocallbackobj = NULL; JNIEnv* AttachJava() &#123; JavaVMAttachArgs args = &#123; JNI_VERSION_1_8, 0, 0 &#125;; JNIEnv* java; g_jvm-&gt;AttachCurrentThread((void**)&amp;java, &amp;args); return java; &#125; jobject createReconovaBGR24ImageObjAndSetValue(JNIEnv* g_env, ReconovaBGR24Image_t *image) &#123; // 创建对象 jclass bgrimgclass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaBGR24Image&quot;); jmethodID bgrimgclass_noarg_constructer = g_env-&gt;GetMethodID(bgrimgclass, &quot;&lt;init&gt;&quot;, &quot;()V&quot;); jobject obj = g_env-&gt;NewObject(bgrimgclass, bgrimgclass_noarg_constructer); // 设置第一个参数 ReconovaBGR24Image jfieldID width = g_env-&gt;GetFieldID(bgrimgclass, &quot;width&quot;, &quot;I&quot;); jfieldID height = g_env-&gt;GetFieldID(bgrimgclass, &quot;height&quot;, &quot;I&quot;); jfieldID widthStep = g_env-&gt;GetFieldID(bgrimgclass, &quot;widthStep&quot;, &quot;I&quot;); jfieldID imageSize = g_env-&gt;GetFieldID(bgrimgclass, &quot;imageSize&quot;, &quot;I&quot;); jfieldID imageData = g_env-&gt;GetFieldID(bgrimgclass, &quot;imageData&quot;, &quot;[B&quot;); g_env-&gt;SetIntField(obj, width, image-&gt;width); g_env-&gt;SetIntField(obj, height, image-&gt;height); g_env-&gt;SetIntField(obj, widthStep, image-&gt;widthStep); g_env-&gt;SetIntField(obj, imageSize, image-&gt;imageSize); jbyteArray data = g_env-&gt;NewByteArray(image-&gt;imageSize); g_env-&gt;SetByteArrayRegion(data, 0, image-&gt;imageSize, (jbyte*)image-&gt;imageData); g_env-&gt;SetObjectField(obj, imageData, data); g_env-&gt;DeleteLocalRef(bgrimgclass); return obj; &#125; jobject createReconovaFaceRectInfoAndSetValue(JNIEnv* g_env, ReconovaFaceRectInfo_t *faceRect) &#123; // 创建对象 jclass faceRectObjclass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaFaceRectInfo&quot;); jmethodID faceRectObjclass_noarg_constructer = g_env-&gt;GetMethodID(faceRectObjclass, &quot;&lt;init&gt;&quot;, &quot;()V&quot;); jobject obj = g_env-&gt;NewObject(faceRectObjclass, faceRectObjclass_noarg_constructer); jfieldID left = g_env-&gt;GetFieldID(faceRectObjclass, &quot;left&quot;, &quot;I&quot;); jfieldID right = g_env-&gt;GetFieldID(faceRectObjclass, &quot;right&quot;, &quot;I&quot;); jfieldID top = g_env-&gt;GetFieldID(faceRectObjclass, &quot;top&quot;, &quot;I&quot;); jfieldID bottom = g_env-&gt;GetFieldID(faceRectObjclass, &quot;bottom&quot;, &quot;I&quot;); g_env-&gt;SetIntField(obj, left, faceRect-&gt;left); g_env-&gt;SetIntField(obj, right, faceRect-&gt;right); g_env-&gt;SetIntField(obj, top, faceRect-&gt;top); g_env-&gt;SetIntField(obj, bottom, faceRect-&gt;bottom); g_env-&gt;DeleteLocalRef(faceRectObjclass); return obj; &#125; jobjectArray createReconovaFaceRectInfoArrayAndSetValue(JNIEnv* g_env, ReconovaFaceRectInfo_t *faceList, int faceNum) &#123; // 创建对象 jclass faceRectObjclass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaFaceRectInfo&quot;); jobjectArray faceListObj = g_env-&gt;NewObjectArray(faceNum, faceRectObjclass, nullptr); for (int i = 0; i &lt; faceNum; i++) &#123; g_env-&gt;SetObjectArrayElement(faceListObj, i, createReconovaFaceRectInfoAndSetValue(g_env,faceList + i)); &#125; // 设置第一个参数 ReconovaBGR24Image g_env-&gt;DeleteLocalRef(faceRectObjclass); return faceListObj; &#125; jobject createFaceFetureAndSetValue(JNIEnv* g_env, ReconovaFaceFeature_t faceFeature) &#123; jclass faceFetureClass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaFaceFeature&quot;); jmethodID faceFetureClass_noarg_constructer = g_env-&gt;GetMethodID(faceFetureClass, &quot;&lt;init&gt;&quot;, &quot;()V&quot;); jobject obj = g_env-&gt;NewObject(faceFetureClass, faceFetureClass_noarg_constructer); jfieldID featLength = g_env-&gt;GetFieldID(faceFetureClass, &quot;featLength&quot;, &quot;I&quot;); jfieldID featData = g_env-&gt;GetFieldID(faceFetureClass, &quot;featData&quot;, &quot;[B&quot;); jbyteArray data = g_env-&gt;NewByteArray(faceFeature.featLength); g_env-&gt;SetByteArrayRegion(data, 0, faceFeature.featLength, (jbyte*)faceFeature.featData); g_env-&gt;SetObjectField(obj, featData, data); g_env-&gt;SetIntField(obj, featLength, faceFeature.featLength); g_env-&gt;DeleteLocalRef(faceFetureClass); return obj; &#125; jobject createReconovaPersonTraceInfoAndSetValue(JNIEnv* g_env, ReconovaPersonTraceInfo_t *personTraceInfo) &#123; jclass traceInfoClass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaPersonTraceInfo&quot;); jmethodID traceInfoClass_noarg_constructer = g_env-&gt;GetMethodID(traceInfoClass, &quot;&lt;init&gt;&quot;, &quot;()V&quot;); jobject obj = g_env-&gt;NewObject(traceInfoClass, traceInfoClass_noarg_constructer); jfieldID personId = g_env-&gt;GetFieldID(traceInfoClass, &quot;personId&quot;, &quot;I&quot;); jfieldID frameImage = g_env-&gt;GetFieldID(traceInfoClass, &quot;frameImage&quot;, &quot;Lcom/cares/reconova/model/ReconovaBGR24Image;&quot;); jfieldID faceRect = g_env-&gt;GetFieldID(traceInfoClass, &quot;faceRect&quot;, &quot;Lcom/cares/reconova/model/ReconovaFaceRectInfo;&quot;); jfieldID faceImage = g_env-&gt;GetFieldID(traceInfoClass, &quot;faceImage&quot;, &quot;Lcom/cares/reconova/model/ReconovaBGR24Image;&quot;); jfieldID faceFeature = g_env-&gt;GetFieldID(traceInfoClass, &quot;faceFeature&quot;, &quot;Lcom/cares/reconova/model/ReconovaFaceFeature;&quot;); jobject frameImageObj = createReconovaBGR24ImageObjAndSetValue(g_env, &amp;(personTraceInfo-&gt;frameImage)); jobject faceRectObj = createReconovaFaceRectInfoAndSetValue(g_env, &amp;(personTraceInfo-&gt;faceRect)); jobject faceImageObj = createReconovaBGR24ImageObjAndSetValue(g_env, &amp;(personTraceInfo-&gt;faceImage)); jobject faceFeatureObj = createFaceFetureAndSetValue(g_env, personTraceInfo-&gt;faceFeature); g_env-&gt;SetIntField(obj, personId, personTraceInfo-&gt;personId); g_env-&gt;SetObjectField(obj, frameImage, frameImageObj); g_env-&gt;SetObjectField(obj, faceRect, faceRectObj); g_env-&gt;SetObjectField(obj, faceImage, faceImageObj); g_env-&gt;SetObjectField(obj, faceFeature, faceFeatureObj); g_env-&gt;DeleteLocalRef(traceInfoClass); return obj; &#125; jobject createStatus(JNIEnv* g_env, ReconovaPersonTraceStatus_t personTraceStatus) &#123; jclass statusClass = g_env-&gt;FindClass(&quot;com/cares/reconova/model/ReconovaPersonTraceStatus&quot;); jobject statusobj; jfieldID jfieldID_RECONOVA_PERSON_TRACE_STATUS_ENTER = g_env-&gt;GetStaticFieldID(statusClass, &quot;RECONOVA_PERSON_TRACE_STATUS_ENTER&quot;, &quot;Lcom/cares/reconova/model/ReconovaPersonTraceStatus;&quot;); jfieldID jfieldID_RECONOVA_PERSON_TRACE_STATUS_UPDATE = g_env-&gt;GetStaticFieldID(statusClass, &quot;RECONOVA_PERSON_TRACE_STATUS_UPDATE&quot;, &quot;Lcom/cares/reconova/model/ReconovaPersonTraceStatus;&quot;); jfieldID jfieldID_RECONOVA_PERSON_TRACE_STATUS_LEAVE = g_env-&gt;GetStaticFieldID(statusClass, &quot;RECONOVA_PERSON_TRACE_STATUS_LEAVE&quot;, &quot;Lcom/cares/reconova/model/ReconovaPersonTraceStatus;&quot;); switch (personTraceStatus) &#123; case RECONOVA_PERSON_TRACE_STATUS_ENTER: statusobj = g_env-&gt;GetStaticObjectField(statusClass, jfieldID_RECONOVA_PERSON_TRACE_STATUS_ENTER); break; case RECONOVA_PERSON_TRACE_STATUS_UPDATE: statusobj = g_env-&gt;GetStaticObjectField(statusClass, jfieldID_RECONOVA_PERSON_TRACE_STATUS_UPDATE); break; case RECONOVA_PERSON_TRACE_STATUS_LEAVE: statusobj = g_env-&gt;GetStaticObjectField(statusClass, jfieldID_RECONOVA_PERSON_TRACE_STATUS_LEAVE); break; default: statusobj = nullptr; &#125; g_env-&gt;DeleteLocalRef(statusClass); return statusobj; &#125; int ReconovaFrameCallBack(ReconovaBGR24Image_t *image, ReconovaFaceRectInfo_t *faceList, int faceNum, void *data) &#123; JNIEnv* g_env = AttachJava(); // 调用 g_traceInfocallbackobj 中的方法 jclass javacallbakimplclass = g_env-&gt;GetObjectClass(g_framecallbackobj); jmethodID invoke = g_env-&gt;GetMethodID(javacallbakimplclass, &quot;invoke&quot;, &quot;(Lcom/cares/reconova/model/ReconovaBGR24Image;[Lcom/cares/reconova/model/ReconovaFaceRectInfo;I[B)I&quot;); jobject ReconovaBGR24Image = createReconovaBGR24ImageObjAndSetValue(g_env,image); jobjectArray ReconovaFaceRectInfo = createReconovaFaceRectInfoArrayAndSetValue(g_env, faceList, faceNum); g_env-&gt;CallObjectMethod(g_framecallbackobj, invoke, ReconovaBGR24Image, ReconovaFaceRectInfo, faceNum, data); g_jvm-&gt;DetachCurrentThread(); return 0; &#125; int ReconovaPersonTraceInfoCallBack(ReconovaPersonTraceInfo_t *personTraceInfo, ReconovaPersonTraceStatus_t personTraceStatus, void *data) &#123; JNIEnv* g_env = AttachJava(); // 调用 g_framecallbackobj 中的方法 jclass traceInfocallbackobjimplclass = g_env-&gt;GetObjectClass(g_traceInfocallbackobj); jmethodID invoke = g_env-&gt;GetMethodID(traceInfocallbackobjimplclass, &quot;invoke&quot;, &quot;(Lcom/cares/reconova/model/ReconovaPersonTraceInfo;Lcom/cares/reconova/model/ReconovaPersonTraceStatus;[B)I&quot;); jobject personTraceInfoObj = createReconovaPersonTraceInfoAndSetValue(g_env, personTraceInfo); jobject status = createStatus(g_env, personTraceStatus); g_env-&gt;CallObjectMethod(g_traceInfocallbackobj, invoke, personTraceInfoObj, status, data); g_jvm-&gt;DetachCurrentThread(); return 0; &#125; JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkInit (JNIEnv *, jobject) &#123; return ReconovaFaceCameraSdkInit(); &#125; JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkUnInit (JNIEnv *, jobject) &#123; return ReconovaFaceCameraSdkUnInit(); &#125; // 帧回调 JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkRegisterFrameCallBack (JNIEnv *env, jobject sdkclass, jobject framecallbackobj, jbyteArray data) &#123; JNIEnv* g_env = AttachJava(); g_framecallbackobj = env-&gt;NewGlobalRef(framecallbackobj); int res = ReconovaFaceCameraSdkRegisterFrameCallBack(ReconovaFrameCallBack, NULL); return res; &#125; // 跟踪信息回调 JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack (JNIEnv *env, jobject sdkclass, jobject traceInfocallbackobj, jbyteArray data) &#123; g_traceInfocallbackobj = env-&gt;NewGlobalRef(traceInfocallbackobj); int res= ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack(ReconovaPersonTraceInfoCallBack, NULL); return res; &#125; JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkFaceCameraStart (JNIEnv *, jobject) &#123; return ReconovaFaceCameraSdkFaceCameraStart(); &#125; JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkFaceCameraStop (JNIEnv *, jobject) &#123; return ReconovaFaceCameraSdkFaceCameraStop(); &#125; JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved) &#123; JNIEnv *env = NULL; jint result = -1; if (jvm-&gt;GetEnv((void **)&amp;env, JNI_VERSION_1_4) != JNI_OK) &#123; return -1; &#125; g_jvm = jvm; result = JNI_VERSION_1_8; printf(&quot;JNI_OnLoad sucess\\n&quot;); fflush(stdout); return result; &#125; JNI 调用总结回调函数的全局对象变量java将回调函数作为jobject 传到jni，在瑞为的本地回调函数我们要去调用这个对象里面的方法，必须要将这个回调类对象保存为全局变量，直接赋值是不行的，会被jvm回收掉。 jobject g_framecallbackobj = NULL; // 全局变量 JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkRegisterFrameCallBack (JNIEnv *env, jobject sdkclass, jobject framecallbackobj, jbyteArray data) &#123; g_framecallbackobj = env-&gt;NewGlobalRef(framecallbackobj); // 正确方式全局引用 // g_framecallbackobj=framecallbackobj; // 错误方式 ... &#125; JNI 打印信息到控制台printf(&quot;JNI_OnLoad sucess\\n&quot;); fflush(stdout); 多线程获取 JNIEnv *瑞为本地sdk回调是在一个线程内调用，注册回调时把 JNIEnv * 保存为全局变量是不对的，会导致jvm crash JNIEnv* g_env = NULL; // 全局变量 JNIEXPORT jint JNICALL Java_com_cares_reconova_ReconovaFaceCameraSdk_ReconovaFaceCameraSdkRegisterFrameCallBack (JNIEnv *env, jobject sdkclass, jobject framecallbackobj, jbyteArray data) &#123; // g_env =env; // 错误方式 ... &#125; 正确的方法 1、代码实现添加 JNI_OnLoad，jvm在加载dll成功后会调用这个函数，这时我们可以吧 jvm作为全局变量保存起来，以便获取到JNIEnv* JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved) &#123; JNIEnv *env = NULL; jint result = -1; if (jvm-&gt;GetEnv((void **)&amp;env, JNI_VERSION_1_8) != JNI_OK) &#123; return -1; &#125; g_jvm = jvm; result = JNI_VERSION_1_8; printf(&quot;JNI_OnLoad sucess\\n&quot;); fflush(stdout); return result; &#125;2、获取 JNIEnv* AttachJava() &#123; JavaVMAttachArgs args = &#123; JNI_VERSION_1_8, 0, 0 &#125;; JNIEnv* java; g_jvm-&gt;AttachCurrentThread((void**)&amp;java, &amp;args); // g_jvm 全局变量 return java; &#125; 3、重点，JNIEnv* 获取后在不用的时候要 释放。以本列来说，本地回调函数的开始获取JNIEnv* ，本地回调函数调用完java回调函数后需要释放 JNIEnv* g_jvm-&gt;DetachCurrentThread(); C++枚举到JAVA枚举的转换参考 c++ 实现代码 createStatus函数 查看 java的方法签名和字段签名JNI在获取方法、设置字段值的时候需要签名 javap -s &quot;your java class full packagename.your classname&quot; javap 会把类中的所有方法和字段的签名打印出来，我们赋值粘贴就好。 基本类型参考官方文档 jni 调试调试可以加快效率 本地调试1、在java代码打断点，启动程序2、打开vs工程 ，选择 attach 到本地进程，由于java进程都是java.exe 分不清，可以用jvisualvm 或者 jps命令查看3、在vs要调试的代码打断点，打好后放开java断点 远程调试由于java代码运行在虚拟机，本列采用远程调试，1、远程机器开启 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\Remote Debugger\\x64\\msvsmon.exe这时vs的一个工具，设置为不需要验证，在options设置任意用户可以连接 2、调试端选择attach to process,transport 在弹出框选择远程，然后点击find（注意防火墙） 3、剩余步骤参考本地调试 异常检查每一次JNI 方法调用完，都要去检查异常 检查-》描述-》清除异常-》抛出异常 if (env-&gt;ExceptionCheck()) &#123; env-&gt;ExceptionDescribe(); env-&gt;ExceptionClear();//清除引发的异常，在Java层不会打印异常堆栈信息，如果不清除，后面的调用ThrowNew抛出的异常堆栈信息会 //覆盖前面的异常信息 jclass cls_exception = env-&gt;FindClass(&quot;java/lang/Exception&quot;); env-&gt;ThrowNew(cls_exception, &quot;call java static method ndk error&quot;); return; &#125; if (env-&gt;ExceptionOccurred()) &#123; env-&gt;ExceptionDescribe(); env-&gt;ExceptionClear(); jclass cls_exception = env-&gt;FindClass(&quot;java/lang/Exception&quot;); env-&gt;ThrowNew(cls_exception, &quot;call java static method ndk error&quot;); return; &#125; FindClass 找不到类的问题比如springboot 打包jar后，FindClass 会找不到除jdk类外的任何类，应为springboot jar是用户自定义classloader 解决办法 1、JNI找到加载的classloader,调用classloader的方法去加载jar包中的类 2、将java中的对象作为object 传入 JNI，这样JNI就不用去findClass 了 3、将springboot 打包成资源分离方式 通过java -classpath mainClass 的方式启动。这样所有的jar和类都会通过系统AppClassLoader 去加载，FindClass 就不会返回空值（推荐，资源分离方式打包，更新比较方便，springboot jar包可能会很大） 最后如果是小库使用JNA去调用即可，如果像是人脸sdk库文件很大最好用jni。JNA性能不行","categories":[{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/categories/JNI/"}],"tags":[{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/tags/JNI/"},{"name":"JNI 调瑞为SDK","slug":"JNI-调瑞为SDK","permalink":"http://wangcj.com.cn/tags/JNI-%E8%B0%83%E7%91%9E%E4%B8%BASDK/"},{"name":"JNI  总结","slug":"JNI-总结","permalink":"http://wangcj.com.cn/tags/JNI-%E6%80%BB%E7%BB%93/"}],"author":"王长金"},{"title":"JCEF请求拦截","slug":"JCEF-发出请求前在HEADER-添加自定义信息","date":"2021-04-19T15:05:00.000Z","updated":"2021-04-21T05:50:41.000Z","comments":true,"path":"2021/04/19/JCEF-发出请求前在HEADER-添加自定义信息/","link":"","permalink":"http://wangcj.com.cn/2021/04/19/JCEF-%E5%8F%91%E5%87%BA%E8%AF%B7%E6%B1%82%E5%89%8D%E5%9C%A8HEADER-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%A1%E6%81%AF/","excerpt":"","text":"前言有的时候需要知道请求的ip地址，但是网路比较复杂，无法获取到。这时可由cef直接告诉后台ip地址 增加请求处理适配CefClient client_ = cefApp.createClient(); client_.addRequestHandler(new RequestHandlerAdapter()); 请求适配器实现public class RequestHandlerAdapter extends CefRequestHandlerAdapter &#123; private String ip; public RequestHandlerAdapter() &#123; InetUtils inetUtils = new InetUtils(new InetUtilsProperties()); ip = inetUtils.findFirstNonLoopbackAddress().getHostAddress(); &#125; @Override public boolean onBeforeResourceLoad(CefBrowser browser, CefRequest request) &#123; System.out.println(ip); Map&lt;String, String&gt; headers = new HashMap&lt;&gt;(); request.getHeaderMap(headers); headers.put(&quot;TERMINAL_IP&quot;, ip); request.setHeaderMap(headers); System.out.println(request.toString()); return false; &#125; @Override public boolean onBeforeBrowse(CefBrowser browser, CefRequest request, boolean is_redirect) &#123; return super.onBeforeBrowse(browser, request, is_redirect); &#125; &#125; 测试","categories":[{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/categories/JCEF/"}],"tags":[{"name":"请求拦截处理","slug":"请求拦截处理","permalink":"http://wangcj.com.cn/tags/%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%A4%84%E7%90%86/"}],"author":"王长金"},{"title":"调用云从科技人脸识别SDK抓拍人脸","slug":"调用云从人脸识别SDK抓拍人脸","date":"2021-04-19T14:58:00.000Z","updated":"2021-04-19T15:02:34.000Z","comments":true,"path":"2021/04/19/调用云从人脸识别SDK抓拍人脸/","link":"","permalink":"http://wangcj.com.cn/2021/04/19/%E8%B0%83%E7%94%A8%E4%BA%91%E4%BB%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%ABSDK%E6%8A%93%E6%8B%8D%E4%BA%BA%E8%84%B8/","excerpt":"","text":"前言云从科技还不错，基于JNI封装了java sdk 初始化 CloudWalkFaceControl control = CloudWalkFaceControl.getInstance(); int res=-1; res=CloudWalkFaceControl.cwInit(cwModels); if (0 != res) &#123; log.error(&quot;cwInit error,code=&#123;&#125;&quot;,res); &#125; res=CloudWalkFaceControl.cwSetFrameDataCallBack(frameDataCallBack); if (0 != res) &#123; log.error(&quot;cwSetFrameDataCallBack error,code=&#123;&#125;&quot;,res); &#125; res=CloudWalkFaceControl.cwSetSingleFace(1); if (0 != res) &#123; log.error(&quot;cwSetSingleFace error,code=&#123;&#125;&quot;,res); &#125; res=CloudWalkFaceControl.cwOpenCamera_FaceControl(0, 640, 480, 0); if (0 != res) &#123; log.error(&quot;cwOpenCamera_FaceControl error,code=&#123;&#125;&quot;,res); &#125; 帧回调 @Slf4j @Service public class FaceFrameCallBackImpl implements FrameDataCallBack &#123; public FaceFrameCallBackImpl() &#123; &#125; @Override public int FrameCallBackData(int width, int height, int bytesPerPixel, int stride, byte[] data, String faces) &#123; // 暂无展示需求 /*opencv_core.IplImage iplImage = cvCreateImageHeader(cvSize(width,height), IPL_DEPTH_8U, 3); BytePointer bytePointer = new BytePointer(data); cvSetData(iplImage, bytePointer, ((width*3) + 3) &gt;&gt; 2 &lt;&lt; 2); // 画人脸框 if (StringUtils.isNotEmpty(faces)) &#123; log.info(&quot;faces=&#123;&#125;&quot;,faces); List&lt;FacePos&gt; facePosList = transToFacePos(faces); int faceNum = facePosList.size(); for (int i = 0; i &lt; faceNum; i++) &#123; int left = facePosList.get(i).x; int top = facePosList.get(i).y; int right = left+facePosList.get(i).w; int bottom = top+facePosList.get(i).h; cvRectangle(iplImage, cvPoint(left, top), cvPoint(right, bottom), CV_RGB(0, 255, 0), 1, 4, 0 ); &#125; &#125; cvNamedWindow(&quot;test&quot;,CV_WINDOW_NORMAL); cvResizeWindow(&quot;test&quot;, width, height); cvShowImage(&quot;test&quot;, iplImage); cvWaitKey(30); cvReleaseImageHeader(iplImage);*/ return 0; &#125; &#125; 人脸抓拍 CaptureFaceData[] captureFaceData = new CaptureFaceData[]&#123;new CaptureFaceData()&#125;; CloudWalkFaceControl.cwCaptureFace(captureFaceData); if (captureFaceData[0].faceData == null) &#123; log.debug(&quot;没有抓拍到人脸数据&quot;); return; &#125; String imgData = Base64.encodeBase64String(captureFaceData[0].faceData);","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"人脸识别","slug":"人脸识别","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"}],"author":"王长金"},{"title":"JNA + JAVACV 调用瑞为摄像头SDK","slug":"JNA-JAVACV-调用瑞为摄像头SDK","date":"2021-04-17T09:41:00.000Z","updated":"2021-04-17T10:05:44.000Z","comments":true,"path":"2021/04/17/JNA-JAVACV-调用瑞为摄像头SDK/","link":"","permalink":"http://wangcj.com.cn/2021/04/17/JNA-JAVACV-%E8%B0%83%E7%94%A8%E7%91%9E%E4%B8%BA%E6%91%84%E5%83%8F%E5%A4%B4SDK/","excerpt":"","text":"厂家不提供java sdk，网上基本没啥资料，全靠摸索。使用JNA的Structure去映射数据结构，读取的图像数据处理出错，手动从pointer去读，需要根据提供的头文件截取每个数据项的大小。几乎要放弃去考虑用c++了，最终调用成功，还是要坚持。 环境系统 win7 64瑞为sdk版本 windows 32 瑞为sdk在win10 没有调用成功，在win7下调用成功。但win10 下用c++写的能调用成功，百思不得解，也许是java的局限性。 瑞为接口定义#ifndef _RECONOVA_FACE_CAMERA_SDK_H_ #define _RECONOVA_FACE_CAMERA_SDK_H_ #ifdef WIN32 #ifdef RECONOVAFACECAMERASDK_EXPORTS #define RECONOVAFACECAMERASDK_API __declspec(dllexport) #else #define RECONOVAFACECAMERASDK_API __declspec(dllimport) #pragma comment(lib, &quot;ReconovaFaceCameraSdk&quot;) #endif #else #define RECONOVAFACECAMERASDK_API #endif #ifdef __cplusplus extern &quot;C&quot; &#123; #endif /** * 图片信息定义，图片格式BGR24 */ typedef struct ReconovaBGR24Image_s &#123; int width; /* 宽 */ int height; /* 高 */ int widthStep; /* 步长，四字节对齐 */ int imageSize; /* 图片数据大小 */ char *imageData; /* 图片数据 */ &#125; ReconovaBGR24Image_t; /** * 人脸区域定义，从眉毛到下巴的矩形框 */ typedef struct ReconovaFaceRectInfo_s &#123; int left; /* 左边界值 */ int top; /* 上边界值 */ int right; /* 右边界值 */ int bottom; /* 下边界值 */ &#125; ReconovaFaceRectInfo_t; /** * 人脸特征信息 */ typedef struct ReconovaFaceFeature_s &#123; int featLength; /* 特征数据长度 */ char *featData; /* 特征数据 */ &#125; ReconovaFaceFeature_t; /** * 人员跟踪信息 */ typedef struct ReconovaPersonTraceInfo_s &#123; unsigned int personId; /* 人员ID */ ReconovaBGR24Image_t frameImage; /* 当前人脸对应的现场图片 */ ReconovaFaceRectInfo_t faceRect; /* 人脸位置 */ ReconovaBGR24Image_t faceImage; /* 人脸图片 */ ReconovaFaceFeature_t faceFeature; /* 人脸特征信息 */ &#125; ReconovaPersonTraceInfo_t; /** * 人员跟踪状态 */ typedef enum ReconovaPersonTraceStatus_e &#123; RECONOVA_PERSON_TRACE_STATUS_ENTER, /* 人员进去 */ RECONOVA_PERSON_TRACE_STATUS_UPDATE,/* 人员更新 */ RECONOVA_PERSON_TRACE_STATUS_LEAVE /* 人员离开 */ &#125; ReconovaPersonTraceStatus_t; /** * 视频帧回调 * @param image 视频帧信息 * @parma faceList 人脸框列表 * @parma faceNum 人脸个数 * @parma data 用户自定义数据 */ typedef int (*ReconovaFrameCallBack_t)(ReconovaBGR24Image_t *image, ReconovaFaceRectInfo_t *faceList, int faceNum, void *data); /** * 人员跟踪信息回调 * @param personTraceInfo 人员跟踪信息 * @param personTraceStatus 人员跟踪状态 * @param data 用户自定义数据 */ typedef int (*ReconovaPersonTraceInfoCallBack_t)(ReconovaPersonTraceInfo_t *personTraceInfo, ReconovaPersonTraceStatus_t personTraceStatus, void *data); /** * 模块初始化 * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkInit(void); /** * 模块反初始化，释放资源 * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkUnInit(void); /** * 注册视频帧回调 * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * * @note 该接口需要在启动USB像机之前调用 * 该接口推送的是BGR24的图片原始数据 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkRegisterFrameCallBack(ReconovaFrameCallBack_t callBack, void *data); /** * 注册人员跟踪信息回调 * @param callBack[in] 回调函数 * @param data[in] 自定义数据 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack(ReconovaPersonTraceInfoCallBack_t callBack, void *data); /** * 启动人脸摄像头 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkFaceCameraStart(void); /** * 停止人脸摄像头 * * @return 成功返回0，失败返回负数 */ RECONOVAFACECAMERASDK_API int ReconovaFaceCameraSdkFaceCameraStop(void); #ifdef __cplusplus &#125; #endif #endif /* _RECONOVA_FACE_CAMERA_SDK_H_ */ java 依赖 &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna-platform&lt;/artifactId&gt; &lt;version&gt;5.8.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.bytedeco&lt;/groupId&gt; &lt;artifactId&gt;javacv-platform&lt;/artifactId&gt; &lt;version&gt;1.3.3&lt;/version&gt; &lt;/dependency&gt; java 初始化和启动@PostConstruct public void init() &#123; EventQueue.invokeLater(()-&gt;&#123; int res = -1; res = FaceService.INSTANCE.ReconovaFaceCameraSdkInit(); if (0 != res) &#123; log.error(&quot;ReconovaFaceCameraSdkInit failed&quot;); return; &#125; res = FaceService.INSTANCE.ReconovaFaceCameraSdkRegisterFrameCallBack(reconovaFrameCallBack, null); if (0 != res) &#123; log.error(&quot;ReconovaFaceCameraSdkRegisterFrameCallBack failed&quot;); return; &#125; res = FaceService.INSTANCE.ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack(reconovaPersonTraceInfoCallBack, Pointer.NULL); if (0 != res) &#123; log.error(&quot;ReconovaFaceCameraSdkRegisterPersonTraceInfoCallBack failed&quot;); return; &#125; res = FaceService.INSTANCE.ReconovaFaceCameraSdkFaceCameraStart(); if (0 != res) &#123; log.error(&quot;ReconovaFaceCameraSdkFaceCameraStart failed&quot;); &#125; &#125;); &#125; @PreDestroy public void uninit() &#123; FaceService.INSTANCE.ReconovaFaceCameraSdkFaceCameraStop(); FaceService.INSTANCE.ReconovaFaceCameraSdkUnInit(); &#125; java 回调函数定义视频帧回调 public interface ReconovaFrameCallBack extends Callback &#123; int invoke(Pointer image, Pointer faceList, int faceNum, Pointer data); &#125; 人脸跟踪信息回调public interface ReconovaPersonTraceInfoCallBack extends Callback &#123; int invoke(Pointer personTraceInfo, int personTraceStatus, Pointer data); &#125; java 回调函数实现视频帧回调public class ReconovaFrameCallBackImpl implements ReconovaFrameCallBack &#123; /** * 视频帧回调 展示图像数据 * * 暂时没有展示的设计 * * * * @param imgPointer 视频帧信息 * @parma faceList 人脸框列表 需要往图片上画人脸矩形 * @parma faceNum 人脸个数 faceNum=0 的时候要做页面切换 * @parma data 用户自定义数据 */ @Override public int invoke(Pointer imgPointer, Pointer faceListPointer, int faceNum, Pointer data) &#123; if (faceNum &gt; 0) &#123; ReconovaFaceRectInfo_t[] faceList = transferPointertoRect(faceListPointer, faceNum); // Stream.of(faceList).map(f-&gt; FaceUtils.calArea(f)).forEach(a-&gt;log.info(&quot;人脸大小&#123;&#125;&quot;,a)); &#125; // 暂时没有展示需求 /*ReconovaBGR24Image_t image_t = transferPointerToImage(imgPointer); ReconovaFaceRectInfo_t[] faceList = transferPointertoRect(faceListPointer, faceNum); IplImage iplImage = cvCreateImageHeader(cvSize(image_t.width, image_t.height), IPL_DEPTH_8U, 3); BytePointer bytePointer = new BytePointer(image_t.imageData); cvSetData(iplImage, bytePointer, ((image_t.width * 3) + 3) &gt;&gt; 2 &lt;&lt; 2); for (int i = 0; i &lt; faceNum; i++) &#123; cvRectangle(iplImage, cvPoint(faceList[i].left, faceList[i].top), cvPoint(faceList[i].right, faceList[i].bottom), CV_RGB(0, 255, 0), 1, 4, 0 ); &#125; cvNamedWindow(&quot;test&quot;,CV_WINDOW_FULLSCREEN); cvResizeWindow(&quot;test&quot;, image_t.width, image_t.height); cvShowImage(&quot;test&quot;, iplImage); cvReleaseImageHeader(iplImage);*/ cvWaitKey(1); return 0; &#125; &#125; 人脸跟踪信息回调public class ReconovaPersonTraceInfoCallBackImpl implements ReconovaPersonTraceInfoCallBack &#123; /** * 人员跟踪信息回调 * @param personTraceInfo 人员跟踪信息 * @param personTraceStatus 人员跟踪状态 * 人员进去=0 人员更新=1 人员离开=2 * * @param data 用户自定义数据 */ @Override public int invoke(Pointer personTraceInfo, int personTraceStatus, Pointer data) &#123; log.info(&quot;personTraceStatus=&#123;&#125;&quot;,personTraceStatus); // 更新状态下，人脸矩形达到一定的尺寸（越靠近摄像头，矩形越大，需要摸索出最佳尺寸），则将人脸数据发送后台检索信息 FaceService.ReconovaPersonTraceInfo_t traceInfo = FaceUtils.transTraceInfo(personTraceInfo); FaceService.ReconovaFaceRectInfo_t faceRect = traceInfo.faceRect; int width = faceRect.right - faceRect.left; int height= faceRect.bottom - faceRect.top; return 0; &#125; &#125; 数据解析类public class FaceUtils &#123; public static String bgr2base64(FaceService.ReconovaBGR24Image_t image_t) &#123; opencv_core.IplImage iplImage = cvCreateImageHeader(cvSize(image_t.width, image_t.height), IPL_DEPTH_8U, 3); BytePointer bytePointer = new BytePointer(image_t.imageData); cvSetData(iplImage, bytePointer, ((image_t.width * 3) + 3) &gt;&gt; 2 &lt;&lt; 2); BufferedImage bufferedImage = Java2DFrameUtils.toBufferedImage(iplImage); ByteArrayOutputStream outputStream = new ByteArrayOutputStream(10240 * 6); try &#123; ImageIO.write(bufferedImage, &quot;PNG&quot;, outputStream); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; cvReleaseImageHeader(iplImage); &#125; String base64 = Base64.encodeBase64String(outputStream.toByteArray()); cvReleaseImageHeader(iplImage); return base64; &#125; public static FaceService.ReconovaBGR24Image_t transferPointerToImage(Pointer image) &#123; FaceService.ReconovaBGR24Image_t reconovaBGR24Image_t = new FaceService.ReconovaBGR24Image_t(); reconovaBGR24Image_t.width = image.getInt(0); reconovaBGR24Image_t.height = image.getInt(4); reconovaBGR24Image_t.widthStep = image.getInt(8); reconovaBGR24Image_t.imageSize = image.getInt(12); Pointer imgdataPointer = image.getPointer(16); reconovaBGR24Image_t.imageData = imgdataPointer.getByteArray(0, reconovaBGR24Image_t.imageSize); return reconovaBGR24Image_t; &#125; public static FaceService.ReconovaFaceRectInfo_t[] transferPointertoRect(Pointer faceList, int faceNum) &#123; FaceService.ReconovaFaceRectInfo_t[] arr = new FaceService.ReconovaFaceRectInfo_t[faceNum]; for (int i = 0; i &lt; faceNum; i++) &#123; FaceService.ReconovaFaceRectInfo_t reconovaFaceRectInfo_t = new FaceService.ReconovaFaceRectInfo_t(); reconovaFaceRectInfo_t.left = faceList.getInt(0 + i * 16); reconovaFaceRectInfo_t.top = faceList.getInt(4 + i * 16); reconovaFaceRectInfo_t.right = faceList.getInt(8 + i * 16); reconovaFaceRectInfo_t.bottom = faceList.getInt(12 + i * 16); arr[i] = reconovaFaceRectInfo_t; &#125; return arr; &#125; public static FaceService.ReconovaFaceFeature_t transferFaceFeture(Pointer pointer) &#123; FaceService.ReconovaFaceFeature_t reconovaFaceFeature_t = new FaceService.ReconovaFaceFeature_t(); reconovaFaceFeature_t.featLength = pointer.getInt(0); Pointer dataP = pointer.getPointer(4); reconovaFaceFeature_t.featData = dataP.getByteArray(0, reconovaFaceFeature_t.featLength); return reconovaFaceFeature_t; &#125; public static FaceService.ReconovaPersonTraceInfo_t transTraceInfo(Pointer pointer) &#123; FaceService.ReconovaPersonTraceInfo_t traceInfo_t = new FaceService.ReconovaPersonTraceInfo_t(); traceInfo_t.personId = pointer.getInt(0); FaceService.ReconovaBGR24Image_t reconovaBGR24Image_t = new FaceService.ReconovaBGR24Image_t(); reconovaBGR24Image_t.width = pointer.getInt(0+4); reconovaBGR24Image_t.height = pointer.getInt(4+4); reconovaBGR24Image_t.widthStep = pointer.getInt(8+4); reconovaBGR24Image_t.imageSize = pointer.getInt(12+4); Pointer imgdataPointer = pointer.getPointer(16+4); reconovaBGR24Image_t.imageData = imgdataPointer.getByteArray(0, reconovaBGR24Image_t.imageSize); traceInfo_t.frameImage = reconovaBGR24Image_t; FaceService.ReconovaFaceRectInfo_t reconovaFaceRectInfo_t = new FaceService.ReconovaFaceRectInfo_t(); reconovaFaceRectInfo_t.left = pointer.getInt(0 + ReconovaBGR24Image_size+4); reconovaFaceRectInfo_t.top = pointer.getInt(4 + ReconovaBGR24Image_size+4); reconovaFaceRectInfo_t.right = pointer.getInt(8 + ReconovaBGR24Image_size+4); reconovaFaceRectInfo_t.bottom = pointer.getInt(12 + ReconovaBGR24Image_size+4); traceInfo_t.faceRect = reconovaFaceRectInfo_t; FaceService.ReconovaBGR24Image_t reconovaBGR24Image_t2 = new FaceService.ReconovaBGR24Image_t(); reconovaBGR24Image_t2.width = pointer.getInt(0+ReconovaBGR24Image_size+4+ReconovaFaceRectInfo_size); reconovaBGR24Image_t2.height = pointer.getInt(4+ReconovaBGR24Image_size+4+ReconovaFaceRectInfo_size); reconovaBGR24Image_t2.widthStep = pointer.getInt(8+ReconovaBGR24Image_size+4+ReconovaFaceRectInfo_size); reconovaBGR24Image_t2.imageSize = pointer.getInt(12+ReconovaBGR24Image_size+4+ReconovaFaceRectInfo_size); Pointer imgdataPointer2 = pointer.getPointer(16+ReconovaBGR24Image_size+4+ReconovaFaceRectInfo_size); reconovaBGR24Image_t2.imageData = imgdataPointer2.getByteArray(0, reconovaBGR24Image_t2.imageSize); traceInfo_t.faceImage = reconovaBGR24Image_t2; FaceService.ReconovaFaceFeature_t reconovaFaceFeature_t = new FaceService.ReconovaFaceFeature_t(); reconovaFaceFeature_t.featLength = pointer.getInt(0+ReconovaBGR24Image_size*2+4+ReconovaFaceRectInfo_size); Pointer dataP = pointer.getPointer(4+ReconovaBGR24Image_size*2+4+ReconovaFaceRectInfo_size); reconovaFaceFeature_t.featData = dataP.getByteArray(0, reconovaFaceFeature_t.featLength); traceInfo_t.faceFeature = reconovaFaceFeature_t; return traceInfo_t; &#125; public static long calArea(FaceService.ReconovaFaceRectInfo_t faceRect) &#123; int width = faceRect.right - faceRect.left; int height= faceRect.bottom - faceRect.top; return width*height; &#125; &#125;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"javacv","slug":"javacv","permalink":"http://wangcj.com.cn/tags/javacv/"},{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/tags/JNA/"},{"name":"摄像头","slug":"摄像头","permalink":"http://wangcj.com.cn/tags/%E6%91%84%E5%83%8F%E5%A4%B4/"}],"author":"王长金"},{"title":"SSH 免登录配置并执行命令","slug":"SSH-免登录配置","date":"2021-03-29T08:24:00.000Z","updated":"2021-03-29T08:36:43.000Z","comments":true,"path":"2021/03/29/SSH-免登录配置/","link":"","permalink":"http://wangcj.com.cn/2021/03/29/SSH-%E5%85%8D%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/","excerpt":"","text":"SSH 三步解决免密登录1.客户端生成公私钥 2.上传公钥到服务器 3.测试免密登录 1.客户端生成公私钥本地客户端生成公私钥：（一路回车默认即可） ssh-keygen上面这个命令会在用户目录.ssh文件夹下创建公私钥 cd ~/.ssh ls下创建两个密钥： id_rsa （私钥）id_rsa.pub (公钥) 2.上传公钥到服务器这里测试用的服务器地址为：1.1.1.1用户为：root ssh-copy-id -i ~/.ssh/id_rsa.pub root@1.1.1.1上面这条命令是写到服务器上的ssh目录下去了 cd ~/.ssh vim authorized_keys可以看到客户端写入到服务器的 id_rsa.pub （公钥）内容。 3.测试免密登录客户端通过ssh连接远程服务器，就可以免密登录了。 ssh root@1.1.1.1应用将开发数据库goc，fids加载到本地 流程1.配置免密登录 2.远程docker 容器 mysql 用mysqldump 导出数据库 goc，fids为sql文件 3.压缩文件（公司网络带宽很低，200k） 4.下载压缩文件 5.解压 6.用mysql命令加载到本地docker容器 最终脚本 #!/bin/bash export SQL_FILE_NAME=`date +&#39;%Y%m%d%H%M%S&#39;`.sql export SQL_FILE_DOCKER=/var/lib/mysql/$SQL_FILE_NAME export SQL_FILE_LOCAL=/root/mysql/data/$SQL_FILE_NAME echo &quot;export sql&quot; ssh root@1.1.1.1 &gt;/dev/null 2&gt;&amp;1 &lt;&lt; eeooff docker exec -i mysql bash -c &quot;mysqldump -uroot -ppassword --databases goc fids &gt; $SQL_FILE_DOCKER&quot; exit eeooff echo &quot;package file&quot; ssh root@1.1.1.1 &gt;/dev/null 2&gt;&amp;1 &lt;&lt; eeooff xz -zq $SQL_FILE_LOCAL mv $SQL_FILE_LOCAL.xz /root exit eeooff echo &quot;download sql&quot; sftp root@1.1.1.1 &lt;&lt; eeooff get $SQL_FILE_NAME.xz quit eeooff echo &quot;delete remote file&quot; ssh root@172.21.126.135 &gt;/dev/null 2&gt;&amp;1 &lt;&lt; eeooff rm -rf $SQL_FILE_NAME.xz exit eeooff echo &quot;unpackage sql&quot; xz -dvv $SQL_FILE_NAME.xz echo &quot;load sql into db&quot; echo &quot;111111&quot;|sudo mv $SQL_FILE_NAME mysql/data docker exec -it acdm-mysql bash -c &quot;mysql -uroot -ppassword &lt; $SQL_FILE_DOCKER&quot; &gt; /dev/null 2&gt;&amp;1 docker exec -it acdm-mysql bash -c &quot;rm -rf $SQL_FILE_DOCKER&quot;","categories":[{"name":"SHELL","slug":"SHELL","permalink":"http://wangcj.com.cn/categories/SHELL/"}],"tags":[{"name":"远程脚本执行","slug":"远程脚本执行","permalink":"http://wangcj.com.cn/tags/%E8%BF%9C%E7%A8%8B%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C/"}],"author":"王长金"},{"title":"分布式内存数据库Hazelcast 应用","slug":"分布式内存数据库Hazelcast-应用","date":"2021-03-18T14:35:00.000Z","updated":"2021-03-18T14:52:58.000Z","comments":true,"path":"2021/03/18/分布式内存数据库Hazelcast-应用/","link":"","permalink":"http://wangcj.com.cn/2021/03/18/%E5%88%86%E5%B8%83%E5%BC%8F%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Hazelcast-%E5%BA%94%E7%94%A8/","excerpt":"","text":"Hazelcast 简介Hazelcast是什么 “分布式”、“集群服务”、“网格式内存数据”、“分布式缓存“、“弹性可伸缩服务”——这些牛逼闪闪的名词拿到哪都是ITer装逼的不二之选。在Javaer的世界，有这样一个开源项目，只需要引入一个jar包、只需简单的配置和编码即可实现以上高端技能，他就是 Hazelcast。 Hazelcast 是由Hazelcast公司（没错，这公司也叫Hazelcast！）开发和维护的开源产品，可以为基于jvm环境运行的各种应用提供分布式集群和分布式缓存服务。Hazelcast可以嵌入到任何使用Java、C++、.NET开发的产品中（C++、.NET只提供客户端接入）。Hazelcast目前已经更新到3.X版本，Java中绝大部分数据结构都被其以为分布式的方式实现。比如Javaer熟悉的Map接口，当通过Hazelcast创建一个Map实例后，在节点A调用 Map::put(“A”,”A_DATA”) 方法添加数据，节点B使用 Map::get(“A”) 可以获到值为”A_DATA” 的数据。Hazelcast 提供了 Map、Queue、MultiMap、Set、List、Semaphore、Atomic 等接口的分布式实现；提供了基于Topic 实现的消息队列或订阅\\发布模式；提供了分布式id生成器（IdGenerator）；提供了分布式事件驱动（Distributed Events）；提供了分布式计算（Distributed Computing）；提供了分布式查询（Distributed Query）。总的来说在独立jvm经常使用数据结果或模型 Hazelcast 都提供了分布式集群的实现。 Hazelcast 有开源版本和商用版本。开源版本遵循 Apache License 2.0 开源协议免费使用。商用版本需要获取特定的License，两者之间最大的区别在于：商用版本提供了数据高密度存储。我们都知道jvm有自己特定的GC机制，无论数据是在堆还是栈中，只要发现无效引用的数据块，就有可能被回收。而Hazelcast的分布式数据都存放在jvm的内存中，频繁的读写数据会导致大量的GC开销。使用商业版的Hazelcast会拥有高密度存储的特性，大大降低Jvm的内存开销，从而降低GC开销。 Hazelcast的特性自治集群（无中心化） Hazelcast 没有任何中心节点（文中的节点可以理解为运行在任意服务器的独立jvm，下同），或者说Hazelcast 不需要特别指定一个中心节点。在运行的过程中，它自己选定集群中的某个节点作为中心点来管理所有的节点。 数据按应用分布式存储 Hazelcast 的数据是分布式存储的。他会将数据尽量存储在需要使用该项数据的节点上，以实现数据去中心化的目的。在传统的数据存储模型中（MySql、MongDB、Redis 等等）数据都是独立于应用单独存放，当需要提升数据库的性能时，需要不断加固单个数据库应用的性能。即使是现在大量的数据库支持集群模式或读写分离，但是基本思路都是某几个库支持写入数据，其他的库不断的拷贝更新数据副本。这样做的坏处一是会产生大量脏读的问题，二是消耗大量的资源来传递数据——从数据源频繁读写数据会耗费额外资源，当数据量增长或创建的主从服务越来越多时，这个消耗呈指数级增长。 使用 Hazelcast 可以有效的解决数据中心化问题。他将数据分散的存储在每个节点中，节点越多越分散。每个节点都有各自的应用服务，而Hazelcast集群会根据每个应用的数据使用情况分散存储这些数据，在应用过程中数据会尽量“靠近”应用存放。这些在集群中的数据共享整个集群的存储空间和计算资源。 抗单点故障 集群中的节点是无中心化的，每个节点都有可能随时退出或随时进入。因此，在集群中存储的数据都会有一个备份（可以配置备份的个数，也可以关闭数据备份）。这样的方式有点类似于 hadoop，某项数据存放在一个节点时，在其他节点必定有至少一个备份存在。当某个节点退出时，节点上存放的数据会由备份数据替代，而集群会重新创建新的备份数据。 简易性 所有的 Hazelcast 功能只需引用一个jar包，除此之外，他不依赖任何第三方包。因此可以非常便捷高效的将其嵌入到各种应用服务器中，而不必担心带来额外的问题（jar包冲突、类型冲突等等）。他仅仅提供一系列分布式功能，而不需要绑定任何框架来使用，因此适用于任何场景。 除了以上特性，Hazelcast 还支持服务器/客户端模型，支持脚本管理、能够和 Docker 快速整合等等。 依赖 &lt;dependency&gt; &lt;groupId&gt;com.hazelcast&lt;/groupId&gt; &lt;artifactId&gt;hazelcast&lt;/artifactId&gt; &lt;version&gt;4.1.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.hazelcast&lt;/groupId&gt; &lt;artifactId&gt;hazelcast-eureka-one&lt;/artifactId&gt; &lt;version&gt;2.0.1&lt;/version&gt; &lt;/dependency&gt; 配置hazelcast 成员之间可以通过组播、指定IP或者eureka注册中心发现彼此 由于项目集成了eureka注册中心，这里采用eruka方式的成员发现，组播的话ip地址必须在同一网段，指定IP地址对微服务来说不那么灵活 @Bean public Config hazelcastConfig() &#123; EurekaOneDiscoveryStrategyFactory.setEurekaClient(eurekaClient); EurekaOneDiscoveryStrategyFactory.setGroupName(appName); Config config = new Config(); config.setClusterName(appName); config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false); config.getNetworkConfig().getJoin().getEurekaConfig() .setEnabled(true) .setProperty(&quot;self-registration&quot;, &quot;true&quot;) .setProperty(&quot;namespace&quot;, appName) .setProperty(&quot;use-metadata-for-host-and-port&quot;, &quot;true&quot;); return config; &#125; 广播订阅编写监听器 @Slf4j @Component public class FidsMsgListener implements MessageListener&lt;DistributeMsg&gt; &#123; @Resource ApplicationContext applicationContext; private Map&lt;DistributeMsgTypeEnum, IDistHandler&gt; handlers = new HashMap&lt;&gt;(); @PostConstruct public void init() &#123; handlers.clear(); applicationContext.getBeansOfType(IDistHandler.class) .forEach((k, v) -&gt; handlers.put(v.getClass().getAnnotation(DistHandler.class).value(), v)); &#125; @Override public void onMessage(Message&lt;DistributeMsg&gt; message) &#123; DistributeMsgTypeEnum typeEnum = message.getMessageObject().getType(); log.debug(&quot;分布式消息处理&#123;&#125;,发送方&#123;&#125;&quot;, typeEnum, message.getPublishingMember().getAddress().getHost()); IDistHandler handler = handlers.get(typeEnum); if (null != handler) &#123; handler.handler(message); &#125; &#125; &#125;配置topic @Bean ITopic&lt;DistributeMsg&gt; iTopic(FidsMsgListener fidsMsgListener) &#123; HazelcastInstance hazelcastInstance = applicationContext.getBean(HazelcastInstance.class); ITopic&lt;DistributeMsg&gt; topic = hazelcastInstance.getTopic(FIDS_HAZELCAST_TOPIC); topic.addMessageListener(fidsMsgListener); return topic; &#125; 发布消息 @Resource private ITopic&lt;DistributeMsg&gt; topic; .... .... DistributeMsg msg = DistributeMsg.builder().data(baseMsg).type(DistributeMsgTypeEnum.FIDS_PROTOCOL).build(); topic.publish(msg); 共享MAP实现了跨机器跨进程的内存共享，原来用redis和rabbit做分布式消息转发和存储。redis读取大对象，也没那么大才几百K就超时，用spring cloud bus amqp 转发消息也不稳定。用hazelcast稳定对了，速度也相当快。再也不用担心超时的问题。 @Bean public IMap&lt;String, Object&gt; iMap() &#123; HazelcastInstance hazelcastInstance = applicationContext.getBean(HazelcastInstance.class); IMap&lt;String, Object&gt; map = hazelcastInstance.getMap(FIDS_HAZELCAST_SCREE_SHOT_MAP); return map; &#125;","categories":[],"tags":[{"name":"分布式","slug":"分布式","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"},{"name":"分布式内存","slug":"分布式内存","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%86%85%E5%AD%98/"}],"author":"王长金"},{"title":"NETTY 加密通信","slug":"NETTY-加密通信","date":"2021-03-10T04:07:00.000Z","updated":"2021-03-18T14:34:18.000Z","comments":true,"path":"2021/03/10/NETTY-加密通信/","link":"","permalink":"http://wangcj.com.cn/2021/03/10/NETTY-%E5%8A%A0%E5%AF%86%E9%80%9A%E4%BF%A1/","excerpt":"","text":"依赖引入&lt;dependency&gt; &lt;groupId&gt;io.netty&lt;/groupId&gt; &lt;artifactId&gt;netty-tcnative-boringssl-static&lt;/artifactId&gt; &lt;version&gt;2.0.26.Final&lt;/version&gt; &lt;/dependency&gt; 这个依赖默认是64位的，32位jdk是无法运行的，这里提供一个32位jar连接，系统最低要求win7 https://cloud.189.cn/t/ZRRBvmRzmEnu 生成客户端和服务端密钥CA 证书创建CA PSCK1私钥openssl genrsa -out ca/ca-key1.pem 1024 CA PSCK1转PSCK8私钥openssl pkcs8 -topk8 -inform PEM -in ca/ca-key1.pem -outform pem -nocrypt -out ca/ca-key.pemCA私钥 创建CSR请求（此处会要求证书相关信息参数）openssl req -new -out ca/ca-req.csr -key ca/ca-key.pem -config openssl.cnf生成CA的X509证书openssl x509 -req -in ca/ca-req.csr -out ca/ca-cert.pem -signkey ca/ca-key.pem -days 3650服务端证书创建服务器PSCK1私钥openssl genrsa -out server/server-key.pem 1024服务器 PSCK1转PSCK8私钥openssl pkcs8 -topk8 -inform PEM -in server/server-key.pem -outform pem -nocrypt -out server/server-pkcs8.pem服务器私钥 创建CSR请求（此处会要求证书相关信息参数）openssl req -new -out server/server-req.csr -key server/server-pkcs8.pem -config openssl.cnf生成服务器的X509证书openssl x509 -req -in server/server-req.csr -out server/server-cert.pem -signkey server/server-key.pem -CA ca/ca-cert.pem -CAkey ca/ca-key.pem -CAcreateserial -days 3650客户端证书创建客户端PSCK1私钥openssl genrsa -out client/client-key.pem 1024客户端 PSCK1转PSCK8私钥openssl pkcs8 -topk8 -inform PEM -in client/client-key.pem -outform pem -nocrypt -out client/client-pkcs8.pem客户端私钥 创建CSR请求（此处会要求证书相关信息参数）openssl req -new -out client/client-req.csr -key client/client-pkcs8.pem -config openssl.cnf生成客户端的X509证书openssl x509 -req -in client/client-req.csr -out client/client-cert.pem -signkey client/client-key.pem -CA ca/ca-cert.pem -CAkey ca/ca-key.pem -CAcreateserial -days 3650服务端代码public class FidsServerChannelInit extends ChannelInitializer&lt;SocketChannel&gt; &#123; @Resource FidsServerHandler fidsServerHandler; public void initChannel(SocketChannel socketChannel) throws Exception &#123; ChannelPipeline pipeline = socketChannel.pipeline(); pipeline.addFirst(getSslHandler()); pipeline.addLast(ZlibCodecFactory.newZlibEncoder(ZlibWrapper.GZIP)); pipeline.addLast(ZlibCodecFactory.newZlibDecoder(ZlibWrapper.GZIP)); pipeline.addLast(new ObjectEncoder()); pipeline.addLast(new ObjectDecoder(Integer.MAX_VALUE, ClassResolvers.cacheDisabled(getClass().getClassLoader()))); pipeline.addLast(fidsServerHandler); &#125; /** * 通信加密 * * @return */ private SslHandler getSslHandler() &#123; try &#123; InputStream key = new ClassPathResource(&quot;cert/server/server-pkcs8.pem&quot;).getInputStream(); InputStream cert = new ClassPathResource(&quot;cert/server/server-cert.pem&quot;).getInputStream(); InputStream ca = new ClassPathResource(&quot;cert/ca/ca-cert.pem&quot;).getInputStream(); SslContext sslContext = SslContextBuilder.forServer(cert, key) .trustManager(ca) .clientAuth(ClientAuth.REQUIRE) .sslProvider(SslProvider.OPENSSL) .build(); return sslContext.newHandler(ByteBufAllocator.DEFAULT); &#125; catch (Exception e) &#123; log.error(&quot;初始化SSL context 错误&quot;, e); &#125; return null; &#125; &#125; 客户端代码public class FidsClientChannelInit extends ChannelInitializer&lt;SocketChannel&gt; &#123; @Resource private FidsClientHandler fidsClientHandler; @Resource private PrependClientIdEncoder prependClientIdEncoder; public static SslHandler getSslHandler() &#123; try &#123; InputStream key = new ClassPathResource(&quot;cert/client/client-pkcs8.pem&quot;).getInputStream(); InputStream cert = new ClassPathResource(&quot;cert/client/client-cert.pem&quot;).getInputStream(); InputStream ca = new ClassPathResource(&quot;cert/ca/ca-cert.pem&quot;).getInputStream(); SslContext sslContext = SslContextBuilder.forClient() .trustManager(ca) .keyManager(cert, key) .sslProvider(SslProvider.OPENSSL) .build(); return sslContext.newHandler(ByteBufAllocator.DEFAULT); &#125; catch (Exception e) &#123; log.error(&quot;初始化SSL context 错误&quot;,e); &#125; return null; &#125; @Override protected void initChannel(SocketChannel socketChannel) throws Exception &#123; ChannelPipeline pipeline = socketChannel.pipeline(); pipeline.addLast(ZlibCodecFactory.newZlibEncoder(ZlibWrapper.GZIP)); pipeline.addLast(ZlibCodecFactory.newZlibDecoder(ZlibWrapper.GZIP)); pipeline.addLast(prependClientIdEncoder); pipeline.addLast(new ObjectDecoder(Integer.MAX_VALUE, ClassResolvers.cacheDisabled(getClass().getClassLoader()))); pipeline.addLast(fidsClientHandler); pipeline.addFirst(getSslHandler()); &#125; &#125; 后记不要使用JDK自带的ssl加密，性能很差，以本代码为例会增加3~4秒额外延时。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"加密","slug":"加密","permalink":"http://wangcj.com.cn/tags/%E5%8A%A0%E5%AF%86/"},{"name":"NETTY","slug":"NETTY","permalink":"http://wangcj.com.cn/tags/NETTY/"}],"author":"王长金"},{"title":"JNA 读取护照","slug":"JNA-读取护照","date":"2021-03-06T15:12:00.000Z","updated":"2021-03-06T15:25:08.000Z","comments":true,"path":"2021/03/06/JNA-读取护照/","link":"","permalink":"http://wangcj.com.cn/2021/03/06/JNA-%E8%AF%BB%E5%8F%96%E6%8A%A4%E7%85%A7/","excerpt":"","text":"护照读取流程 初始化护照阅读器接口 设置读取配置 检测护照放入状态（只有护照放入才能读取） 读取护照 获取需要的信息 释放护照阅读器资源 定义接口public interface PassportService extends Library &#123; PassportService INSTANCE = Native.load(&quot;IDCard&quot;, PassportService.class, W32APIOptions.UNICODE_OPTIONS); /** * 初始化sdk * @param cArrUserID * @param nType * @param cArrDirectory lib 路径 * @return */ int InitIDCard(WString cArrUserID, int nType, WString cArrDirectory); /** * 检测是否有证件放入 * -1 核心尚未初始化 * 0 未检测到证件放入或拿出 * 1 检测到有证件放入 * 2 检测到证件被拿出 * 3 检测到手机条码（仅支持 AR、 KR 系列设备） * @return */ int DetectDocument(); int GetRecogResultEx(int attr,int nIndex, byte[] cArrBuffer, IntByReference nBufferLen); int SaveImage(String cArrFileName); void FreeIDCard(); int RecogGeneralMRZCard(boolean bRecogVIZ, int nSaveImageType); /** * 加载证件识读选项 * @param lpConfigFile * @return 0 成功 其他失败 */ int SetConfigByFile(WString lpConfigFile); /** * 自动处理 * @param nCardType 返回证件类型 * 1 表示证件带有电子芯片 * 2 表示证件不带电子芯片 * 4 表示检测到条码 * 5 表示证件带有电子芯片且检测到条码证件识别 SDK 开发手册 * 6 表示证件不带电子芯片但检测到条码 * @return */ int AutoProcessIDCard(IntByReference nCardType); &#125;接口实现public class PassportServiceImpl &#123; private static int status = 0; @Resource private DataExchangeService dataExchangeService; private static final String MULTI_BYTE_ENCODING = &quot;UTF-16LE&quot;; private WString userId = new WString(&quot;硬件厂商提供的用户ID&quot;); private String libdir; @PostConstruct public void init() &#123; ApplicationHome applicationHome = new ApplicationHome(); Path libPath = Paths.get(applicationHome.toString(), &quot;cardLib&quot;); libdir = libPath.toString(); // 初始化 int nRet = -1; libdir = StringUtils.isEmpty(libdir) ? &quot;C:\\\\Users\\\\Administrator\\\\Documents\\\\workspace\\\\wit-fids\\\\cardLib&quot; : libdir; WString dir = new WString(libdir); nRet = PassportService.INSTANCE.InitIDCard(userId, 1, dir); if (nRet != 0) &#123; log.error(&quot;初始化护照阅读器错误，nRet=&#123;&#125;&quot;, nRet); return; &#125; // 设置配置文件 IDCardConfig.ini Path path = Paths.get(libdir, &quot;IDCardConfig.ini&quot;); nRet = PassportService.INSTANCE.SetConfigByFile(new WString(path.toString())); if (nRet != 0) &#123; log.error(&quot;加载护照配置出错，nRet=&#123;&#125;&quot;, nRet); return; &#125; &#125; @PreDestroy public void unInit()&#123; PassportService.INSTANCE.FreeIDCard(); &#125; public void readPassport() &#123; int nRet = -1; if (1 == status) &#123; IntByReference intByReference = new IntByReference(); nRet = PassportService.INSTANCE.AutoProcessIDCard(intByReference); if (nRet &gt; 0) &#123; log.debug(&quot;检测到护照，nRet=&#123;&#125;&quot;,nRet); readCard(); &#125; else &#123; log.debug(&quot;没有读取到护照&quot;); &#125; &#125; &#125; private void readCard() &#123; JSONObject result = new JSONObject(); result.put(&quot;cardNumber&quot;, getPassportField(1)); result.put(&quot;name&quot;, getPassportField(2)); result.put(&quot;nameEng&quot;, getPassportField(3)); result.put(&quot;sex&quot;, getPassportField(4)); result.put(&quot;birthday&quot;, getPassportField(5)); log.debug(&quot;护照解析结果：：&#123;&#125;&quot;, result); dataExchangeService.send(DataExchangeService.PASSPORT_CMD, result); &#125; private String getPassportField(int index) &#123; IntByReference maxNum = new IntByReference(128); byte[] cArrFieldValue = new byte[maxNum.getValue()]; int nRet = PassportService.INSTANCE.GetRecogResultEx(1, index, cArrFieldValue, maxNum); try &#123; String value = new String(cArrFieldValue, MULTI_BYTE_ENCODING); if (StringUtils.isNotEmpty(value)) &#123; value = value.trim(); &#125; return value; &#125; catch (UnsupportedEncodingException e) &#123; log.error(&quot;读取证件出错&quot;, e); &#125; return null; &#125; @Scheduled(fixedRate = 200) public void detectPassport() &#123; int s = PassportService.INSTANCE.DetectDocument(); if (1 == s) &#123; log.debug(&quot;检测到证件放入&quot;); status=1; &#125;else if(2==s)&#123; log.debug(&quot;检测到证件拿出&quot;); status=0; &#125; &#125; &#125;","categories":[{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/categories/JNA/"},{"name":"JAVA","slug":"JNA/JAVA","permalink":"http://wangcj.com.cn/categories/JNA/JAVA/"}],"tags":[{"name":"读护照","slug":"读护照","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E6%8A%A4%E7%85%A7/"}],"author":"王长金"},{"title":"JCEF 编译 记录","slug":"JCEF-编译-记录","date":"2021-03-06T12:54:00.000Z","updated":"2021-03-07T11:19:14.000Z","comments":true,"path":"2021/03/06/JCEF-编译-记录/","link":"","permalink":"http://wangcj.com.cn/2021/03/06/JCEF-%E7%BC%96%E8%AF%91-%E8%AE%B0%E5%BD%95/","excerpt":"","text":"前言最近好几个项目使用到cef，所以将jcef 的编译过程记录一下 如果要兼容很老的机器如winxp,maven中央库有现成的，直接引用即可 https://mvnrepository.com/artifact/org.bitbucket.johness/java-cef这个是49版本，有32和64可选，最后一个支持xp系统的，更高的版本最低要求win7. 49版本不支持 es6以上语法，前端打包构建需要转换为es5才可以执行 如果目标平台在win7以上，最好下载最新的jcef进行编译 环境 VMWARE 虚拟机 win7 64 visual studio 2015 c++ 开发环境 CMAKE下载地址 https://github-releases.githubusercontent.com/537699/b8220600-7c1f-11eb-9ccb-1898af20e7b4?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20210306%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20210306T114224Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=a0152802c59a68aac9d597797a9acaf1d083754ab579ddde32e2faf4602e5d70&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=537699&amp;response-content-disposition=attachment%3B%20filename%3Dcmake-3.20.0-rc3-windows-x86_64.msi&amp;response-content-type=application%2Foctet-stream GIT 下载地址 https://github-releases.githubusercontent.com/23216272/9d5ae680-6ae4-11eb-949c-9a5528f8df81?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20210306%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20210306T114253Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=7857ab73bb80b7090c16c36912563525bba8b981a02df515e042c739ad8e9458&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=23216272&amp;response-content-disposition=attachment%3B%20filename%3DGit-2.30.1-64-bit.exe&amp;response-content-type=application%2Foctet-stream PYTHON 下载地址 https://www.python.org/ftp/python/2.7.16/python-2.7.16.amd64.msi官方推荐2.6+ ，下载2.6.2 结果出错，换成2.7.16没问题 JAVA 本次编译版本为64位，故许准备 64位jdk，版本jdk8以上，设置 JAVA_HOME环境变量，将java bin 目录 添加到path 编译64位库生成VS 工程mkdir java-cef &amp;&amp; cd java-cef git clone https://bitbucket.org/chromiumembedded/java-cef.git src cd src mkdir jcef_build &amp;&amp; cd jcef_build （jcef_build是强制项，必须用此名称） cmake -G &quot;Visual Studio 14 Win64&quot; .. 生成工程文件的过程中 ，会有两个文件下载比较困难，需要挂代理下载对应的文件 注意点cef bin 文件下载https://cef-builds.spotifycdn.com/cef_binary_88.2.6%2Bgd717f0e%2Bchromium-88.0.4324.150_windows64.tar.bz2 文件下载地址会在控制台打印出来，可以复制出来通过代理下载后放入文件夹 C:\\Users\\Administrator\\java-cef\\src\\third_party\\cef 重新跑下生成工程的命令 clang-format.exe 下载下载地址 https://storage.googleapis.com/chromium-clang-format/b5f5d8d5f8a8fcd2edb5b6cae37c0dc3e129c945其中md5 是 文件C:\\Users\\Administrator\\java-cef\\src\\tools\\buildtools\\win\\clang-format.exe.sha1 的文件内容该文件在 cmake -G “Visual Studio 14 Win64” .. 生成，但下载的时候回卡住，此时终止脚本运行，去挂代理下载此文件重命名为 clang-format.exe 放入文件夹 C:\\Users\\Administrator\\java-cef\\src\\tools\\buildtools\\win\\ 工程生成成功C:\\Users\\Administrator\\java-cef\\src\\jcef_build&gt;cmake -G &quot;Visual Studio 14 Win64&quot; .. -- The C compiler identification is MSVC 19.0.23026.0 -- The CXX compiler identification is MSVC 19.0.23026.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe - skipped -- Detecting C compile features -- Detecting C compile features - done -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe - skipped -- Detecting CXX compile features -- Detecting CXX compile features - done CMake Warning (dev) at CMakeLists.txt:164 (find_package): Policy CMP0074 is not set: find_package uses &lt;PackageName&gt;_ROOT variables. Run &quot;cmake --help-policy CMP0074&quot; for policy details. Use the cmake_policy command to set the policy and suppress this warning. CMake variable CEF_ROOT is set to: C:/Users/Administrator/java-cef/src/third_party/cef/cef_binary_88.2.6+gd717f0e+chromium-88.0.4324.150_windows64 For compatibility, CMake is ignoring the variable. This warning is for project developers. Use -Wno-dev to suppress it. -- Found PythonInterp: C:/Python27/python.exe (found version &quot;2.7.16&quot;) -- Using Python: C:/Python27/python.exe -- Found JNI: C:/Program Files/jdk8_64/lib/jawt.lib (Required is at least version &quot;1.7&quot;) -- Generating native/jcef_version.h file... File native/jcef_version.h is already up to date. -- Downloading clang-format from Google Storage... -- *** CEF CONFIGURATION SETTINGS *** -- Generator: Visual Studio 14 2015 Win64 -- Platform: Windows -- Project architecture: x86_64 -- Binary distribution root: C:/Users/Administrator/java-cef/src/third_party/cef/cef_binary_88.2.6+gd717f0e+chromium-88.0.4324.150_windows64 -- Visual Studio ATL support: ON -- CEF sandbox: ON -- Standard libraries: comctl32.lib;rpcrt4.lib;shlwapi.lib;ws2_32.lib;Advapi32.lib;dbghelp.lib;Delayimp.lib;OleAut32.lib;PowrProf.lib;Propsys.lib;psapi.lib;SetupAPI.lib;Shell32.lib;version.lib;wbemuuid.lib;winmm.lib -- Compile defines: __STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;WIN32;_WIN32;_WINDOWS;UNICODE;_UNICODE;WINVER=0x0601;_WIN32_WINNT=0x601;NOMINMAX;WIN32_LEAN_AND_MEAN;_HAS_EXCEPTIONS=0;PSAPI_VERSION=1;CEF_USE_SANDBOX;CEF_USE_ATL -- Compile defines (Debug): -- Compile defines (Release): NDEBUG;_NDEBUG -- C compile flags: /MP;/Gy;/GR-;/W4;/WX;/wd4100;/wd4127;/wd4244;/wd4481;/wd4512;/wd4701;/wd4702;/wd4996;/Zi -- C compile flags (Debug): /MTd;/RTC1;/Od -- C compile flags (Release): /MT;/O2;/Ob2;/GF -- C++ compile flags: /MP;/Gy;/GR-;/W4;/WX;/wd4100;/wd4127;/wd4244;/wd4481;/wd4512;/wd4701;/wd4702;/wd4996;/Zi -- C++ compile flags (Debug): /MTd;/RTC1;/Od -- C++ compile flags (Release): /MT;/O2;/Ob2;/GF -- Exe link flags: /MANIFEST:NO;/LARGEADDRESSAWARE -- Exe link flags (Debug): /DEBUG -- Exe link flags (Release): -- Shared link flags: -- Shared link flags (Debug): /DEBUG -- Shared link flags (Release): -- CEF Binary files: chrome_elf.dll;libcef.dll;libEGL.dll;libGLESv2.dll;snapshot_blob.bin;v8_context_snapshot.bin;swiftshader;d3dcompiler_47.dll -- CEF Resource files: cef.pak;cef_100_percent.pak;cef_200_percent.pak;cef_extensions.pak;devtools_resources.pak;icudtl.dat;locales -- *** JCEF CONFIGURATION SETTINGS *** -- Python executable: C:/Python27/python.exe -- Java directory: C:/Program Files/jdk8_64 -- JNI libraries: C:/Program Files/jdk8_64/lib/jawt.lib;C:/Program Files/jdk8_64/lib/jvm.lib -- JNI include directories: C:/Program Files/jdk8_64/include;C:/Program Files/jdk8_64/include/win32;C:/Program Files/jdk8_64/include -- Configuring done -- Generating done -- Build files have been written to: C:/Users/Administrator/java-cef/src/jcef_build C:\\Users\\Administrator\\java-cef\\src\\jcef_build&gt; 打开vs工程，编译本地库打开 C:\\Users\\Administrator\\java-cef\\src\\jcef_build\\jcef.sln 选择 release，build solution 编译 java 库C:\\Users\\Administrator\\java-cef\\src\\tools&gt;compile.bat win64 注: java\\org\\cef\\browser\\CefDropTargetListener.java使用了未经检查或不安全的操作。 注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。 C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\binding_test.html -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\binding_test.html C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\binding_test2.html -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\binding_test2.html C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\localstorage.html -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\localstorage.html C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\spellcheck.html -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\spellcheck.html C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\transparency.html -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\transparency.html 复制了 5 个文件 C:\\Users\\Administrator\\java-cef\\src\\java\\tests\\detailed\\handler\\logo.png -&gt; C:\\Users\\Administrator\\java-cef\\src\\out\\win64\\tests\\detailed\\handler\\logo.png 复制了 1 个文件 执行测试C:\\Users\\Administrator\\java-cef\\src\\tools&gt;run.bat win64 Release detailed Offscreen rendering disabled Using: JCEF Version = 88.2.6.281 CEF Version = 88.2.6 Chromium Version = 88.0.4324.150 AppHandler.stateHasChanged: INITIALIZING initialize on Thread[AWT-EventQueue-0,6,main] with library path .\\jcef_build\\native\\Release Added scheme search:// Added scheme client:// AppHandler.stateHasChanged: INITIALIZED BrowserFrame.onAfterCreated id=1 打包cd C:\\Users\\Administrator\\java-cef\\src\\tools make_distrib.bat win64最终生成目录 C:\\Users\\Administrator\\java-cef\\src\\binary_distrib 后记可参考64位编译过程生成32位的库。 cmake -G &quot;Visual Studio 14&quot; ..一般情况使用32位的库，这样在32和64位平台都通用 如果项目集成了第三方的库，而且第三方只提供了64位的dll，这时就只能使用64位的jcef了 32和64位编译好的库文件共享地址,版本是88 。zip包是7z打的lzma格式的zip包 https://cloud.189.cn/t/iMr6J3RzqEvm","categories":[{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/categories/JCEF/"}],"tags":[{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/tags/JCEF/"},{"name":"编译","slug":"编译","permalink":"http://wangcj.com.cn/tags/%E7%BC%96%E8%AF%91/"}],"author":"王长金"},{"title":"JNA 读取身份证","slug":"JNA-读取身份证","date":"2021-03-04T14:06:00.000Z","updated":"2021-03-06T14:57:59.000Z","comments":true,"path":"2021/03/04/JNA-读取身份证/","link":"","permalink":"http://wangcj.com.cn/2021/03/04/JNA-%E8%AF%BB%E5%8F%96%E8%BA%AB%E4%BB%BD%E8%AF%81/","excerpt":"","text":"阅读二代居民身份证的流程如下： C1， 打开阅读器（切换到身份证模式）： SDT_OpenPort； C2， 找卡： SDT_StartFindIDCard； 如果失败， 跳转到 C5 C3， 选卡： SDT_SelectIDCard； 如果失败， 跳转到 C5 C4， 读取身份证： SDT_ReadBaseMsgToFile 或者 SDT_ReadBaseMsg C5， 如果要读取下一个身份证跳转到 C2 C6， 关闭读卡器 SDT_ClosePort 定义接口 public interface IdCardService extends StdCallLibrary &#123; /** * 打开端口 * @param iPort * @return */ int SDT_OpenPort(int iPort); /** * 关闭端口 * @param iPort * @return */ int SDT_ClosePort(int iPort); /** * 0x9F 成功 * 其他 失败 * @param iPort * @param iIfOpen * @return */ int SDT_StartFindIDCard(int iPort, Pointer pRAPDU, int iIfOpen); /** * 0x90 成功 * 其他 失败 * @param iPort * @param iIfOpen * @return */ int SDT_SelectIDCard(int iPort, Pointer pRAPDU, int iIfOpen); /** * 0x90 成功 * 其他 失败 * @param iPort * @param iIfOpen * @return */ int SDT_ReadBaseMsg(int iPort, byte[] pucCHMsg, IntByReference puiCHMsgLen, byte[] pucPHMsg, IntByReference puiPHMsgLen, int iIfOpen); int SDT_ReadBaseMsgToFile(int iPort, String pucCHMsgFile, IntByReference puiCHMsgLen, String pucPHMsgFile, IntByReference puiPHMsgLen, int iIfOpen); int SDT_ReadNewAppMsg(int iPort, String pucAppMsg, int puiAppMsgLen, int iIfOpen); &#125; 读取实现@Slf4j @Service public class IdCardServiceImpl &#123; private static final String MULTI_BYTE_ENCODING = &quot;UTF-16LE&quot;; private IdCardService idCardService; @PostConstruct public void init()&#123; idCardService = Native.load(&quot;sdtapi&quot;, IdCardService.class); &#125; public IdCardResult readIdCard()&#123; IdCardResult result = new IdCardResult(); int m_nOpenPort = 0; int textLen = 512; int faceLen = 1024; byte[] pucAppMsg = new byte[textLen]; byte[] pRAPDU = new byte[faceLen]; IntByReference textReference = new IntByReference(textLen); IntByReference faceReference = new IntByReference(faceLen); int resultCode = 0; // 打开端口 for (int iPort = 1001; iPort &lt; 1017; iPort = iPort + 1) &#123; resultCode = idCardService.SDT_OpenPort(iPort); if (0x90 == resultCode) &#123; m_nOpenPort = iPort; log.debug(&quot;初始化身份证阅读器成功,port=&#123;&#125;&quot;,iPort); break; &#125; &#125; if (0 == m_nOpenPort) &#123; log.error(&quot;初始化身份证阅读器失败&quot;); return null; &#125; // 找卡 resultCode = idCardService.SDT_StartFindIDCard(m_nOpenPort,null, 0); if (0x9F != resultCode) &#123; log.error(&quot;寻找卡失败,resultCode=&#123;&#125;&quot;,resultCode); return null; &#125; log.debug(&quot;寻找卡成功,resultCode=&#123;&#125;&quot;,resultCode); // 选卡 resultCode=idCardService.SDT_SelectIDCard(m_nOpenPort, null, 0); if (0x90 != resultCode) &#123; log.error(&quot;选卡失败,resultCode=&#123;&#125;&quot;,resultCode); return null; &#125; log.debug(&quot;选卡成功,resultCode=&#123;&#125;&quot;,resultCode); // 读卡 resultCode = idCardService.SDT_ReadBaseMsg(m_nOpenPort,pucAppMsg,textReference,pRAPDU,faceReference,0); if(0x90 != resultCode)&#123; log.error(&quot;读身份证失败,resultCode=&#123;&#125;&quot;, resultCode); return null; &#125; try &#123; log.debug(&quot;读身份证成功,resultCode=&#123;&#125;,info=&#123;&#125;&quot;,resultCode,new String(pucAppMsg,MULTI_BYTE_ENCODING)); &#125; catch (UnsupportedEncodingException e) &#123; e.printStackTrace(); &#125; // 关闭端口 resultCode=idCardService.SDT_ClosePort(m_nOpenPort); log.debug(&quot;关闭身份证阅读器，resultCode=&#123;&#125;&quot;,resultCode); try &#123; FileUtils.writeByteArrayToFile(new File(&quot;c:\\\\sj.jpeg&quot;),pRAPDU); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; pucAppMsg = Arrays.copyOf(pucAppMsg, textReference.getValue()); // 解析数据 result.setCardNumber(getCardNumber(pucAppMsg)); result.setSex(getSex(pucAppMsg)); result.setBirthday(getBirthDay(pucAppMsg)); result.setName(getName(pucAppMsg)); return result; &#125; private String getString(byte[] data) &#123; String str = null; try &#123; str = new String(data, MULTI_BYTE_ENCODING); &#125; catch (UnsupportedEncodingException e) &#123; e.printStackTrace(); &#125; if (StringUtils.isNotEmpty(str)) &#123; str=str.trim(); &#125; return str; &#125; private String getCardNumber(byte[] data) &#123; byte[] idcarddata = Arrays.copyOfRange(data, 122, 122 + 36); return getString(idcarddata); &#125; private String getSex(byte[] data) &#123; char sex = (char)data[30]; if (sex == &#39;1&#39;) &#123; return &quot;男&quot;; &#125;else &#123; return &quot;女&quot;; &#125; &#125; private String getBirthDay(byte[] data)&#123; byte[] birthData = Arrays.copyOfRange(data, 36, 36 + 16); return getString(birthData); &#125; private String getName(byte[] data)&#123; byte[] name = Arrays.copyOfRange(data, 0, 30); return getString(name); &#125; public static void main(String[] args) &#123; IdCardServiceImpl idCardService = new IdCardServiceImpl(); idCardService.init(); System.out.println(idCardService.readIdCard()); &#125; &#125; 注意点1. 要设置 native 库的加载位置,否则无法加载dll设置虚拟机参数 -Djna.library.path=C:\\lib 2. 输入型整形指针和输出型宽字节解码C 接口定义STDAPI_API int WINAPI SDT_ReadBaseMsg( int iPort, unsigned char * pucCHMsg, unsigned int * puiCHMsgLen, unsigned char * pucPHMsg, unsigned int * puiPHMsgLen, int iIfOpen ); 其中 pucCHMsg和pucPHMsg是输出型参数，jna 定义使用 byte数组接收puiCHMsgLen和puiPHMsgLen 整形的地址，这时jna接口不能用 int，要用 IntByReference JNA 接口定义int SDT_ReadBaseMsg(int iPort, byte[] pucCHMsg, IntByReference puiCHMsgLen, byte[] pucPHMsg, IntByReference puiPHMsgLen, int iIfOpen); 宽字节转换SDT_ReadBaseMsg 的读取信息保存在 pucCHMsg字节数组，厂商放入的是宽字节码 private static final String MULTI_BYTE_ENCODING = &quot;UTF-16LE&quot;; byte[] nameData = Arrays.copyOfRange(data, 0, 30); String name = new String(data, MULTI_BYTE_ENCODING); 这样能正确解出中文姓名 传入宽字节使用 jna 的 WString 即可","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"JNA","slug":"硬件/JNA","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/JNA/"}],"tags":[{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/tags/JNA/"},{"name":"读取身份证","slug":"读取身份证","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E5%8F%96%E8%BA%AB%E4%BB%BD%E8%AF%81/"}],"author":"王长金"},{"title":"java 设置 本地库路径","slug":"java-设置-本地库路径","date":"2021-03-02T13:28:15.000Z","updated":"2021-03-06T15:49:51.000Z","comments":true,"path":"2021/03/02/java-设置-本地库路径/","link":"","permalink":"http://wangcj.com.cn/2021/03/02/java-%E8%AE%BE%E7%BD%AE-%E6%9C%AC%E5%9C%B0%E5%BA%93%E8%B7%AF%E5%BE%84/","excerpt":"","text":"JNI 设置库文件路径1. Java的System.load 和 System.loadLibrary都可以用来加载库文件2.例如你可以这样载入一个windows平台下JNI库文件：System.load(&quot;C://Documents and Settings//TestJNI.dll&quot;); //绝对路径3. System.loadLibrary参数为库文件名例如你可以这样载入一个windows平台下JNI库文件 System.loadLibrary (&quot;TestJNI&quot;);这里TestJNI必须在 java.library.path这一jvm变量所指向的路径中，可以通过如下方法获得该变量的值： System.getProperty(&quot;java.library.path&quot;);默认情况下，Windows平台下包含下面的路径： 1）和jre相关的目录 2）程序当前目录 3）Windows目录 4）系统目录(system32) 5）系统环境变量path指定的目录 4.在linux下添加一个java.library.path的方法如下： 在/etc/profile 后面加上一行 export LB_LIBRARY_PATH=路径 5.在执行程序的时候可以显示指定，-Djava.library.path=路径这种会清除掉预设置的java.library.path的值 。实例如下： java -jar -Djava.library.path=/home/fly/Desktop/sound_dream sound.war JNA 设置库文件路径 Make your target library available to your Java program. There are several ways to do this: 1. The preferred method is to set the jna.library.path system property to the path to your target library. This property is similar to java.library.path, but only applies to libraries loaded by JNA. 2. Change the appropriate library access environment variable before launching the VM. This is PATH on Windows, LD_LIBRARY_PATH on Linux, and DYLD_LIBRARY_PATH on OSX. 3. Make your native library available on your classpath, under the path &#123;OS&#125;-&#123;ARCH&#125;/&#123;LIBRARY&#125;, where &#123;OS&#125;-&#123;ARCH&#125; is JNA&#39;s canonical prefix for native libraries (e.g. win32-x86, linux-amd64, or darwin). If the resource is within a jar file it will be automatically extracted when loaded.","categories":[],"tags":[],"author":"王长金"},{"title":"webpack5 启动webpack-dev-server 报错解决","slug":"webpack5-启动webpack-dev-server-报错解决","date":"2021-01-27T15:53:00.000Z","updated":"2021-01-27T15:54:49.000Z","comments":true,"path":"2021/01/27/webpack5-启动webpack-dev-server-报错解决/","link":"","permalink":"http://wangcj.com.cn/2021/01/27/webpack5-%E5%90%AF%E5%8A%A8webpack-dev-server-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/","excerpt":"","text":"webpack 5 与 webpack-dev-server 3兼容性问题说明：这里使用的是 webpack: &quot;^5.9.0&quot;,webpack-cli: &quot;^4.2.0&quot;,webpack-dev-server: &quot;^3.11.0&quot; 问题1：通过 npx webpack-dev-server 启动项目失败，报错：Error: Cannot find module &#39;webpack-cli/bin/config-yargs&#39; 解决办法：使用 webpack serve --open 命令启动，这里需要注意，执行后会提示缺少打开对象, 所以在open 后添加你要打开的对象。（webpack serve --open Chrome.exe） 将这个命令写入package.json中，就不用每次都这样执行了。 &quot;scripts&quot;: &#123; &quot;start&quot;: &quot;webpack serve --open Chrome.exe&quot; &#125;, 执行 npm run start 页面就正常启动了问题2：设置了hot:true,更改app.vue里面随意更改点东西，发现终端确实重新打包了，但是浏览器页面并没有发生变化，手动刷新后，确实发生了更改。 解决办法：在webpack配置文件中设置 target: &#39;web&#39;，添加之后确实生效。但是看官方文档 这个属性的默认值就是web 也就是说不设置就可以，可能还是webpack5与webpack-dev-server3兼容性问题导致这个属性失效了，需要设置后才起作用。","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8C%85/"},{"name":"测试","slug":"测试","permalink":"http://wangcj.com.cn/tags/%E6%B5%8B%E8%AF%95/"}],"author":"王长金"},{"title":"JCEF 中 js 调用java 方法","slug":"JCEF-中-js-调用java-方法","date":"2021-01-27T13:35:00.000Z","updated":"2021-03-06T14:58:30.000Z","comments":true,"path":"2021/01/27/JCEF-中-js-调用java-方法/","link":"","permalink":"http://wangcj.com.cn/2021/01/27/JCEF-%E4%B8%AD-js-%E8%B0%83%E7%94%A8java-%E6%96%B9%E6%B3%95/","excerpt":"","text":"环境jcef 版本 49.87 jdk jdk8 32 位 os win 10 定义消息处理// Copyright (c) 2014 The Chromium Embedded Framework Authors. All rights // reserved. Use of this source code is governed by a BSD-style license that // can be found in the LICENSE file. package com.cares.fids.client.handler; import com.cares.fids.client.javascript.JavascriptHandler; import lombok.extern.slf4j.Slf4j; import org.apache.commons.lang3.StringUtils; import org.cef.browser.CefBrowser; import org.cef.callback.CefQueryCallback; import org.cef.handler.CefMessageRouterHandlerAdapter; import org.springframework.context.ApplicationContext; import org.springframework.stereotype.Component; import javax.annotation.PostConstruct; import javax.annotation.Resource; import java.util.concurrent.ConcurrentHashMap; @Slf4j @Component public class MessageRouterHandler extends CefMessageRouterHandlerAdapter &#123; @Resource ApplicationContext applicationContext; private ConcurrentHashMap&lt;String, JavascriptHandler&gt; handlers = new ConcurrentHashMap&lt;&gt;(10); @Override public boolean onQuery(CefBrowser browser, long query_id, String request, boolean persistent, CefQueryCallback callback) &#123; log.debug(&quot;query_id=&#123;&#125;,request=&#123;&#125;,persistent=&#123;&#125;,callback=&#123;&#125;&quot;, query_id, request, persistent, callback); if (StringUtils.isNotEmpty(request)) &#123; JavascriptHandler javascriptHandler = handlers.get(request); if (null != javascriptHandler) &#123; javascriptHandler.handleJavascript(); &#125; callback.success(&quot;调用成功&quot;); &#125; return true; &#125; @PostConstruct public void init() &#123; handlers.clear(); applicationContext.getBeansOfType(JavascriptHandler.class) .entrySet().stream().forEach(e -&gt; handlers.put(e.getKey(), e.getValue())); &#125; &#125; 配置bean @Bean public CefClient cefClient(CefApp cefApp, KeyboardHandler keyboardHandler, MessageRouterHandler messageRouterHandler) &#123; CefClient client_ = cefApp.createClient(); client_.addKeyboardHandler(keyboardHandler); client_.addLifeSpanHandler(new LifeSpanHandler(client_, false, false)); CefMessageRouter.CefMessageRouterConfig cefMessageRouterConfig = new CefMessageRouter.CefMessageRouterConfig(&quot;invokeJava&quot;, &quot;cancelJava&quot;); CefMessageRouter cefMessageRouter = CefMessageRouter.create(cefMessageRouterConfig); cefMessageRouter.addHandler(messageRouterHandler, true); client_.addMessageRouter(cefMessageRouter); return client_; &#125; js调用 后台日志","categories":[{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/categories/JCEF/"},{"name":"JAVA","slug":"JCEF/JAVA","permalink":"http://wangcj.com.cn/categories/JCEF/JAVA/"}],"tags":[{"name":"jcef","slug":"jcef","permalink":"http://wangcj.com.cn/tags/jcef/"},{"name":"js 调用java","slug":"js-调用java","permalink":"http://wangcj.com.cn/tags/js-%E8%B0%83%E7%94%A8java/"}],"author":"王长金"},{"title":"联想SR650 服务器上架记录","slug":"联想SSR650-服务器上架记录","date":"2021-01-22T07:50:00.000Z","updated":"2021-01-27T13:34:54.000Z","comments":true,"path":"2021/01/22/联想SSR650-服务器上架记录/","link":"","permalink":"http://wangcj.com.cn/2021/01/22/%E8%81%94%E6%83%B3SSR650-%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%9E%B6%E8%AE%B0%E5%BD%95/","excerpt":"","text":"开箱后有两根支架，分左右，上面刻 R表示安装右手边，L表示安装左手边 调整支架将支架固定在机架上 将服务器放在支架上，调整位置将两边各四颗螺丝卡到对应位置 放好后，同时将支架上两边的蓝色圆卡片，往上抬，就可以把服务器推入机架了。 通电开机，插入网线，按F1安装系统 新建 raid磁盘整列，按照提示操作即可 安装操作系统，需提前刻录u盘（刻录工具rufus，整个u盘刻录为iso），只能安装安装指南列表中的操作系统 按照指南自动安装系统，不要选手动安装","categories":[{"name":"机房","slug":"机房","permalink":"http://wangcj.com.cn/categories/%E6%9C%BA%E6%88%BF/"}],"tags":[{"name":"服务器安装","slug":"服务器安装","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85/"}],"author":"王长金"},{"title":"nginx  stream TCP 负载均衡","slug":"nginx-stream-TCP-负载均衡","date":"2021-01-14T07:32:00.000Z","updated":"2021-01-14T08:06:14.000Z","comments":true,"path":"2021/01/14/nginx-stream-TCP-负载均衡/","link":"","permalink":"http://wangcj.com.cn/2021/01/14/nginx-stream-TCP-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","excerpt":"","text":"nginx tcp 负载要求 nginx 版本 1.9.0+ 配置stream &#123; upstream backend &#123; hash $remote_addr consistent; server 10.10.10.2:9526 weight=5; server 10.10.10.3:9526 weight=5; server 10.10.10.4:9526 weight=5; &#125; server &#123; listen 9526; proxy_connect_timeout 10s; proxy_timeout 30s; proxy_pass backend; &#125; &#125; 后端服务 客户端连接情况可以看到客户端连接到不同的服务，配合keepalive vip，效果应该不错小规模后台服务upstream可以写死ip 大规模的微服务，后续可以对 stream 模块改造，从配置中心拉取服务地址到 upstream","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"http://wangcj.com.cn/tags/nginx/"},{"name":"stream","slug":"stream","permalink":"http://wangcj.com.cn/tags/stream/"},{"name":"tcp 负载","slug":"tcp-负载","permalink":"http://wangcj.com.cn/tags/tcp-%E8%B4%9F%E8%BD%BD/"}],"author":"王长金"},{"title":"JAVACV 录屏推流并使用flv.js 播放","slug":"JAVACV-录屏推流并使用flv-js-播放","date":"2021-01-12T04:01:00.000Z","updated":"2021-01-12T04:32:18.000Z","comments":true,"path":"2021/01/12/JAVACV-录屏推流并使用flv-js-播放/","link":"","permalink":"http://wangcj.com.cn/2021/01/12/JAVACV-%E5%BD%95%E5%B1%8F%E6%8E%A8%E6%B5%81%E5%B9%B6%E4%BD%BF%E7%94%A8flv-js-%E6%92%AD%E6%94%BE/","excerpt":"","text":"环境流媒体服务器 ubuntu2004+nginx+nginx-http-flv-module 推流 win10+javacv 拉流 win10 + flv.js nginx 编译安装依赖libpcre3sudo apt install libpcre3-devzlib下载源码http://www.zlib.net/zlib-1.2.11.tar.gz tar zxvf zlib-1.2.11.tar.gz cd zlib-1.2.11 ./configure make make install nginx-http-flv-modulehttps://github.com/winshining/nginx-http-flv-module/archive/master.zip nginx下载源码http://nginx.org/download/nginx-1.19.6.tar.gz tar zxvf nginx-1.19.6.tar.gz cd nginx-1.19.6 ./configure --prefix=/home/wangcj/nginx --add-module=/home/wagncj/nginx-http-flv-module make make install nginx 流媒体服务器配置worker_processes 1; #should be 1 for Windows, for it doesn&#39;t support Unix domain socket error_log logs/error.log error; events &#123; worker_connections 4096; &#125; http &#123; include mime.types; default_type application/octet-stream; keepalive_timeout 65; server &#123; listen 80; location / &#123; root html; index index.html index.htm; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; location /live &#123; flv_live on; #open flv live streaming (subscribe) chunked_transfer_encoding on; #open &#39;Transfer-Encoding: chunked&#39; response add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;; #add additional HTTP header add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39;; #add additional HTTP header &#125; location /hls &#123; types &#123; application/vnd.apple.mpegurl m3u8; video/mp2t ts; &#125; root /tmp; add_header &#39;Cache-Control&#39; &#39;no-cache&#39;; &#125; location /dash &#123; root /tmp; add_header &#39;Cache-Control&#39; &#39;no-cache&#39;; &#125; location /stat &#123; #configuration of streaming &amp; recording statistics rtmp_stat all; rtmp_stat_stylesheet stat.xsl; &#125; location /stat.xsl &#123; root /var/www/rtmp; #specify in where stat.xsl located &#125; location /control &#123; rtmp_control all; #configuration of control module of rtmp &#125; &#125; &#125; rtmp_auto_push on; rtmp_auto_push_reconnect 1s; rtmp_socket_dir /tmp; rtmp &#123; out_queue 4096; out_cork 8; max_streams 128; timeout 15s; drop_idle_publisher 15s; log_interval 5s; #interval used by log module to log in access.log, it is very useful for debug log_size 1m; #buffer size used by log module to log in access.log server &#123; listen 1935; server_name www.test.*; #for suffix wildcard matching of virtual host name application myapp &#123; live on; gop_cache on; #open GOP cache for reducing the wating time for the first picture of video &#125; application hls &#123; live on; hls on; hls_path /tmp/hls; &#125; application dash &#123; live on; dash on; dash_path /tmp/dash; &#125; &#125; server &#123; listen 1935; server_name *.test.com; #for prefix wildcard matching of virtual host name application myapp &#123; live on; gop_cache on; #open GOP cache for reducing the wating time for the first picture of video &#125; &#125; server &#123; listen 1935; server_name www.test.com; #for completely matching of virtual host name application myapp &#123; live on; gop_cache on; #open GOP cache for reducing the wating time for the first picture of video &#125; &#125; &#125; javacv 推流引入依赖 &lt;dependency&gt; &lt;groupId&gt;org.bytedeco&lt;/groupId&gt; &lt;artifactId&gt;javacv&lt;/artifactId&gt; &lt;version&gt;1.5.4&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.bytedeco&lt;/groupId&gt; &lt;artifactId&gt;javacv-platform&lt;/artifactId&gt; &lt;version&gt;1.5.4&lt;/version&gt; &lt;/dependency&gt; 推流代码 FFmpegFrameGrabber grabber = new FFmpegFrameGrabber(&quot;desktop&quot;); grabber.setImageWidth(1920); grabber.setImageHeight(1080); grabber.setFormat(&quot;gdigrab&quot;); grabber.setFrameRate(15); FFmpegFrameRecorder recorder = new FFmpegFrameRecorder(&quot;rtmp://192.168.226.128:1935/myapp/123&quot;,grabber.getImageWidth(),grabber.getImageHeight()); recorder.setFormat(&quot;flv&quot;); recorder.setFrameRate(grabber.getFrameRate()); recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264); try &#123; recorder.start(); grabber.start(); while (!Thread.interrupted()) &#123; long start = System.currentTimeMillis(); Frame frame = grabber.grabImage(); recorder.record(frame); &#125; &#125; catch (Exception exception) &#123; exception.printStackTrace(); &#125; 启动推流 flv.js 拉流前端代码 &lt;script src=&quot;flv.min.js&quot;&gt;&lt;/script&gt; &lt;video id=&quot;videoElement&quot; muted&gt;&lt;/video&gt; &lt;script&gt; if (flvjs.isSupported()) &#123; var videoElement = document.getElementById(&#39;videoElement&#39;); var flvPlayer = flvjs.createPlayer(&#123; type: &#39;flv&#39;, url: &#39;http://192.168.226.128/live?app=myapp&amp;stream=123&#39; &#125;); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); flvPlayer.play(); &#125; &lt;/script&gt; 直播效果 后续视频感觉有几秒延时。之前按照videojs一直没成功，并且现在flash逐渐退出，果断放弃videojs","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"javacv","slug":"javacv","permalink":"http://wangcj.com.cn/tags/javacv/"},{"name":"flv.js","slug":"flv-js","permalink":"http://wangcj.com.cn/tags/flv-js/"},{"name":"直播","slug":"直播","permalink":"http://wangcj.com.cn/tags/%E7%9B%B4%E6%92%AD/"},{"name":"屏幕录制","slug":"屏幕录制","permalink":"http://wangcj.com.cn/tags/%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6/"}],"author":"王长金"},{"title":"SPRING CLOUD BUS 自定义事件","slug":"SPRING-CLOUD-BUS-自定义事件","date":"2021-01-06T13:17:00.000Z","updated":"2021-01-06T13:28:31.000Z","comments":true,"path":"2021/01/06/SPRING-CLOUD-BUS-自定义事件/","link":"","permalink":"http://wangcj.com.cn/2021/01/06/SPRING-CLOUD-BUS-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/","excerpt":"","text":"引人依赖 &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-bus-amqp&lt;/artifactId&gt; &lt;/dependency&gt;配置rabbit参数 rabbitmq: host: 172.21.126.136 port: 5672 username: cares password: Cares123 定义事件package com.cares.fids.server.events; import org.springframework.cloud.bus.event.RemoteApplicationEvent; /** * @author wangcj * @desc * @date 2021/1/5 14:25 **/ public class FidsCmdRequestRemoteEvent extends RemoteApplicationEvent &#123; public FidsCmdRequestRemoteEvent() &#123; &#125; public FidsCmdRequestRemoteEvent(Object source, String originService) &#123; super(source, originService); &#125; &#125; 发布事件 @Resource private BusProperties busProperties; @Resource private ApplicationContext applicationContext; FidsCmdRequestRemoteEvent event = new FidsCmdRequestRemoteEvent(baseMsg, busProperties.getId()); applicationContext.publishEvent(event); 监听事件 @EventListener public void sendRequest(FidsCmdRequestRemoteEvent event) &#123; BaseMsg msg = (BaseMsg) event.getSource(); log.info(&quot;收到广播消息&#123;&#125;,mac=&#123;&#125;&quot;, msg.getType(), msg.getClientId()); Channel channel = clientConnectionMap.getClientChannelBytoken(msg.getClientId()); if (null != channel) &#123; channel.writeAndFlush(msg); &#125; &#125; 总结发布事件时，本机serviceid要使用 busProperties.getId()，否则消息发不到其他微服务上本文构造函数表示发送所有微服务 在需要微服务之间协调时，spring cloud bus将会很方便 比如微服务开启socket服务，前端通过socket服务向指定的socket客户端发送指令 那么前端请求到达微服务后，将请求广播，指定的socket的客户端连接到哪个微服务，哪个微服务就处理","categories":[{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"}],"tags":[{"name":"spring cloud bus","slug":"spring-cloud-bus","permalink":"http://wangcj.com.cn/tags/spring-cloud-bus/"}],"author":"王长金"},{"title":"DATAV 支持低版本浏览器es7转es5","slug":"DATAV-支持低版本浏览器es7转es5","date":"2021-01-06T07:51:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2021/01/06/DATAV-支持低版本浏览器es7转es5/","link":"","permalink":"http://wangcj.com.cn/2021/01/06/DATAV-%E6%94%AF%E6%8C%81%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8es7%E8%BD%ACes5/","excerpt":"","text":"问题datav在xp下谷歌浏览器报错，xp下谷歌浏览器只支持es2015语法 解决思路：使用babel将es2018语法转为es2015 新建目录，复制要转换的datav.map.vue.js到文件夹命令行进入新建的文件夹新建 bable 配置文件 .babelrc&#123; &quot;presets&quot;: [ &quot;es2015&quot;, &quot;vue&quot;, &quot;stage-2&quot; ], &quot;plugins&quot;: [] &#125; 安装bablenpm install -g babel-cli安装转码规则npm install --save-dev babel-preset-es2015 npm install --save-dev babel-preset-stage-2 执行转换bable datav.vue.map.js -o a.js","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://wangcj.com.cn/tags/vue/"},{"name":"低版本浏览器兼容","slug":"低版本浏览器兼容","permalink":"http://wangcj.com.cn/tags/%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9/"}],"author":"王长金"},{"title":"服务端推送 eventsource","slug":"服务端推送-eventsource","date":"2021-01-06T07:51:00.000Z","updated":"2021-01-07T07:56:37.000Z","comments":true,"path":"2021/01/06/服务端推送-eventsource/","link":"","permalink":"http://wangcj.com.cn/2021/01/06/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81-eventsource/","excerpt":"","text":"前台$(function () &#123; let source = null; // 用时间戳模拟登录用户 const userId = new Date().getTime(); if (window.EventSource) &#123; // 建立连接 source = new EventSource(ctx + &quot;fids/screen_status/&quot; + userId); source.addEventListener(&#39;open&#39;, function (e) &#123; setMessageInnerHTML(&quot;建立连接。。。&quot;); &#125;, false); source.addEventListener(&#39;message&#39;, function (e) &#123; setMessageInnerHTML(e.data); $.table.refresh(); &#125;); source.addEventListener(&#39;error&#39;, function (e) &#123; if (e.readyState === EventSource.CLOSED) &#123; setMessageInnerHTML(&quot;连接关闭&quot;); &#125; else &#123; console.log(e); &#125; &#125;, false); &#125; else &#123; setMessageInnerHTML(&quot;你的浏览器不支持SSE&quot;); &#125; window.onbeforeunload = function () &#123; closeSse(); &#125;; function closeSse() &#123; source.close(); const httpRequest = new XMLHttpRequest(); httpRequest.open(&#39;GET&#39;, ctx + &quot;fids/close_screen_status/&quot; + userId, true); httpRequest.send(); console.log(&quot;close&quot;); &#125; function setMessageInnerHTML(innerHTML) &#123; console.log(innerHTML); &#125; &#125;) api接口 /** * 用于创建连接 */ @GetMapping(&quot;/fids/screen_status/&#123;userId&#125;&quot;) public SseEmitter connect(@PathVariable String userId) &#123; if (StringUtils.isEmpty(userId)) &#123; return null; &#125; return sseEmitterService.connect(userId); &#125; @GetMapping(&quot;/fids/close_screen_status/&#123;userId&#125;&quot;) public ResponseEntity&lt;String&gt; close(@PathVariable String userId) &#123; if (StringUtils.isEmpty(userId)) &#123; return null; &#125; sseEmitterService.removeUser(userId); return ResponseEntity.ok(&quot;连接关闭&quot;); &#125; 服务端推送实现@Slf4j @Service public class SseEmitterService &#123; private Map&lt;String, SseEmitter&gt; sseEmitterMap = new ConcurrentHashMap&lt;&gt;(); public SseEmitter connect(String userId) &#123; // 设置超时时间，0表示不过期。默认30秒，超过时间未完成会抛出异常：AsyncRequestTimeoutException SseEmitter sseEmitter = new SseEmitter(0L); // 注册回调 sseEmitter.onCompletion(completionCallBack(userId)); sseEmitter.onError(errorCallBack(userId)); sseEmitter.onTimeout(timeoutCallBack(userId)); sseEmitterMap.put(userId, sseEmitter); // 数量+1 log.info(&quot;创建新的sse连接，当前用户：&#123;&#125;&quot;, userId); return sseEmitter; &#125; /** * 给指定用户发送信息 */ public void sendMessage(String userId, String message) &#123; if (sseEmitterMap.containsKey(userId)) &#123; try &#123; sseEmitterMap.get(userId).send(message); &#125; catch (IOException e) &#123; log.error(&quot;用户[&#123;&#125;]推送异常:&#123;&#125;&quot;, userId, e.getMessage()); removeUser(userId); &#125; &#125; &#125; /** * 群发消息 */ public void batchSendMessage(String wsInfo, List&lt;String&gt; ids) &#123; ids.forEach(userId -&gt; sendMessage(wsInfo, userId)); &#125; /** * 群发所有人 */ public void batchSendMessage(String wsInfo) &#123; sseEmitterMap.forEach((k, v) -&gt; &#123; try &#123; v.send(wsInfo, MediaType.APPLICATION_JSON); &#125; catch (IOException e) &#123; log.error(&quot;用户[&#123;&#125;]推送异常:&#123;&#125;&quot;, k, e.getMessage()); removeUser(k); &#125; &#125;); &#125; /** * 移除用户连接 */ public void removeUser(String userId) &#123; sseEmitterMap.remove(userId); // 数量-1 log.info(&quot;移除用户：&#123;&#125;&quot;, userId); &#125; /** * 获取当前连接信息 */ public List&lt;String&gt; getIds() &#123; return new ArrayList&lt;&gt;(sseEmitterMap.keySet()); &#125; private Runnable completionCallBack(String userId) &#123; return () -&gt; &#123; log.info(&quot;结束连接：&#123;&#125;&quot;, userId); removeUser(userId); &#125;; &#125; private Runnable timeoutCallBack(String userId) &#123; return () -&gt; &#123; log.info(&quot;连接超时：&#123;&#125;&quot;, userId); removeUser(userId); &#125;; &#125; private Consumer&lt;Throwable&gt; errorCallBack(String userId) &#123; return throwable -&gt; &#123; log.info(&quot;连接异常：&#123;&#125;&quot;, userId); removeUser(userId); &#125;; &#125; &#125; 使用当有数据产生时调用 SseEmitterService 的send 方法即可 eventsource 目前只有主流浏览器支持","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"推送","slug":"推送","permalink":"http://wangcj.com.cn/tags/%E6%8E%A8%E9%80%81/"}],"author":"王长金"},{"title":"FutureTask 获取异步处理结果","slug":"FutureTask-获取异步处理结果","date":"2020-12-25T06:54:51.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/12/25/FutureTask-获取异步处理结果/","link":"","permalink":"http://wangcj.com.cn/2020/12/25/FutureTask-%E8%8E%B7%E5%8F%96%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86%E7%BB%93%E6%9E%9C/","excerpt":"","text":"public byte[] getScreenShot(String mac) &#123; if (!ClientConnectionMap.keySet().contains(mac)) &#123; throw new BusinessException(&quot;航显ID &quot; + mac + &quot; 不存在&quot;); &#125; Channel channel = ClientConnectionMap.getClientChannelBytoken(mac); if (null == channel) &#123; throw new BusinessException(&quot;连接异常&quot;); &#125; String reqId = UUID.randomUUID().toString(); FidsScreenShotReq req = new FidsScreenShotReq(); req.setReqId(reqId); channel.writeAndFlush(req); FutureTask&lt;byte[]&gt; stringFutureTask = new FutureTask&lt;&gt;(() -&gt; &#123; while (true) &#123; byte[] img = FidsScreenShotBusiness.map.get(reqId); if (null != img) &#123; FidsScreenShotBusiness.map.remove(reqId); return img; &#125; Thread.sleep(100); &#125; &#125;); executorService.submit(stringFutureTask); byte[] rest = null; try &#123; rest = stringFutureTask.get(); &#125; catch (Exception e) &#123; throw new BusinessException(&quot;查看航显屏异常&quot;); &#125; return rest; &#125;","categories":[{"name":"java","slug":"java","permalink":"http://wangcj.com.cn/categories/java/"}],"tags":[],"author":"王长金"},{"title":"SPING CLOUD GATEWAY 自定义负载均衡","slug":"SPING-CLOUD-GATEWAY-自定义负载均衡","date":"2020-12-24T09:12:03.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/12/24/SPING-CLOUD-GATEWAY-自定义负载均衡/","link":"","permalink":"http://wangcj.com.cn/2020/12/24/SPING-CLOUD-GATEWAY-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","excerpt":"","text":"问题微服务和航显设备通过socket连接，微服务端管理socket的连接，用户从web发送指令到航显设备执行。如果用户发送的指令到一台没有soket连接的微服务，那么控制指令将无法到达航显设备。 解决思路用户发送的请求通过 spring cloud gateway负载，自定义负载均衡，发送请求的时候带航显设备连接的微服务ip，自定义负载根据ip去选择转发的服务器，这样请求就不会到达没有连接的微服务 自定义负载均衡全局过滤器 LoadBalancerClientFilter根据自动配置规则，如果用户定义了LoadBalancerClientFilter ，就使用用户定义的 package com.cares.gateway.filter; import com.cares.gateway.rules.FidsLoadBalanceRule; import com.google.common.collect.Maps; import org.springframework.cloud.client.ServiceInstance; import org.springframework.cloud.client.loadbalancer.LoadBalancerClient; import org.springframework.cloud.gateway.config.LoadBalancerProperties; import org.springframework.cloud.gateway.filter.LoadBalancerClientFilter; import org.springframework.cloud.gateway.route.Route; import org.springframework.stereotype.Component; import org.springframework.web.server.ServerWebExchange; import javax.annotation.Resource; import java.net.URI; import java.util.Map; import static com.cares.gateway.consts.GatewayConstant.FIDS_CLIENT_KEY; import static org.springframework.cloud.gateway.support.ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR; import static org.springframework.cloud.gateway.support.ServerWebExchangeUtils.GATEWAY_ROUTE_ATTR; /** * @author wangcj * @desc * @date 2020/12/24 12:05 **/ @Component public class CustomLoadBalancerClientFilter extends LoadBalancerClientFilter &#123; @Resource FidsLoadBalanceRule fidsLoadBalanceRule; public CustomLoadBalancerClientFilter(LoadBalancerClient loadBalancer, LoadBalancerProperties properties) &#123; super(loadBalancer, properties); &#125; /** * fids 模块向航显屏发送指令 * 1、航显屏必须在线 * 2、请求URL要带$FIDS_CLIENT=host 参数 * host是client当前连接到的主机ip，连接时记录到数据库 * * @param exchange * @return */ @Override protected ServiceInstance choose(ServerWebExchange exchange) &#123; Route route = exchange.getAttribute(GATEWAY_ROUTE_ATTR); String serviceId = ((URI) exchange.getAttribute(GATEWAY_REQUEST_URL_ATTR)).getHost(); Object hint = null; //这里使用userId做为选择服务实例的key if (route.getId().equals(&quot;acdm-fids&quot;)) &#123; String host = exchange.getRequest().getQueryParams().getFirst(FIDS_CLIENT_KEY); Map&lt;String, Object&gt; map = Maps.newHashMap(); map.put(FIDS_CLIENT_KEY, host); hint=map; &#125; return fidsLoadBalanceRule.choose(serviceId, hint); &#125; &#125; 自定义规则package com.cares.gateway.rules; import com.netflix.client.config.IClientConfig; import com.netflix.loadbalancer.AbstractLoadBalancerRule; import com.netflix.loadbalancer.ILoadBalancer; import com.netflix.loadbalancer.Server; import org.springframework.cloud.client.ServiceInstance; import org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient; import org.springframework.cloud.netflix.ribbon.RibbonUtils; import org.springframework.cloud.netflix.ribbon.ServerIntrospector; import org.springframework.cloud.netflix.ribbon.SpringClientFactory; import org.springframework.stereotype.Component; import org.springframework.util.CollectionUtils; import javax.annotation.Resource; import java.util.List; import java.util.Map; import java.util.Optional; import java.util.Random; import static com.cares.gateway.consts.GatewayConstant.FIDS_CLIENT_KEY; /** * @author wangcj * @desc * @date 2020/12/24 11:30 **/ @Component public class FidsLoadBalanceRule extends AbstractLoadBalancerRule &#123; @Resource SpringClientFactory springClientFactory; private ILoadBalancer lb; @Override public void initWithNiwsConfig(IClientConfig iClientConfig) &#123; &#125; /** * fids 模块向航显屏发送指令 * 1、航显屏必须在线 * 2、请求URL要带$FIDS_CLIENT=host 参数 * host是client当前连接到的主机ip，连接时记录到数据库 * * @param o * @return */ @Override public Server choose(Object o) &#123; List&lt;Server&gt; servers = lb.getReachableServers(); if (CollectionUtils.isEmpty(servers)) &#123; return null; &#125; if (null!=o &amp;&amp; o instanceof Map) &#123; Map&lt;String,Object&gt; map = (Map&lt;String, Object&gt;) o; String host = (String) map.get(FIDS_CLIENT_KEY); Optional&lt;Server&gt; optional = servers.stream().filter(s -&gt; s.getHost().equals(host)).findAny(); if (optional.isPresent()) &#123; return optional.get(); &#125; &#125; Random random = new Random(System.currentTimeMillis()); return servers.get(random.nextInt(servers.size())); &#125; public ServiceInstance choose(String serviceId, Object hint) &#123; this.lb = springClientFactory.getLoadBalancer(serviceId); Server server = choose(hint); ServerIntrospector serverIntrospector = springClientFactory.getInstance(serviceId, ServerIntrospector.class); Map map = serverIntrospector.getMetadata(server); return new RibbonLoadBalancerClient.RibbonServer(serviceId, server, isSecure(server, serviceId), map); &#125; private boolean isSecure(Server server, String serviceId) &#123; ServerIntrospector serverIntrospector = springClientFactory.getInstance(serviceId, ServerIntrospector.class); IClientConfig config = springClientFactory.getClientConfig(serviceId); return RibbonUtils.isSecure(config, serverIntrospector, server); &#125; &#125;","categories":[{"name":"SPRINGCLOUD","slug":"SPRINGCLOUD","permalink":"http://wangcj.com.cn/categories/SPRINGCLOUD/"}],"tags":[],"author":"王长金"},{"title":"docker 清理日志","slug":"docker-清理日志","date":"2020-12-24T01:47:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/12/24/docker-清理日志/","link":"","permalink":"http://wangcj.com.cn/2020/12/24/docker-%E6%B8%85%E7%90%86%E6%97%A5%E5%BF%97/","excerpt":"","text":"#!/bin/sh echo &quot;======== start clean docker containers logs ========&quot; logs=$(find /var/lib/docker/containers/ -name *-json.log) for log in $logs do echo &quot;clean logs : $log&quot; cat /dev/null &gt; $log done echo &quot;======== end clean docker containers logs ========&quot;","categories":[{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/tags/docker/"},{"name":"日志清理","slug":"日志清理","permalink":"http://wangcj.com.cn/tags/%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86/"}],"author":"王长金"},{"title":"Netty 服务端连接管理","slug":"Netty-服务端连接管理","date":"2020-12-23T14:18:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/12/23/Netty-服务端连接管理/","link":"","permalink":"http://wangcj.com.cn/2020/12/23/Netty-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/","excerpt":"","text":"FidsServer.javapackage com.cares.fids.server.comm; import io.netty.bootstrap.ServerBootstrap; import io.netty.channel.ChannelFuture; import io.netty.channel.ChannelOption; import io.netty.channel.EventLoopGroup; import io.netty.channel.nio.NioEventLoopGroup; import io.netty.channel.socket.nio.NioServerSocketChannel; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:38 **/ @Slf4j @Component public class FidsServer &#123; private static final Integer port = 9526; @Resource private FidsServerChannelInit childChannelHandler; public void startServer() &#123; new Thread(() -&gt; &#123; run(port); &#125;).start(); &#125; public void run(int port) &#123; EventLoopGroup bossGroup = new NioEventLoopGroup(); EventLoopGroup workerGroup = new NioEventLoopGroup(); try &#123; ServerBootstrap bootstrap = new ServerBootstrap(); bootstrap.group(bossGroup, workerGroup) .channel(NioServerSocketChannel.class) .option(ChannelOption.SO_BACKLOG, 128) .childHandler(childChannelHandler); //绑定端口，同步等待成功 ChannelFuture f = bootstrap.bind(port).sync(); //等待服务监听端口关闭 if (f.isSuccess()) &#123; log.info(&quot;FIDS SOCKET 服务端启动成功！port=&#123;&#125;&quot;, port); &#125; f.channel().closeFuture().sync(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; //退出，释放线程资源 workerGroup.shutdownGracefully(); bossGroup.shutdownGracefully(); &#125; &#125; &#125; FidsServerChannelInit.javapackage com.cares.fids.server.comm; import com.cares.fids.server.comm.handler.FidsClientPreprocessHandler; import com.cares.fids.server.comm.handler.FidsHeartbeatHandler; import com.cares.fids.server.comm.handler.FidsServerHandler; import io.netty.channel.ChannelInitializer; import io.netty.channel.ChannelPipeline; import io.netty.channel.socket.SocketChannel; import io.netty.handler.codec.serialization.ClassResolvers; import io.netty.handler.codec.serialization.ObjectDecoder; import io.netty.handler.codec.serialization.ObjectEncoder; import io.netty.handler.timeout.IdleStateHandler; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:25 **/ @Component public class FidsServerChannelInit extends ChannelInitializer&lt;SocketChannel&gt; &#123; @Resource FidsServerHandler fidsServerHandler; @Resource FidsHeartbeatHandler fidsHeartbeatHandler; @Resource FidsClientPreprocessHandler fidsClientPreprocessHandler; public void initChannel(SocketChannel socketChannel) throws Exception &#123; ChannelPipeline pipeline = socketChannel.pipeline(); pipeline.addLast(new IdleStateHandler(0, 0, 20)); pipeline.addLast(new ObjectEncoder()); pipeline.addLast(new ObjectDecoder(Integer.MAX_VALUE, ClassResolvers.cacheDisabled(getClass().getClassLoader()))); pipeline.addLast(fidsClientPreprocessHandler); pipeline.addLast(fidsHeartbeatHandler); pipeline.addLast(fidsServerHandler); &#125; &#125; FidsClientPreprocessHandler.javapackage com.cares.fids.server.comm.handler; import com.cares.acdm.fids.protocol.msg.BaseMsg; import com.cares.fids.server.comm.ClientConnectionMap; import com.cares.fids.server.service.FidsBusinessService; import io.netty.channel.Channel; import io.netty.channel.ChannelHandler; import io.netty.channel.ChannelHandlerContext; import io.netty.channel.ChannelInboundHandlerAdapter; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/23 9:35 **/ @Slf4j @Component @ChannelHandler.Sharable public class FidsClientPreprocessHandler extends ChannelInboundHandlerAdapter &#123; @Resource FidsBusinessService fidsBusinessService; @Override public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception &#123; Channel channel = ctx.channel(); BaseMsg baseMsg = (BaseMsg) msg; String clientId = baseMsg.getClientId(); ClientConnectionMap.addClientConnection(clientId, channel); ctx.fireChannelRead(baseMsg); String mac = channel.attr(ClientConnectionMap.token).get(); fidsBusinessService.online(mac); &#125; @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception &#123; Channel channel = ctx.channel(); ClientConnectionMap.removeClientConnection(channel); String mac = channel.attr(ClientConnectionMap.token).get(); fidsBusinessService.offline(mac); &#125; @Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception &#123; Channel channel = ctx.channel(); ClientConnectionMap.removeClientConnection(channel); ctx.close(); &#125; &#125; FidsHeartbeatHandler.javapackage com.cares.fids.server.comm.handler; import com.cares.acdm.fids.protocol.FidsMsgType; import com.cares.acdm.fids.protocol.msg.BaseMsg; import com.cares.acdm.fids.protocol.msg.FidsHeartbeatReq; import com.cares.fids.server.comm.ClientConnectionMap; import io.netty.channel.*; import io.netty.handler.timeout.IdleStateEvent; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; /** * @author wangcj * @desc * @date 2020/12/23 11:25 **/ @Slf4j @Component @ChannelHandler.Sharable public class FidsHeartbeatHandler extends ChannelInboundHandlerAdapter &#123; @Override public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception &#123; BaseMsg baseMsg = (BaseMsg) msg; if (baseMsg.getType().equals(FidsMsgType.FIDS_HEARTBEAT_RSP)) &#123; log.info(&quot;收到客户端心跳响应&quot;); &#125; else &#123; ctx.fireChannelRead(msg); &#125; &#125; @Override public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception &#123; if (evt instanceof IdleStateEvent) &#123; log.info(&quot;=====连接空闲，尝试发送心跳=====&quot;); FidsHeartbeatReq req = new FidsHeartbeatReq(); req.setType(FidsMsgType.FIDS_HEARTBEAT_REQ); ctx.channel().writeAndFlush(req).addListener((ChannelFutureListener) future -&gt; &#123; log.info(&quot;hearbeat result:&quot; + future.isSuccess() + &quot;,reason:&quot; + future.cause()); if (!future.isSuccess()) &#123; future.cause().printStackTrace(); &#125; &#125;).addListener(ChannelFutureListener.CLOSE_ON_FAILURE); &#125; else &#123; super.userEventTriggered(ctx, evt); &#125; &#125; @Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception &#123; Channel channel = ctx.channel(); ClientConnectionMap.removeClientConnection(channel); ctx.close(); &#125; &#125; FidsServerHandler.javapackage com.cares.fids.server.comm.handler; import com.cares.acdm.fids.protocol.msg.BaseMsg; import com.cares.fids.server.comm.ClientConnectionMap; import com.cares.fids.server.service.FidsBusinessService; import io.netty.channel.Channel; import io.netty.channel.ChannelHandler; import io.netty.channel.ChannelHandlerContext; import io.netty.channel.SimpleChannelInboundHandler; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:31 **/ @Slf4j @Component @ChannelHandler.Sharable public class FidsServerHandler extends SimpleChannelInboundHandler&lt;BaseMsg&gt; &#123; @Resource private FidsBusinessService fidsBusinessService; @Override protected void channelRead0(ChannelHandlerContext ctx, BaseMsg baseMsg) throws Exception &#123; log.info(&quot;业务处理&quot;); fidsBusinessService.processBusiness(baseMsg); &#125; @Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception &#123; Channel channel = ctx.channel(); ClientConnectionMap.removeClientConnection(channel); ctx.close(); &#125; &#125; package com.cares.fids.server.comm; import io.netty.channel.Channel; import io.netty.util.AttributeKey; import org.apache.commons.lang3.StringUtils; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.ArrayList; import java.util.List; import java.util.Set; import java.util.concurrent.ConcurrentHashMap; public class ClientConnectionMap &#123; private static final Logger logger = LoggerFactory.getLogger(ClientConnectionMap.class); public static ConcurrentHashMap&lt;String, Channel&gt; allClientMap = new ConcurrentHashMap&lt;&gt;(); public static AttributeKey&lt;String&gt; token = AttributeKey.valueOf(&quot;token&quot;); public static void addClientConnection(String token, Channel channel) &#123; channel.attr(ClientConnectionMap.token).set(token); if (allClientMap.contains(token)) &#123; return; &#125; allClientMap.put(token, channel); logger.info(&quot;&#123;&#125; add, token &#123;&#125; &quot;, channel, token); &#125; public static void addClientConnection(Channel channel) &#123; String token = channel.attr(ClientConnectionMap.token).get(); allClientMap.put(token, channel); logger.info(&quot;&#123;&#125; add, token &#123;&#125; &quot;, channel, token); &#125; /** * 当客户端掉线，channel被关闭时移除 * * @param channel */ public static void removeClientConnection(Channel channel) &#123; String key = channel.attr(token).get(); if (StringUtils.isNotEmpty(key) &amp;&amp; allClientMap.containsKey(key)) &#123; allClientMap.remove(key); logger.info(&quot;&#123;&#125; remove, token &#123;&#125; &quot;, channel, key); &#125; &#125; public static List&lt;Channel&gt; getClientChannel(String token) &#123; List&lt;Channel&gt; channels = new ArrayList&lt;&gt;(); if (StringUtils.isNotEmpty(token)) &#123; for (String item : allClientMap.keySet()) &#123; if (StringUtils.isNotEmpty(item)) &#123; String itemKey; int index = item.lastIndexOf(&quot;_&quot;); if (index &gt; -1) &#123; itemKey = item.substring(0, item.lastIndexOf(&quot;_&quot;)); &#125; else &#123; itemKey = item; &#125; if (itemKey.equals(token)) &#123; channels.add(allClientMap.get(item)); &#125; &#125; &#125; &#125; return channels; &#125; public static Channel getClientChannelBytoken(String token) &#123; return allClientMap.get(token); &#125; public static Set&lt;String&gt; keySet() &#123; return allClientMap.keySet(); &#125; &#125;","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"netty 连接管理","slug":"netty-连接管理","permalink":"http://wangcj.com.cn/tags/netty-%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/"}],"author":"王长金"},{"title":"Netty 客户端断线重连","slug":"Netty-客户端断线重连","date":"2020-12-23T14:11:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/12/23/Netty-客户端断线重连/","link":"","permalink":"http://wangcj.com.cn/2020/12/23/Netty-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E/","excerpt":"","text":"启动时候服务端不在线 EventLoopGroup eventLoopGroup = new NioEventLoopGroup(); Bootstrap bootstrap = new Bootstrap(); bootstrap.channel(NioSocketChannel.class); bootstrap.option(ChannelOption.SO_KEEPALIVE, true); bootstrap.group(eventLoopGroup); bootstrap.remoteAddress(host, port); bootstrap.handler(fidsClientChannelInit); ChannelFuture future = bootstrap.connect(host, port); future.addListener(reConnectListener); ReConnectListener.java package com.cares.fids.client.comm.listener; import com.cares.fids.client.comm.FidsClient; import io.netty.channel.ChannelFuture; import io.netty.channel.ChannelFutureListener; import io.netty.channel.EventLoop; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; import java.util.concurrent.TimeUnit; /** * @author wangcj * @desc * @date 2020/12/23 0:19 **/ @Slf4j @Component public class ReConnectListener implements ChannelFutureListener &#123; @Resource private FidsClient fidsClient; @Override public void operationComplete(ChannelFuture channelFuture) throws Exception &#123; if (!channelFuture.isSuccess()) &#123; final EventLoop loop = channelFuture.channel().eventLoop(); loop.schedule(() -&gt; &#123; System.err.println(&quot;服务端链接不上，开始重连操作...&quot;); fidsClient.start(); &#125;, 1L, TimeUnit.SECONDS); &#125; else &#123; log.info(&quot;服务端链接成功...&quot;); &#125; &#125; &#125; 客户端运行中服务端掉线 @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception &#123; final EventLoop eventLoop = ctx.channel().eventLoop(); eventLoop.schedule(() -&gt; fidsClient.start(), 1L, TimeUnit.SECONDS); super.channelInactive(ctx); &#125;","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"netty","slug":"netty","permalink":"http://wangcj.com.cn/tags/netty/"},{"name":"断线重连","slug":"断线重连","permalink":"http://wangcj.com.cn/tags/%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E/"}],"author":"王长金"},{"title":"java 嵌入cef 浏览器","slug":"java-嵌入cef-浏览器","date":"2020-12-23T14:05:00.000Z","updated":"2021-03-06T15:04:42.000Z","comments":true,"path":"2020/12/23/java-嵌入cef-浏览器/","link":"","permalink":"http://wangcj.com.cn/2020/12/23/java-%E5%B5%8C%E5%85%A5cef-%E6%B5%8F%E8%A7%88%E5%99%A8/","excerpt":"","text":"依赖 &lt;dependency&gt; &lt;groupId&gt;org.bitbucket.johness&lt;/groupId&gt; &lt;artifactId&gt;java-cef&lt;/artifactId&gt; &lt;!--&lt;version&gt;49.87.win32.2&lt;/version&gt;--&gt; &lt;version&gt;49.87.win64.2&lt;/version&gt; &lt;/dependency&gt;这个版本最低支持xp系统，所以选择这个版本。最新版本可以在官网下载源码编译 窗口程序package com.cares.fids.client.core; import org.cef.browser.CefBrowser; import javax.annotation.Resource; import javax.swing.*; import java.awt.*; /** * @author wangcj */ public class WebClient extends JFrame &#123; private final CefBrowser browser; @Resource private CefBrowser cefBrowser; public WebClient(CefBrowser browser) throws HeadlessException &#123; this.browser = browser; &#125; private static void initialSkin() &#123; try &#123; try &#123; UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); &#125; catch (ClassNotFoundException e) &#123; e.printStackTrace(); &#125; catch (InstantiationException e) &#123; e.printStackTrace(); &#125; catch (IllegalAccessException e) &#123; e.printStackTrace(); &#125; &#125; catch (UnsupportedLookAndFeelException e) &#123; e.printStackTrace(); &#125; &#125; public void initWebClient() &#123; GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment(); GraphicsDevice gd = ge.getDefaultScreenDevice(); // 全屏设置 setLocationRelativeTo(null); setContentPane(new JPanel()); setUndecorated(true); setResizable(false); gd.setFullScreenWindow(this); setLayout(new BorderLayout()); getContentPane().add(cefBrowser.getUIComponent(), BorderLayout.CENTER); setVisible(true); &#125; public void start() &#123; initialSkin(); EventQueue.invokeLater(() -&gt; &#123; initWebClient(); &#125;); &#125; &#125;spring 配置package com.cares.fids.client.core; import com.cares.fids.client.handler.*; import lombok.extern.slf4j.Slf4j; import org.cef.CefApp; import org.cef.CefClient; import org.cef.CefSettings; import org.cef.browser.CefBrowser; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import java.io.File; /** * @author wangcj * @desc * @date 2020/12/23 14:49 **/ @Slf4j @Configuration public class WebClientContext &#123; public static final String cache = System.getProperties().getProperty(&quot;user.home&quot;) + File.separator + &quot;AppData&quot; + File.separator + &quot;Local&quot; + File.separator + &quot;fids&quot;; public static final String log_file = cache + File.separator + &quot;fids_log.log&quot;; @Bean public CefSettings cefSettings() &#123; CefSettings settings = new CefSettings(); settings.windowless_rendering_enabled = false; settings.command_line_args_disabled = true; settings.cache_path = cache; settings.log_file = log_file; settings.log_severity = CefSettings.LogSeverity.LOGSEVERITY_DISABLE; settings.locale = &quot;zh-CN&quot;; settings.product_version = &quot;1.0&quot;; settings.user_agent = &quot;FIDS&quot;; return settings; &#125; @Bean(destroyMethod = &quot;dispose&quot;) public CefApp cefApp(CefSettings settings) &#123; String[] args = new String[0]; CefApp myApp = CefApp.getInstance(args, settings); CefApp.CefVersion version = myApp.getVersion(); CefApp.addAppHandler(new AppHandlerAdapter(args)); log.info(&quot;Using:\\n&quot; + version); return myApp; &#125; @Bean public CefClient cefClient(CefApp cefApp) &#123; CefClient client_ = cefApp.createClient(); client_.addContextMenuHandler(new ContextMenuHandlerAdapter()); client_.addDownloadHandler(new DownloadHandler()); client_.addJSDialogHandler(new JSDialogHandlerAdapter()); client_.addKeyboardHandler(new KeyboardHandler()); client_.addRequestHandler(new RequestHandlerAdapter()); client_.addLifeSpanHandler(new LifeSpanHandler(client_, false, false)); client_.addDisplayHandler(new DisplayHandlerAdapter()); client_.addLoadHandler(new LoadHandlerAdapter()); return client_; &#125; @Bean public CefBrowser cefBrowser(CefClient cefClient) &#123; String defaultUrl = &quot;https://www.baidu.com&quot;; CefBrowser browser_ = cefClient.createBrowser(defaultUrl, false, false, null); return browser_; &#125; @Bean public WebClient webClient(CefBrowser cefBrowser) &#123; WebClient webClient = new WebClient(cefBrowser); webClient.start(); return webClient; &#125; &#125; 高版本的jcef高版本的jcef，maven库上没有现成的，需要自己编译 windows 平台使用的时候要一次加载三个库 System.load(“jawt.dll”);System.load(“cef.dll”);System.load(“jcef.dll”); 参考类 CefApp 的私有构造方法 private CefApp(String[] args, CefSettings settings) throws UnsatisfiedLinkError &#123; super(args); if (settings != null) settings_ = settings.clone(); if (OS.isWindows()) &#123; SystemBootstrap.loadLibrary(&quot;jawt&quot;); SystemBootstrap.loadLibrary(&quot;chrome_elf&quot;); SystemBootstrap.loadLibrary(&quot;libcef&quot;); // Other platforms load this library in CefApp.startup(). SystemBootstrap.loadLibrary(&quot;jcef&quot;); &#125; else if (OS.isLinux()) &#123; SystemBootstrap.loadLibrary(&quot;cef&quot;); &#125; if (appHandler_ == null) &#123; appHandler_ = this; &#125; // Execute on the AWT event dispatching thread. try &#123; Runnable r = new Runnable() &#123; @Override public void run() &#123; // Perform native pre-initialization. if (!N_PreInitialize()) throw new IllegalStateException(&quot;Failed to pre-initialize native code&quot;); &#125; &#125;; if (SwingUtilities.isEventDispatchThread()) r.run(); else SwingUtilities.invokeAndWait(r); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"},{"name":"JCEF","slug":"JAVA/JCEF","permalink":"http://wangcj.com.cn/categories/JAVA/JCEF/"}],"tags":[{"name":"jcef","slug":"jcef","permalink":"http://wangcj.com.cn/tags/jcef/"},{"name":"嵌入式谷歌浏览器","slug":"嵌入式谷歌浏览器","permalink":"http://wangcj.com.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"author":"王长金"},{"title":"java 基于netty 实现远程监控","slug":"java-基于netty-实现远程监控","date":"2020-12-19T18:03:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/12/20/java-基于netty-实现远程监控/","link":"","permalink":"http://wangcj.com.cn/2020/12/20/java-%E5%9F%BA%E4%BA%8Enetty-%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E7%9B%91%E6%8E%A7/","excerpt":"","text":"服务端依赖 &lt;dependency&gt; &lt;groupId&gt;io.netty&lt;/groupId&gt; &lt;artifactId&gt;netty-all&lt;/artifactId&gt; &lt;version&gt;4.1.36.Final&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;1.18.16&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;net.coobird&lt;/groupId&gt; &lt;artifactId&gt;thumbnailator&lt;/artifactId&gt; &lt;version&gt;0.4.13&lt;/version&gt; &lt;/dependency&gt;BaseService.javapackage com.cares.fidsremoteserver.service; import io.netty.channel.ChannelHandlerContext; /** * @author wangcj * @desc * @date 2020/12/19 19:32 **/ public interface BaseService &#123; /** * 测试接口 */ void sendImage(ChannelHandlerContext ctx); void stopSend(); &#125; BaseServiceImpl.javapackage com.cares.fidsremoteserver.service.impl; import com.cares.fidsremoteserver.service.BaseService; import com.cares.fidsremoteserver.service.SendImgRunner; import io.netty.channel.ChannelHandlerContext; import org.springframework.stereotype.Service; /** * @author wangcj * @desc * @date 2020/12/19 19:32 **/ @Service public class BaseServiceImpl implements BaseService &#123; Thread sendThread = null; @Override public void sendImage(ChannelHandlerContext ctx) &#123; System.out.println(&quot;调用service服务&quot;); SendImgRunner sendImgRunner = new SendImgRunner(ctx); sendThread = new Thread(sendImgRunner); sendThread.start(); &#125; @Override public void stopSend() &#123; if (null != sendThread) &#123; sendThread.interrupt(); &#125; &#125; &#125; FidsServer.javapackage com.cares.fidsremoteserver.service; import io.netty.bootstrap.ServerBootstrap; import io.netty.channel.ChannelFuture; import io.netty.channel.ChannelOption; import io.netty.channel.EventLoopGroup; import io.netty.channel.nio.NioEventLoopGroup; import io.netty.channel.socket.nio.NioServerSocketChannel; import org.springframework.stereotype.Component; import javax.annotation.PostConstruct; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:38 **/ @Component public class FidsServer &#123; @Resource private FidsServerChannelInit childChannelHandler; @PostConstruct public void startServer() &#123; try &#123; run(8081); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; public void run(int port) throws Exception &#123; EventLoopGroup bossGroup = new NioEventLoopGroup(); EventLoopGroup workerGroup = new NioEventLoopGroup(); System.out.println(&quot;准备运行端口：&quot; + port); try &#123; ServerBootstrap bootstrap = new ServerBootstrap(); bootstrap.group(bossGroup, workerGroup) .channel(NioServerSocketChannel.class) .option(ChannelOption.SO_BACKLOG, 128) .childHandler(childChannelHandler); //绑定端口，同步等待成功 ChannelFuture f = bootstrap.bind(port).sync(); //等待服务监听端口关闭 f.channel().closeFuture().sync(); &#125; finally &#123; //退出，释放线程资源 workerGroup.shutdownGracefully(); bossGroup.shutdownGracefully(); &#125; &#125; &#125; FidsServerChannelInit.javapackage com.cares.fidsremoteserver.service; import io.netty.channel.ChannelInitializer; import io.netty.channel.socket.SocketChannel; import io.netty.handler.codec.LengthFieldBasedFrameDecoder; import io.netty.handler.codec.LengthFieldPrepender; import io.netty.handler.codec.bytes.ByteArrayDecoder; import io.netty.handler.codec.bytes.ByteArrayEncoder; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:25 **/ @Component public class FidsServerChannelInit extends ChannelInitializer&lt;SocketChannel&gt; &#123; @Resource private FidsServerHandler fidsServerHandler; public void initChannel(SocketChannel socketChannel) throws Exception &#123; socketChannel.pipeline().addLast(&quot;frameDecoder&quot;, new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)); socketChannel.pipeline().addLast(&quot;bytesDecoder&quot;, new ByteArrayDecoder()); socketChannel.pipeline().addLast(&quot;frameEncoder&quot;, new LengthFieldPrepender(4)); socketChannel.pipeline().addLast(&quot;bytesEncoder&quot;, new ByteArrayEncoder()); socketChannel.pipeline().addLast(fidsServerHandler); &#125; &#125; FidsServerHandler.javapackage com.cares.fidsremoteserver.service; import io.netty.buffer.ByteBuf; import io.netty.channel.ChannelHandler; import io.netty.channel.ChannelHandlerContext; import io.netty.channel.ChannelInboundHandlerAdapter; import io.netty.util.CharsetUtil; import io.netty.util.ReferenceCountUtil; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 19:31 **/ @Slf4j @Component @ChannelHandler.Sharable public class FidsServerHandler extends ChannelInboundHandlerAdapter &#123; @Resource private BaseService baseService; @Override public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception &#123; try &#123; ByteBuf in = (ByteBuf) msg; System.out.println(&quot;传输内容是&quot;); System.out.println(in.toString(CharsetUtil.UTF_8)); //这里调用service服务 &#125; finally &#123; ReferenceCountUtil.release(msg); &#125; &#125; @Override public void channelRegistered(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelRegistered&quot;); &#125; @Override public void channelUnregistered(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelUnregistered&quot;); &#125; @Override public void channelActive(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelActive&quot;); baseService.sendImage(ctx); &#125; @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelInactive&quot;); baseService.stopSend(); &#125; @Override public void channelReadComplete(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;读完&quot;); &#125; @Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception &#123; log.info(&quot;异常&quot;); &#125; &#125; SendImgRunner.javapackage com.cares.fidsremoteserver.service; import io.netty.buffer.Unpooled; import io.netty.channel.ChannelHandlerContext; import lombok.extern.slf4j.Slf4j; import net.coobird.thumbnailator.Thumbnails; import java.awt.*; import java.awt.image.BufferedImage; import java.io.ByteArrayOutputStream; import java.io.IOException; /** * @author wangcj * @desc * @date 2020/12/19 20:34 **/ @Slf4j public class SendImgRunner implements Runnable&#123; private ChannelHandlerContext ctx; private Robot robot; public SendImgRunner(ChannelHandlerContext ctx) &#123; this.ctx = ctx; try &#123; robot = new Robot(); &#125; catch (AWTException e) &#123; e.printStackTrace(); &#125; &#125; @Override public void run() &#123; while (true) &#123; try &#123; Rectangle rect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()); BufferedImage bm = robot.createScreenCapture(rect); ByteArrayOutputStream bos = new ByteArrayOutputStream(); Thumbnails.of(bm).size(800,600).outputFormat(&quot;JPG&quot;).toOutputStream(bos); ctx.channel().writeAndFlush(Unpooled.buffer().writeBytes(bos.toByteArray())); // 视觉停留极限 Thread.sleep(100); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); break; &#125; &#125; &#125; &#125; 客户端依赖和服务端相同 ShowImgService.javapackage com.cares.fidsremoteclient.service; /** * @author wangcj * @desc * @date 2020/12/19 20:16 **/ public interface ShowImgService &#123; void show(byte[] bytes); &#125; ShowImgServiceImpl.javapackage com.cares.fidsremoteclient.service.impl; import com.cares.fidsremoteclient.service.FidsClientWnd; import com.cares.fidsremoteclient.service.ShowImgService; import org.springframework.stereotype.Service; /** * @author wangcj * @desc * @date 2020/12/19 20:17 **/ @Service public class ShowImgServiceImpl implements ShowImgService &#123; private FidsClientWnd fidsClientWnd = null; @Override public void show(byte[] bytes) &#123; if (null == fidsClientWnd) &#123; fidsClientWnd = new FidsClientWnd(); &#125; fidsClientWnd.setImage(bytes); &#125; &#125; FidsClient.javapackage com.cares.fidsremoteclient.service; import io.netty.bootstrap.Bootstrap; import io.netty.channel.ChannelFuture; import io.netty.channel.ChannelOption; import io.netty.channel.EventLoopGroup; import io.netty.channel.nio.NioEventLoopGroup; import io.netty.channel.socket.SocketChannel; import io.netty.channel.socket.nio.NioSocketChannel; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 20:12 **/ @Slf4j @Component public class FidsClient &#123; @Resource FidsClientChannelInit fidsClientChannelInit; @Resource private ReConnectListener reConnectListener; @Value(&quot;$&#123;fids.server.host&#125;&quot;) private String host; @Value(&quot;$&#123;fids.server.port&#125;&quot;) private Integer port; private ChannelFuture future = null; EventLoopGroup eventLoopGroup = new NioEventLoopGroup(); @PostConstruct public void start() &#123; Bootstrap bootstrap = new Bootstrap(); bootstrap.channel(NioSocketChannel.class); bootstrap.option(ChannelOption.SO_KEEPALIVE, true); bootstrap.group(eventLoopGroup); bootstrap.remoteAddress(host, port); bootstrap.handler(fidsClientChannelInit); try &#123; future = bootstrap.connect(host, port).sync(); future.addListener(reConnectListener); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; @PreDestroy public void cancel() &#123; log.info(&quot;关闭连接&quot;); try &#123; eventLoopGroup.shutdownGracefully().sync(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; &#125; FidsClientChannelInit.javapackage com.cares.fidsremoteclient.service; import io.netty.channel.ChannelInitializer; import io.netty.channel.socket.SocketChannel; import io.netty.handler.codec.LengthFieldBasedFrameDecoder; import io.netty.handler.codec.LengthFieldPrepender; import io.netty.handler.codec.bytes.ByteArrayDecoder; import io.netty.handler.codec.bytes.ByteArrayEncoder; import io.netty.handler.timeout.IdleStateHandler; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/20 1:58 **/ @Component public class FidsClientChannelInit extends ChannelInitializer&lt;SocketChannel&gt; &#123; @Resource FidsClientHandler fidsClientHandler; @Override protected void initChannel(SocketChannel socketChannel) throws Exception &#123; socketChannel.pipeline().addLast(new IdleStateHandler(20, 10, 0)); socketChannel.pipeline().addLast(&quot;frameDecoder&quot;, new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)); socketChannel.pipeline().addLast(&quot;bytesDecoder&quot;, new ByteArrayDecoder()); socketChannel.pipeline().addLast(&quot;frameEncoder&quot;, new LengthFieldPrepender(4)); socketChannel.pipeline().addLast(&quot;bytesEncoder&quot;, new ByteArrayEncoder()); socketChannel.pipeline().addLast(fidsClientHandler); &#125; &#125; FidsClientHandler.javapackage com.cares.fidsremoteclient.service; import io.netty.channel.ChannelHandlerContext; import io.netty.channel.ChannelInboundHandler; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Component; import javax.annotation.Resource; /** * @author wangcj * @desc * @date 2020/12/19 20:14 **/ @Slf4j @Component public class FidsClientHandler implements ChannelInboundHandler &#123; @Resource ShowImgService showImgService; @Override public void channelRegistered(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelRegistered&quot;); &#125; @Override public void channelUnregistered(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelUnregistered&quot;); &#125; @Override public void channelActive(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelActive&quot;); &#125; @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelInactive&quot;); &#125; @Override public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception &#123; byte[] bytes = (byte[]) msg; showImgService.show(bytes); log.info(&quot;channelRead&quot;); &#125; @Override public void channelReadComplete(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelReadComplete&quot;); &#125; @Override public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception &#123; log.info(&quot;userEventTriggered&quot;); &#125; @Override public void channelWritabilityChanged(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;channelWritabilityChanged&quot;); &#125; @Override public void handlerAdded(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;handlerAdded&quot;); &#125; @Override public void handlerRemoved(ChannelHandlerContext ctx) throws Exception &#123; log.info(&quot;handlerRemoved&quot;); &#125; @Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception &#123; log.info(&quot;exceptionCaught&quot;); cause.printStackTrace(); &#125; &#125; FidsClientWnd.javapackage com.cares.fidsremoteclient.service; import javax.imageio.ImageIO; import javax.swing.*; import java.awt.*; import java.awt.image.BufferedImage; import java.io.ByteArrayInputStream; import java.io.IOException; /** * @author wangcj * @desc * @date 2020/12/19 20:39 **/ public class FidsClientWnd extends JFrame &#123; private static BufferedImage imageIcon; public FidsClientWnd() &#123; Dimension size = new Dimension(800, 600); this.setSize(size); this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); this.setLayout(new BorderLayout()); PaintPanel paintPanel = new PaintPanel(); this.add(paintPanel); // this.pack(); setUndecorated(true); this.setLocationRelativeTo(null); this.setVisible(true); &#125; public void setImage(byte[] bytes) &#123; ByteArrayInputStream bis = new ByteArrayInputStream(bytes); try &#123; imageIcon = ImageIO.read(bis); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; repaint(); &#125; private static class PaintPanel extends JPanel &#123; private Image buffer = null; @Override public void paint(Graphics g) &#123; super.paint(g); buffer = imageIcon; if (buffer != null) &#123; Graphics g1 = buffer.getGraphics(); g1.drawImage(imageIcon, 0, 0, this); g.drawImage(buffer, 0, 0, getWidth(), getHeight(), this); &#125; &#125; &#125; &#125;","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"netty","slug":"netty","permalink":"http://wangcj.com.cn/tags/netty/"}],"author":"王长金"},{"title":"java jna 调用 win32 api 重启windows","slug":"java","date":"2020-12-18T08:38:51.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/12/18/java/","link":"","permalink":"http://wangcj.com.cn/2020/12/18/java/","excerpt":"","text":"1、依赖 &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna-platform&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt; 2、代码package com.cares.airdisdemo.utils; import com.sun.jna.Library; import com.sun.jna.Native; import com.sun.jna.platform.win32.Advapi32; import com.sun.jna.platform.win32.Kernel32; import com.sun.jna.platform.win32.WinDef; import com.sun.jna.platform.win32.WinNT; import static com.sun.jna.platform.win32.WinNT.TOKEN_ADJUST_PRIVILEGES; import static com.sun.jna.platform.win32.WinNT.TOKEN_QUERY; import static com.sun.jna.platform.win32.WinUser.EWX_FORCE; import static com.sun.jna.platform.win32.WinUser.EWX_REBOOT; /** * @author wangcj * @desc 关机代码 * @date 2020/12/18 14:24 **/ public class RebootUtil &#123; private static final int SHTDN_REASON_MAJOR_OPERATINGSYSTEM = 0x00020000; private static final int SHTDN_REASON_MINOR_UPGRADE = 0x00000003; private static final int SHTDN_REASON_FLAG_PLANNED = 0x80000000; private static Reboot lib; private static Advapi32Ext advapi32; static &#123; lib = Native.load(&quot;User32&quot;, Reboot.class); advapi32 = Native.load(&quot;Advapi32&quot;, Advapi32Ext.class); &#125; public static boolean reboot() &#123; WinNT.TOKEN_PRIVILEGES tp = new WinNT.TOKEN_PRIVILEGES(1); tp.Privileges[0] = new WinNT.LUID_AND_ATTRIBUTES(); Kernel32 kernel32 = Kernel32.INSTANCE; WinNT.HANDLE handle = kernel32.GetCurrentProcess(); WinNT.HANDLEByReference hToken = new WinNT.HANDLEByReference(); if (!advapi32.OpenProcessToken(handle, TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, hToken)) &#123; return false; &#125; if (!advapi32.LookupPrivilegeValueA(null, WinNT.SE_SHUTDOWN_NAME, tp.Privileges[0].Luid)) &#123; return false; &#125; tp.Privileges[0].Attributes = new WinDef.DWORD(WinNT.SE_PRIVILEGE_ENABLED); if (!advapi32.AdjustTokenPrivileges(hToken.getValue(), false, tp, 0, null, null)) &#123; return false; &#125; lib.ExitWindowsEx(EWX_REBOOT | EWX_FORCE, SHTDN_REASON_MAJOR_OPERATINGSYSTEM | SHTDN_REASON_MINOR_UPGRADE | SHTDN_REASON_FLAG_PLANNED); System.out.println(Kernel32.INSTANCE.GetLastError()); return true; &#125; public interface Reboot extends Library &#123; boolean ExitWindowsEx(int uFlags, int dwReserved); &#125; public interface Advapi32Ext extends Advapi32 &#123; boolean LookupPrivilegeValueA(String lpSystemName, String lpName, WinNT.LUID lpLuid); &#125; &#125; 3、测试windows xp、windows 7，windows 10 测试通过 xp,win7 管理员账户和普通用户都测试通过，win10只测试过普通用户","categories":[{"name":"jna","slug":"jna","permalink":"http://wangcj.com.cn/categories/jna/"}],"tags":[],"author":"王长金"},{"title":"使用 Github，hexo 建立个人日志系统","slug":"MySQL-优化","date":"2020-12-03T08:14:31.000Z","updated":"2021-08-12T04:57:32.389Z","comments":true,"path":"2020/12/03/MySQL-优化/","link":"","permalink":"http://wangcj.com.cn/2020/12/03/MySQL-%E4%BC%98%E5%8C%96/","excerpt":"","text":"创建 github 仓库可访问的仓库可访问的仓库的名称必须是 用户名.github.io 保存源码的仓库 也可以在 可访问的仓库 建一个分支来保存源码。这里单独建立一个private 仓库 配置gitgit config --global user.name &quot;你的GitHub用户名&quot; git config --global user.email &quot;你的GitHub注册邮箱&quot; 配置hexo安装npm install -g hexo-cli hexo init blog 配置 package.json加入以下依赖 &quot;hexo-admin&quot;: &quot;^2.3.0&quot;, // 在网页写博客 &quot;hexo-deployer-git&quot;: &quot;^3.0.0&quot;, // 将编译静态文件发布到 github配置 _config.yamldeploy: type: &#39;git&#39; repo: &#39;https://github.com/username/username.github.io.git&#39; branch: &#39;master&#39; # hexo-admin authentification admin: username: user password_hash: password_hash secret: secret 写日志流程1、check 源码到本地，启动本地hexo 服务 hexo server2、打开网页编辑器，编写日志 http://127.0.0.1:4000/admin3、将源码和编译静态文件提交到github hexo clean hexo g hexo g git push","categories":[],"tags":[],"author":"王长金"},{"title":"Honywell 1900 添加扫描类型","slug":"Honywell-1900-添加扫描类型","date":"2020-12-02T05:23:49.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/12/02/Honywell-1900-添加扫描类型/","link":"","permalink":"http://wangcj.com.cn/2020/12/02/Honywell-1900-%E6%B7%BB%E5%8A%A0%E6%89%AB%E6%8F%8F%E7%B1%BB%E5%9E%8B/","excerpt":"","text":"码类型对照表 扫描枪设置 扫描枪重新插拔会失效，需要重新扫此码设置","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[],"author":"王长金"},{"title":"Dockerfile 以非root用户执行脚本","slug":"Dockerfile-以非root用户执行脚本","date":"2020-11-30T06:24:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/11/30/Dockerfile-以非root用户执行脚本/","link":"","permalink":"http://wangcj.com.cn/2020/11/30/Dockerfile-%E4%BB%A5%E9%9D%9Eroot%E7%94%A8%E6%88%B7%E6%89%A7%E8%A1%8C%E8%84%9A%E6%9C%AC/","excerpt":"","text":"FROM store/oracle/database-enterprise:12.2.0.1 COPY --chown=oracle:oinstall aoc.dmp /home/oracle/aoc.dmp COPY --chown=oracle:oinstall sia.dmp /home/oracle/sia.dmp COPY --chown=oracle:oinstall init /home/oracle/setup/init USER oracle WORKDIR /home/oracle CMD [&quot;/bin/sh&quot;,&quot;-c&quot;, &quot;/bin/bash /home/oracle/setup/init&quot;] USER oracle 切换用户 WORKDIR /home/oracle指定用户工作目录，加入脚本要在当前目录创建临时文件，必须指定WORKDIR，否则可能没有权限","categories":[{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/categories/docker/"}],"tags":[],"author":"王长金"},{"title":"航班报文生命周期","slug":"班报文生命周期","date":"2020-11-19T03:27:50.000Z","updated":"2021-01-06T13:10:44.000Z","comments":true,"path":"2020/11/19/班报文生命周期/","link":"","permalink":"http://wangcj.com.cn/2020/11/19/%E7%8F%AD%E6%8A%A5%E6%96%87%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/","excerpt":"","text":"9C8743 沈阳-威海-南京，威海为本场10点21分 威海收到华东空管局 发出AFTN_FPL ，起降范围沈阳到威海 计划起飞14:25,预计飞行一小时，机号B8646ZCZC YZP0134 100221 FF ZSWHZXZX 100221 ZSSSZFPM (FPL-CQH8743-IS -A320/M-SDE3FGHIM3RWY/LB1 -ZYTX0625 -K0850S0780 TOSID A588 CHI W107 SANKO A326 OBDIS H152 WEH -ZSWH0100 ZSYT ZSQD -PBN/A1B2B3B4C1D1O1S2 REG/B8646 SEL/LMBG CODE/781085 RMK/TCAS ADSB) NNNN 12点51分22秒 威海收到春秋发出 SITA_FPL放行报,起降范围威海到南京,(不会收到起降范围沈阳到威海段)，机号B8646ZCZC YZP0297 100451 QU WEHZP8X . QU WEHZP8X . QU WEHZP8X . QU WEHZP8X SHAZPCA CANZPCA SHAFP8X PEKFP8X .SHAUO9C 100450 CLR 10NOV 0905 9C8743 A320 B8646 WEH NKG HFE HGH 7500 SI:WEH/ZSWH NKG/ZSNJ ALTN HFE/ZSOF HGH/ZSHC(DEST) FUEL SUMMARY TRIP WEH-NKG /3500 TOF /7300 RELEASE /7500 CREW NUM 2/1/4 (FPL-CQH8743-IS -A320/M-SDE3FGHIM3RWY/LB1 -ZSWH0905 -K0850S0840 WEH W4 FZ H101 FD W174 XDX H28 IDKOT X193 RUPUD A470 OF -ZSNJ0120 ZSOF ZSHC -PBN/A1B2B3B4C1D1O1S2 REG/B8646 SEL/LMBG CODE/781085 RMK/TCAS ADSB) PILOT IN COMMAND DETERMINE FINAL FUEL PLEASE NOTIFY DISPATCHER OF FUEL CHANGE MORE THAN 200KG SIGNATURE: DISPATCHER:HUANGCHENSHUN CAPTAIN: PARKING BAY IS DISPATCH TEL:021-22353506 MCC TEL:021-22352571 021-22352574 NOTICE: 200KG EXTRA FUEL FOR ADDING FOB ON CPL TURBULENCE ON ROUTE #(@4T4SZFxOs FROM WX#) ICING ON ROUTE (@4T4SZTKPP7IPP&lt;F;. FROM CFPL) TKPP7IPP&lt;F;.Wn4sSRV5N*(MAX SR IN THIS CFPL IS): 4 DELIVERER: DELIVER TIME: PLS CHECK THE FIXED TIME FORECAST CHART/METAR/TAF/PIB NNNN12点51分24秒 威海收到华东空管局 发出AFTN_FPL ，起降范围威海到南京 计划起飞17:05,预计飞行一小时20分钟，机号B8646ZCZC YZP0298 100451 FF ZSWHZXZX 100450 ZSSSZFPM (FPL-CQH8743-IS -A320/M-SDE3FGHIM3RWY/LB1 -ZSWH0905 -K0850S0840 WEH W4 FZ H101 FD W174 XDX H28 IDKOT X193 RUPUD A470 OF -ZSNJ0120 ZSOF ZSHC -PBN/A1B2B3B4C1D1O1S2 REG/B8646 SEL/LMBG CODE/781085 RMK/TCAS ADSB) NNNN15点07分 威海收到沈阳机场发出AFTN_DEP报 起飞时间15:05ZCZC YZP0451 100707 FF ZSWHZXZX 100707 ZYTXZTZX (DEP-CQH8743/A5334-ZYTX0705-ZSWH-0) NNNN16点06分 威海发出AFTN_ARR报 到达时间16:06ZCZC YZP0523 100806 GG ZSWHZXZX 100806 ZSWHZPZX (ARR-CQH8743-ZYTX-ZSWH0806) NNNN 16点06分 威海收到SITA_MVT_AA报，落地时间16:08,上轮档时间16:11ZCZC YZP0524 100806 QU WEHZP8X . QU SHAUO9C WEHZP8X .WEHZP8X 100806 MVT 9C8743/10NOV.B8646.WEH AA0806/0811 SI: = NNNN 17点12分 威海发出AFTN_DEP报 起飞时间17:12ZCZC YZP0577 100912 FF ZSWHZXZX 100912 ZSWHZPZX (DEP-CQH8743/A2377-ZSWH0912-ZSNJ-0) NNNN 17点12分 威海收到SITA_MVT_AD 报，撤轮档时间17:07,离地时间17:12ZCZC YZP0578 100912 QU WEHZP8X . QU SHAUO9C WEHZP8X .WEHZP8X 100912 MVT 9C8743/10NOV.B8646.WEH AD0907/0912 EA1032 NKG SI: = NNNN18点33分 威海收到南京机场发出的AFTN_ARR 报，实际到达时间为18:31ZCZC YZP0641 101033 FF ZSWHZXZX 101032 ZSNJZTZX (ARR-CQH8743-ZSWH0905-ZSNJ1031) NNNN 航班动态 航班号 机号 出发 到达 计划起飞 实际起飞 计划到达 实际到达 撤轮档 上轮档 9C8743 B8646 沈阳 威海 14:25 15:05 15:25 16:08 - 16:11 9C8743 B8646 威海 南京 17:05 17:12 18:25 18:31 17:07 -","categories":[{"name":"航空业务","slug":"航空业务","permalink":"http://wangcj.com.cn/categories/%E8%88%AA%E7%A9%BA%E4%B8%9A%E5%8A%A1/"}],"tags":[],"author":"王长金"},{"title":"通过备份文件还原sqlserver数据库","slug":"通过备份文件还原sqlserver数据库","date":"2020-11-17T15:47:00.000Z","updated":"2021-01-06T13:10:44.000Z","comments":true,"path":"2020/11/17/通过备份文件还原sqlserver数据库/","link":"","permalink":"http://wangcj.com.cn/2020/11/17/%E9%80%9A%E8%BF%87%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E8%BF%98%E5%8E%9Fsqlserver%E6%95%B0%E6%8D%AE%E5%BA%93/","excerpt":"","text":"启动容器1、mssql docker run -dit -e &#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=123456&#39; -p 1433:1433 --name mssql mcr.microsoft.com/mssql/server创建目录docker exec -it mssql mkdir -p /opt/hg docker cp hg.bak mssql:/opt/hg 还原数据库打开navcat命令行 1&gt; restore filelistonly from disk=&#39;/opt/hg/hg.bak&#39; 2&gt; go LogicalName PhysicalName Type FileGroupName Size MaxSize FileId CreateLSN DropLSN UniqueId ReadOnlyLSN ReadWriteLSN BackupSizeInBytes SourceBlockSize FileGroupId LogGroupGUID DifferentialBaseLSN DifferentialBaseGUID IsReadOnly IsPresent TDEThumbprint SnapshotUrl ------------- ------------------------------------------------------- ------ --------------- ------------ ---------------- -------- ----------- --------- -------------------------------------- ------------- -------------- ------------------- ----------------- ------------- -------------- ------------------------- -------------------------------------- ------------ ----------- --------------- ------------- A_hg_Data H:\\SQLDATA\\MSSQL10_50.MSSQLSERVER\\MSSQL\\DATA\\a_hg.mdf D PRIMARY 4989517824 35184372080640 1 0 0 00000000-0000-0000-0000-000000000000 0 0 4474601472 512 1 NULL 20913272000000037300145 D6966561-87BB-49A3-BB74-CAD70150F67C 0 1 NULL NULL A_hg_Log H:\\SQLDATA\\MSSQL10_50.MSSQLSERVER\\MSSQL\\DATA\\a_hg.LDF L NULL 224526336 35184372080640 2 0 0 D1090AB7-7F6D-435A-B25A-75CB432C98F1 0 0 0 512 0 NULL 0 00000000-0000-0000-0000-000000000000 0 1 NULL NULL (2 rows affected) 1&gt; restore database a_hg from disk=&#39;/opt/hg/hg.bak&#39; with move &#39;A_hg_Data&#39; to &#39;/opt/hg/a_hg.ndf&#39;, move &#39;A_hg_Log&#39; to &#39;/opt/hg/a_hg_log.ldf&#39; 2&gt; go (0 rows affected) Msg 4035, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Processed 546216 pages for database &#39;a_hg&#39;, file &#39;A_hg_Data&#39; on file 1. (0 rows affected) Msg 4035, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Processed 8 pages for database &#39;a_hg&#39;, file &#39;A_hg_Log&#39; on file 1. (0 rows affected) Msg 944, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Converting database &#39;a_hg&#39; from version 661 to the current version 904. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 661 to version 668. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 668 to version 669. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 669 to version 670. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 670 to version 671. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 671 to version 672. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 672 to version 673. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 673 to version 674. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 674 to version 675. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 675 to version 676. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 676 to version 677. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 677 to version 679. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 679 to version 680. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 680 to version 681. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 681 to version 682. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 682 to version 683. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 683 to version 684. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 684 to version 685. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 685 to version 686. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 686 to version 687. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 687 to version 688. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 688 to version 689. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 689 to version 690. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 690 to version 691. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 691 to version 692. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 692 to version 693. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 693 to version 694. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 694 to version 695. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 695 to version 696. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 696 to version 697. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 697 to version 698. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 698 to version 699. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 699 to version 700. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 700 to version 701. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 701 to version 702. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 702 to version 703. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 703 to version 704. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 704 to version 705. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 705 to version 706. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 706 to version 770. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 770 to version 771. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 771 to version 772. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 772 to version 773. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 773 to version 774. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 774 to version 775. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 775 to version 776. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 776 to version 777. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 777 to version 778. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 778 to version 779. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 779 to version 780. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 780 to version 781. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 781 to version 782. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 782 to version 801. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 801 to version 802. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 802 to version 803. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 803 to version 804. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 804 to version 805. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 805 to version 806. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 806 to version 807. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 807 to version 808. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 808 to version 809. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 809 to version 810. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 810 to version 811. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 811 to version 812. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 812 to version 813. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 813 to version 814. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 814 to version 815. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 815 to version 816. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 816 to version 817. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 817 to version 818. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 818 to version 819. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 819 to version 820. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 820 to version 821. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 821 to version 822. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 822 to version 823. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 823 to version 824. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 824 to version 825. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 825 to version 826. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 826 to version 827. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 827 to version 828. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 828 to version 829. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 829 to version 830. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 830 to version 831. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 831 to version 832. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 832 to version 833. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 833 to version 834. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 834 to version 835. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 835 to version 836. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 836 to version 837. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 837 to version 838. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 838 to version 839. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 839 to version 840. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 840 to version 841. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 841 to version 842. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 842 to version 843. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 843 to version 844. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 844 to version 845. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 845 to version 846. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 846 to version 847. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 847 to version 848. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 848 to version 849. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 849 to version 850. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 850 to version 851. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 851 to version 852. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 852 to version 853. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 853 to version 854. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 854 to version 855. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 855 to version 856. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 856 to version 857. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 857 to version 858. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 858 to version 859. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 859 to version 860. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 860 to version 861. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 861 to version 862. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 862 to version 863. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 863 to version 864. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 864 to version 865. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 865 to version 866. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 866 to version 867. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 867 to version 868. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 868 to version 869. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 869 to version 875. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 875 to version 876. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 876 to version 877. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 877 to version 878. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 878 to version 879. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 879 to version 880. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 880 to version 881. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 881 to version 882. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 882 to version 883. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 883 to version 884. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 884 to version 885. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 885 to version 886. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 886 to version 887. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 887 to version 888. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 888 to version 889. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 889 to version 890. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 890 to version 891. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 891 to version 892. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 892 to version 893. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 893 to version 894. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 894 to version 895. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 895 to version 896. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 896 to version 897. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 897 to version 898. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 898 to version 899. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 899 to version 900. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 900 to version 901. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 901 to version 902. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 902 to version 903. Msg 951, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 Database &#39;a_hg&#39; running the upgrade step from version 903 to version 904. Msg 3014, Level 0, State 1, Server 8fe25ff28210, Procedure , Line 0 RESTORE DATABASE successfully processed 546224 pages in 8.509 seconds (501.513 MB/sec).","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"sqlserver","slug":"sqlserver","permalink":"http://wangcj.com.cn/tags/sqlserver/"},{"name":"备份还原","slug":"备份还原","permalink":"http://wangcj.com.cn/tags/%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/"}],"author":"王长金"},{"title":"SPRINGBOOT 安装为systemd服务","slug":"SPRINGBOOT-安装为systemd服务","date":"2020-11-12T06:25:40.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/11/12/SPRINGBOOT-安装为systemd服务/","link":"","permalink":"http://wangcj.com.cn/2020/11/12/SPRINGBOOT-%E5%AE%89%E8%A3%85%E4%B8%BAsystemd%E6%9C%8D%E5%8A%A1/","excerpt":"","text":"复制官方，略有改动 [Unit] Description=telegram app After=syslog.target [Service] User=root ExecStart=/usr/bin/java -jar /root/telegram.jar SuccessExitStatus=143 Restart=on-failure [Install] WantedBy=multi-user.target","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[],"author":"王长金"},{"title":"WINDOWS 使用JNA操作注册表","slug":"WINDOWS-使用JNA操作注册表","date":"2020-11-11T08:40:13.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/11/11/WINDOWS-使用JNA操作注册表/","link":"","permalink":"http://wangcj.com.cn/2020/11/11/WINDOWS-%E4%BD%BF%E7%94%A8JNA%E6%93%8D%E4%BD%9C%E6%B3%A8%E5%86%8C%E8%A1%A8/","excerpt":"","text":"环境 windows 10 springboot 2 jna &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna-platform&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt; private String runReg = &quot;Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run&quot;; private String keyReg = &quot;vipfront&quot;; ... ... ApplicationHome applicationHome = new ApplicationHome(getClass()); String path = applicationHome.getDir().getAbsolutePath() + File.separator + &quot;start.cmd&quot;; Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, runReg, keyReg, path); ShowUtils.plainMessage(&quot;提示&quot;, &quot;设置开机启动成功&quot;);","categories":[{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/categories/JNA/"}],"tags":[],"author":"王长金"},{"title":"WINDOWS 查看JAVA进程参数","slug":"WINDOWS-查看JAVA进程参数","date":"2020-11-11T02:32:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/11/11/WINDOWS-查看JAVA进程参数/","link":"","permalink":"http://wangcj.com.cn/2020/11/11/WINDOWS-%E6%9F%A5%E7%9C%8BJAVA%E8%BF%9B%E7%A8%8B%E5%8F%82%E6%95%B0/","excerpt":"","text":"wmic process where name=&quot;javaw.exe&quot; get CommandLine,ProcessId","categories":[{"name":"WINDOWS","slug":"WINDOWS","permalink":"http://wangcj.com.cn/categories/WINDOWS/"}],"tags":[],"author":"王长金"},{"title":"mysql 8.0.22 源码编译","slug":"mysql-8-0-源码编译","date":"2020-11-09T04:08:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/11/09/mysql-8-0-源码编译/","link":"","permalink":"http://wangcj.com.cn/2020/11/09/mysql-8-0-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/","excerpt":"","text":"获取源码下载地址： https://dev.mysql.com/downloads/mysql/ 安装源码rpm -ivh mysql-community-8.0.22-1.el7.src.rpm ncurses.tar.gz 默认安装到 $HOME/rpmbuild 编译环境安装 虚拟机安装类型：开发环境+平台开发 版本：centos 7.8 [wangcj@localhost ~]$ cat /etc/redhat-release CentOS Linux release 7.8.2003 (Core) [wangcj@localhost ~]$安装c++ 库和头文件yum install glibc-headers yum install gcc-c++ 安装cmake下载地址：https://cmake.org/download/ chmod +x cmake-3.19.0-rc3-Linux-x86_64.sh ./cmake-3.19.0-rc3-Linux-x86_64.sh --prefix=/usr/local/cmake cmake 加入path vi /etc/profile export PATH=$PATH:/usr/local/cmake/bin GCC国内镜像下载地址下载速度不一，请选择速度最快的： 1) http://mirrors.nju.edu.cn/gnu/gcc/gcc-8.3.0/ 2) http://mirrors.ustc.edu.cn/gnu/gcc/gcc-8.3.0/ 3) https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-8.3.0/ GCC的依赖库编译之前需先安装好GCC的依赖库：gmp、mpfr和mpc。编译还依赖m4等编译工具，如果没有，则在执行configue时会报相应的错误，这时需要先安装好这些编译工具。 gmp库GMP为“GNU MP Bignum Library”的缩写，是一个GNU开源数学运算库。本文选择的是最新版本gmp-6.1.2，国内镜像下载地址： 1) https://mirrors.tuna.tsinghua.edu.cn/gnu/gmp/ 2) http://mirrors.nju.edu.cn/gnu/gmp/ 3) http://mirrors.ustc.edu.cn/gnu/gmp/ mpfr库mpfr是一个GNU开源大数运算库，它依赖gmp。本文选择的是最新版本mpfr-4.0.2，国内镜像下载地址： 1) https://mirrors.tuna.tsinghua.edu.cn/gnu/mpfr/ 2) http://mirrors.nju.edu.cn/gnu/mpfr/ 3) http://mirrors.ustc.edu.cn/gnu/mpfr/ mpc库mpc是GNU的开源复杂数字算法，它依赖gmp和mpfr。本文选择的是最新版本mpc-1.1.0，国内镜像下载地址： 1) https://mirrors.tuna.tsinghua.edu.cn/gnu/mpc/ 2) http://mirrors.nju.edu.cn/gnu/mpc/ 3) http://mirrors.ustc.edu.cn/gnu/mpc/ m4编译工具本文选择的是最新版本m4-1.4.16，下载地址： 1) https://mirrors.tuna.tsinghua.edu.cn/gnu/m4/ 2) http://mirrors.nju.edu.cn/gnu/m4/ 3) http://mirrors.ustc.edu.cn/gnu/m4/ 如果使用“–prefix”指定了安装目录，则在编译gmp等之前还需先设置好环境变量PATH，以便configure时能找到m4。 安装源代码包涉及到的所有安装源代码包： gcc-8.3.0.tar.gz mpfr-4.0.2.tar.gz gmp-6.1.2.tar.xz mpc-1.0.3.tar.gz GCC的依赖库间还互有依赖：mpfr依赖gmp、mpc依赖gmp和mpfr，所以GCC的编译安装顺序为： 1) m4（如果需要） 2) gmp 3) mpfr 4) mpc 5) GCC 为了不污染已有的编译和运行环境，将GCC及依赖库均安装到/usr/local目录，并且最好以root用户完成下述所有操作。 编译安装gmp执行configure生成Makefile时，需要用到m4，一般路径为/usr/bin/m4，如果没有则需要先安装，否则报错“no usable m4”错误，手工安装m4从“https://www.gnu.org/software/m4/”下载。 具体安装步骤如下： xz -d gmp-6.1.2.tar.xz tar xf gmp-6.1.2.tar cd gmp-6.1.2 ./configure --prefix=/usr/local/gmp-6.1.2 make make install ln -s /usr/local/gmp-6.1.2 /usr/local/gmp编译安装mpfr详细安装步骤如下： tar xzf mpfr-4.0.2.tar.gz cd mpfr-4.0.2 ./configure --prefix=/usr/local/mpfr-4.0.2 --with-gmp=/usr/local/gmp make make install ln -s /usr/local/mpfr-4.0.2 /usr/local/mpfr编译安装mpctar xzf mpc-1.1.0.tar.gz cd mpc-1.1.0 ./configure --prefix=/usr/local/mpc-1.1.0 --with-gmp=/usr/local/gmp --with-mpfr=/usr/local/mpfr make make install ln -s /usr/local/mpc-1.1.0 /usr/local/mpc设置LD_LIBRARY_PATH export LD_LIBRARY_PATH=/usr/local/gmp/lib:/usr/local/mpfr/lib:/usr/local/mpc/lib:$LD_LIBRARY_PATH 编译安装gcc编译预计耗时三小时 tar xzf gcc-8.3.0.tar.gz cd gcc-8.3.0 ./configure --prefix=/usr/local/gcc-8.3.0 --with-gmp=/usr/local/gmp --with-mpfr=/usr/local/mpfr --with-mpc=/usr/local/mpc --disable-multilib make install ln -s /usr/local/gcc-8.3.0 /usr/local/gcc export PATH=/usr/local/gcc/bin:$PATH export LD_LIBRARY_PATH=/usr/local/gcc/lib64:$LD_LIBRARY_PATH export MANPATH=/usr/local/gcc/share/man:$MANPATH gcc --version编译安装ncursestar zxvf ncurses.tar.gz export LD_LIBRARY_PATH=/usr/local/gmp/lib:/usr/local/mpfr/lib:/usr/local/mpc/lib:$LD_LIBRARY_PATH ./configure make &amp;&amp; make install 编译 mysql解压boostboost 源码在mysql源码包中有提供 tar jxvf boost_1_73_0.tar.bz2 解压编译mysql源码编译预计耗时一小时 tar zxvf mysql-8.0.22.tar.gz cd mysql-8.0.22 mkdir bld &amp;&amp; cd bld export LD_LIBRARY_PATH=/usr/local/gmp/lib:/usr/local/mpfr/lib:/usr/local/mpc/lib:$LD_LIBRARY_PATH export CC=/usr/local/gcc-8.3.0/bin/gcc export CXX=/usr/local/gcc-8.3.0/bin/g++ cmake \\ -DWITH_BOOST=/root/soft/boost_1_73_0 \\ -DWITH_ROUTER=OFF=ON \\ -DWITH_SYSTEMD=ON \\ -DWITH_UNIT_TESTS=OFF \\ -DBUILD_CONFIG=mysql_release \\ -DCMAKE_INSTALL_PREFIX=/usr/local/mysql8 \\ -DINSTALL_LAYOUT=RPM \\ -DCMAKE_BUILD_TYPE=Release \\ -DCPACK_MONOLITHIC_INSTALL=0 \\ -DCOMPILATION_COMMENT=&quot;East China Cares Nanjing R&amp;D&quot; \\ -DCOMPILATION_COMMENT_SERVER=&quot;East China Cares Nanjing R&amp;D&quot; \\ .. make make install make package 测试将编译出来的包 mysql-8.0.22-linux-x86_64.tar 上传到安装好的red hat enterprize linux 7.5 64位 如果系统的 libstdc++.so 的版本小于 6.0.25（gcc8.3.0）,需要替换该库 替换步骤 rm /lib64/libstdc++.so.6 ln -s /lib64/libstdc++.so.6.0.25 libstdc++.so.6 ldconfig [root@localhost sbin]# ./mysqld --version /root/mysql-8.0.22-linux-x86_64/sbin/mysqld Ver 8.0.22 for Linux on x86_64 (Source distribution) [root@localhost sbin]#","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"源码编译","slug":"源码编译","permalink":"http://wangcj.com.cn/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"},{"name":"mysql8.0.22","slug":"mysql8-0-22","permalink":"http://wangcj.com.cn/tags/mysql8-0-22/"}],"author":"王长金"},{"title":"林彪要暗杀毛泽东的真正原因","slug":"林彪要暗杀毛泽东的真正原因","date":"2020-10-31T15:17:35.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/10/31/林彪要暗杀毛泽东的真正原因/","link":"","permalink":"http://wangcj.com.cn/2020/10/31/%E6%9E%97%E5%BD%AA%E8%A6%81%E6%9A%97%E6%9D%80%E6%AF%9B%E6%B3%BD%E4%B8%9C%E7%9A%84%E7%9C%9F%E6%AD%A3%E5%8E%9F%E5%9B%A0/","excerpt":"","text":"毛泽东主席不会想到——追随他出生入死立下赫赫战功的林彪后来会精心谋划暗杀他，当时的林彪也想不到自己会有一天“调转枪口”成为“遗臭万年”的政变者，一世英名毁于一旦… 林彪暗杀毛泽东是制度的悲剧 1955年9月27日，中南海怀仁堂，中华人民共和国主席授衔授勋典礼在这里隆重举行，这一天有十位开国功臣被授予元帅军衔，其中最年轻的是林彪，时年49岁。 这一天，毛泽东主席不会想到——追随他出生入死立下赫赫战功的林彪后来会精心谋划暗杀他，当时的林彪也想不到自己会有一天“调转枪口”成为“遗臭万年”的政变者，一世英名毁于一旦。 林彪在学习毛泽东着作(资料图片) 1969年4月1日至24日，中共“九大”在北京召开。在“九大”通过的党章总纲中有这样一段堪称经典的文字：“林彪同志一贯高举毛泽东思想伟大红旗，最忠诚、最坚定地扞卫毛泽东同志的无产阶级革命路线，林彪同志是毛泽东同志的亲密战友和接班人。” 这个被党纲确立为接班人的林彪，谁也没想到他会准备发动武装政变以暗杀毛泽东的方式“接班”。 1971年3月，林彪集团策划了一个“571工程”计划。所谓“571”，即“武装起义”的谐音，图谋“夺取全国政权”。由于阴谋败露，当年9月13日，林彪乘飞机外逃，在蒙古温都尔汗地区坠机身亡。 1981年，林彪被中华人民共和国最高人民法院确认为反革命集团案主犯。 一人之下、万人之上的林彪，为什么最后落得个身败名裂的下场?他为什么最后要选择以暴力(强迫)的方式获得国家最高权力呢? 从中共后来公开的林彪集团《〈“571工程”纪要〉及其实施》的秘密文件中，我们可以看到披露的这样一些内容： ——(九届二中全会以后)政局不稳，统治集团内部矛盾尖锐，右派势力抬头，军队受压;十多年来，国民经济停滞不前，群众和基层干部、部队中下干部实际生活水平下降，不满情绪日益增长。敢怒不敢言。甚至不敢怒不敢言;统治集团内部上层很腐败、昏庸无能、众叛亲离。 ——B—52(注：代指毛泽东)好景不长，急不可待地要在近几年内安排后事。对我们不放心。如其束手被擒，不如破釜沉舟。在政治上后发制人，军事行动上先发制人。 ——当前他们的继续和[革]命论实质是托洛茨基的不断和[革]命论，他们的革命对象实际是中国人民，而首当其冲的是军队和与他们持不同意见的人。 ——他们的社会主义实质是社会法西斯主义，他们把中国的国家机器变成一种互相残杀，互相倾轧的绞肉机。把党内和国家政治生活变成封建专制独裁式家长制生活。 ——当然，我们不否定他在统一中国的历史作用，正因为如此，我们和[革]命者在历史上曾给过他应有的地位和支持。但是现在他滥用中国人民给其信任和地位，历史地走向反面。实际上他已成了当代的秦始皇，为了向中国人民负责，向中国历史负责，我们的等待和忍耐是有限度的! ——他不是一个真正的马列主义者，而是一个行孔孟之道，借马列主义之皮、执秦始皇之法的中国历史上最大的封建暴君。 ——独和[裁]者越来越不得人心， 无须再引用了，以上足以表明：林彪是一个“持不同政见者”，并且代表了当时社会相当一部分人的观点。 然而，林彪要想从根本上改变当时的各种尖锐的社会矛盾，按照当时的权力规则，他除了选择暴力的方式获得权力外别无选择。暴力的方式即强迫的方式。 当时是怎样的权力规则呢? 中国共产党建党始于1921年，这个党从诞生之日起到1949年获得全国政权，就是靠武装革命——靠暴力(强迫)消灭暴力(强迫)获得的。中国共产党从几十年残酷的武装政治斗争中逐渐发现了一个“颠扑不破”的真理： “枪杆子里面出政权”。中国共产党武装革命的成功，从理论和实践上确立了一个坚定不移的规则：权力来自强迫，即强迫是获得权力的唯一选择。 林彪戎马一生，跟着毛泽东南征北战，武装革命、暴力斗争的成功经历使“权力来自强迫”的规则在枪林弹雨中溶入了毛泽东、林彪那一辈人的血液里，时刻滋养着高度紧张的脑细胞。 任何成功的事件都为他人效仿提供了一种规则。只要这种规则有可能使人占有最大利益，任何人都可能会按照这种规则进行选择，即：有什么样的规则就必然会有什么样的选择。占有最大利益永远是人的第一选择。(王大豪《利益论》) 林彪似乎可以靠耐心等待获得国家最高权力，但他怕自己的身体“熬不过”毛泽东。而且，特殊的权力规则派生出的残酷的权力斗争，也使他的前途充满了变数。虽然林彪接班人的地位已被神圣的党章确立，但深谙权力规则的林彪明白：无论是韬光养晦，还是党章，都是靠不住的。一个人靠专权使他人获得权力，这个人也可以靠专权使他人失去权力。 1969年11月12日中华人民共和国主席刘少奇含冤去世。 刘少奇之死，使得身为元帅的林彪不得不为自己的生命安全及国家命运感到极度焦虑，本能的自卫意识与使命感使他不得不决定以死相拼。他本可以苟且偷生，即使不免冤死，将来也会有一个很隆重、很体面的追悼会为他平反，恢复名誉。作为身经百战的元帅，他不可能没有考虑到失败的可能，不可能不知道“成者为王败者寇” 的道理。但他最终还是冒天下大不韪执意担负起扭转乾坤的责任——为了个人、也为了国家，他也因此被一些后人称为“野心家”。 在任何一个民主的国家，任何人都有权利竞选国家元首，没有人会因此被斥为野心家。但在林彪生活的那个年代的中国，谁如果说想当国家元首无异于自杀。 当“权力来自强迫”成为被公认的规则的时候，暗杀毛泽东成了林彪别无选择的选择。 然而，林彪的强迫遭遇到了更大的强迫。他的最后一战失败了，并为此付出了生命的代价，而且死得很惨——惨不忍睹。 林彪——这位曾指挥千军万马、叱咤疆场的元帅，最后却在政治权力的角逐中葬身异国，粉身碎骨，成为孤魂野鬼。 即使林彪以强迫(暴力)的方式获得了国家最高权力，对国家和人民来说同样是悲剧。人们已经无须假设他“武装革命成功后”会怎样行使权力，因为他的“571工程”计划昭然若揭的表明——他会继续恪守使他成功的规则：权力来自强迫。 规则的继续，意味着一切都会继续。 假设死去的人活着会怎样，以假设来争论谁是谁非都没有意义，因为一切假设都不等于事实，而只有事实才有说服力。 林彪之死至少可以证明这样一个事实：林彪的悲剧是制度制造的悲剧，这种悲剧不仅是个人的悲剧，也是所有人的悲剧，包括是那些审判林彪“叛国案”者的悲剧。 林彪为何要“叛国” 出逃?在民主国家中，想当国家元首的人为什么不会因为竞选元首失败而叛国出逃? 无异，林彪“叛国” 出逃是为了避免暴力(强迫)的惩罚而做出的被迫选择，这是“权力来自强迫”这一规则导致的必然选择。 林彪事件后，林彪成了中国人眼中最大的造假者——他说了很多极端吹捧毛泽东的话被当做最经典的造假案例。其实，最大的造假者是没有言论自由的制度。强迫是谎言之母。凡是谎言满天飞的地方、凡是歌功颂德之声成为主旋律的地方、凡是说真话会有牢狱之灾的地方，必是缺乏言论自由的地方。林彪言不由衷的两面派做法，是当时那种制度之下的必然选择。他只有在说假话竞赛中获得优异的成绩，他才能获得最大的安全、最大的利益。因为说真话会受到严酷的惩罚，所以争先恐后说假话便成为邀功请赏的最佳选择。如果没有中大奖的诱惑，有谁会去买彩票呢? 悲剧性的制度不结束，悲剧就不会落幕。 1976年10月，制度的悲剧又重演了：试图以强迫方式获得权力的王洪文、张春桥、江青、姚文元“四人帮”集团，被华国锋及其支持者以先发制人的强迫方式夺去了权力。 虽然邓小平曾被强迫方式多次夺去权力，但他对华国锋以强迫方式获得权力欣喜不已，因为“四人帮”的倒台使他有了复出的希望。 华国锋以惊心动魄的强迫方式获得的权力，使邓小平成为最后的赢家。当邓小平成为党的第二代领导核心后，对获得的权力备感珍惜。他以对国家和人民高度负责的务实精神，艰难推行改革开放政策，使中国经济发生了飞跃性的进步。 邓小平虽然无愧于他获得的权力，但他对得到权力的传统规则耿耿于怀。因为这种规则曾使他三起三落，使人民经历了一场浩劫，他深知其害。面对经济上取得的辉煌成就，如何从根本上改变传统权力规则——从而保住来之不易的改革成果，这成为邓小平一生的心结。 他曾心有余悸地说，当初抓(强迫方式)“四人帮”是非常时期的非常选择，警告同仁“下不为例”，但这种警告的效力有多大的持久性呢? 1986年9月3日，邓小平会见日本公明党委员长竹入义胜时，他不无忧虑的坦言：不改革政治体制，就不能保障经济体制改革的成果，不能使经济体制改革前进，就会阻碍生产力的发展，阻碍四个现代化的实现。 1986年9月13日，邓小平在听取中央财经领导小组汇报时再次透露出他的焦虑：我们越来越感到进行政治体制改革的必要性和紧迫性。 1989年9月4日，邓小平对几位中央负责同志说：我多次讲，一个国家的命运寄托在一两个人的威信上是很不正常的。 关于规则的作用，邓小平有深刻地认识。他有一段睿智而经典的讲话：“我们过去发生的各种错误，固然与某些领导人的思想、作风有关，但是组织制度、工作制度方面的问题更重要。这些方面的制度好可以使坏人无法任意横行，制度不好可以使好人无法充分做好事，甚至会走向反面。我们今天再不健全社会主义制度，人们就会说，为什么资本主义制度所能解决的一些问题，社会主义制度反而不能解决呢?……(毛泽东同志)由于没有在实际上解决领导制度问题以及其他一些原因，仍然导致了‘文化大革命’十年浩劫。这个教训是极其深刻的。不是说个人没有责任，而是说领导制度、组织制度问题更带有根本性、全局性、稳定性和长期性。这种制度问题，关系到党和国家是否改变颜色，必须引起全党的高度重视。” 年迈的邓小平迫切想建立一种新的权力规则——新的规则可以使任何人都不会选择强迫(暴力)方式改变政权。 一种新规则的扎根和生长，需要有足够的时间去培育。然而，生命给邓小平的时间太有限了，我们也不必苛求这位进入垂暮之年的老人把什么事情都替我们做好。每一代人有每一代人的历史使命。 当胡锦涛顺利当选党的总书记时，邓小平已经去世。这次权力的和平更替，标志着邓小平等第二代领导集体确立的新的权力规则第一次经受住了考验。 无论任何名义的革命或社会制度，只要是以一种暴力(强迫)代替另一种暴力(强迫)，其本质上还是对强迫的复制，只是复制者(强迫者)不同而已，而多数人还是无法从根本上改变被迫的命运。 权力来自强迫“的规则确立的价值标准是：强迫是最大价值，只有强迫占有才能获得最大利益。 ”权力来源于自由“的规则确立的价值标准是：自由是最大价值，只有自由占有才能获得最大利益。 有什么样的规则就必然会有什么样的选择。 我们需要什么样的规则呢? 我们需要的不是”权力来自强迫“的规则，而是”权力源于自由“的规则。 只有结束制造林彪悲剧的制度，林彪的悲剧才不会重演。","categories":[{"name":"历史","slug":"历史","permalink":"http://wangcj.com.cn/categories/%E5%8E%86%E5%8F%B2/"}],"tags":[],"author":"王长金"},{"title":"毛泽东逼出来的林彪出逃事件","slug":"泽东逼出来的林彪出逃事件","date":"2020-10-31T14:33:21.000Z","updated":"2021-01-06T13:10:44.000Z","comments":true,"path":"2020/10/31/泽东逼出来的林彪出逃事件/","link":"","permalink":"http://wangcj.com.cn/2020/10/31/%E6%B3%BD%E4%B8%9C%E9%80%BC%E5%87%BA%E6%9D%A5%E7%9A%84%E6%9E%97%E5%BD%AA%E5%87%BA%E9%80%83%E4%BA%8B%E4%BB%B6/","excerpt":"","text":"一、政治报告 之前，并未看过报告的内容。汪东兴说：“由于林彪对‘九大’的政治报告改用张春桥、姚文元起草的稿子不满，在‘九大’上，他只是照着稿子念了一遍，敷衍了事[11]。”林彪甚至还对叶群说：“多念错一点才好[12]。”林彪对得到毛泽东肯定的张、姚起草的报告的厌恶之情，可见一斑。综上所述，在起草“九大”政治报告这件事上，无论是林彪还是陈伯达，并没有什么“反党”主张或“反党罪行”。他们只不过是未能像张春桥那样善于理解毛泽东深藏心中的真实想法，又对深受毛泽东宠信的张春桥有所不满而已，结果林彪与陈伯达竟因此获罪。 二、“九届二中全会”上的所谓“八月逆流” 毛泽东在1971年夏的南巡讲话中曾挑明了他要打击林彪的真正原因：“他们名为反张春桥实际上反我”，“这次庐山会议，是两个司令部的斗争 [13]。”在未公开的《姚文元日记》中，姚文元提到，毛泽东称“九届二中全会”上发生了“八月逆流”。“八月逆流”到底“逆”了什么？至今未见任何相关资料公布于众，而这个钦定名称也从来没有见诸史书。 现在来看，所谓的“八月逆流”不过是出席中央全会的代表在小组讨论中发表自己的看法罢了。这些意见主要是两方面：一是拼命颂毛表忠，二是不点名攻击张春桥（认为他贬低毛泽东思想，不忠）。令毛泽东动怒的原因是第二点，即他所说的“他们名为反张春桥实际上反我”。 林彪在“九届二中全会”的开幕式上讲了话，会议的主持者是毛泽东。据高文谦披露，在林彪讲话前，毛泽东问林彪准备讲什么，林彪说，听吴法宪讲，在讨论宪法修改草案时发生了争论，张春桥不赞成写上国家机构要以毛泽东思想为指针，还说赫鲁晓夫天才地创造发展了马列主义，我想讲讲这个问题。毛泽东听了说：这不是张的意见，是江青的意见，是江青在背后捣的鬼。你可以讲，但不要点张的名字[14]。林彪的讲话只是一段又一段地讲述毛泽东的丰功伟绩，好像是官样文章，只有了解此前在8月13日中央宪法修改小组讨论会上的争吵内幕的人，才会敏感到有些话是针对张春桥的。但林彪按照毛泽东的要求，在讲话中确实没有点张春桥的名字，而且只字未提是否设“国家主席”的问题。总的看来，林彪的讲话显得低调。倒是汪东兴在小组会上的发言调门高，强调要设“国家主席”，认为党内还有“反对毛主席”的“野心家”、“坏蛋”。陈伯达、陈毅在小组会上的发言情绪也较为激烈（后来周恩来在大会上点了“二陈合流”，给陈毅造成了很大的精神压力[15]）。 在毛泽东的眼里，林彪和与会绝大多数代表都把矛头对准张春桥，这就是有阴谋。其实，“九届二中全会”上出现“反张春桥”的形势应有以下一些原因 首先，在1970年8月13日中央宪法修改小组讨论会上，张春桥与吴法宪发生了争吵。张春桥以宪法序言中已有类似内容为由，提议在“国家机构”一章中删掉“毛泽东思想是全国一切工作的指导方针”一句，后来又大讲毛泽东在一次接见外宾时讲过“赫鲁晓夫天才地、创造性地发展了马列主义，这是个讽刺”一类的话[16]。在“九大”前后，对毛泽东的“三忠于”狂热达到了高潮，在这样的气氛中，张春桥的这些言论显然属于大逆不道，于是出席“九届二中全会”的高级干部们或是认为抓到了张春桥的“小辫子”，或是认为应当趁机表明自己忠于毛泽东的坚定立场。 其次，张春桥一贯支持造反、夺权，而第九届中央委员中的众多军队将领和老干部几乎无不身受“造反”、“夺权”之苦之害。张春桥支持上海第二军医大学“红纵”，“红纵”险些要了总后勤部长邱会作的命；广州军区的“造反派”“炮轰”广州军区司令员黄永胜，使黄在广州呆不下去；南京军区司令员许世友也曾被“造反派”逼得躲到大别山里；福州军区司令员韩先楚被一次次的“炮轰”、围攻整得焦头烂额；外交部长陈毅在“九大”期间也曾遭到以张春桥为后台的上海小组的批判围攻……这些人早就对张春桥有一肚子的怨气。 再次，按当时的观点看，张春桥历史上有“叛徒”嫌疑，上海因此发生过“炮打张春桥”事件，“九届二中全会”的与会代表们自然都知道。最后，林彪及许多军队将领、老干部对江青的狐假虎威、颐指气使早已忍无可忍（林彪曾于1967年初“批判萧华”事件后的一天，因情绪失控而大骂过江青一次[17]；还有一次他还扬言要找枪，要“毙了她”[18]!1967年1月军队将领“大闹京西宾馆”时，黄永胜在发言中公开说：“希望中央文革多听毛主席的话，特别是江青同志要多听毛主席的话[19]）!”，但他们因为“投鼠忌器”而不敢直接反对江青。张春桥是江青的心腹高参，是“中央文革小组” 中最富有政治经验、最老谋深算的角色，打击张春桥，就等于是给江青一击。 总之，出于各自不同的原因，“九届二中全会”上各地区组都一致声讨“阴谋家”，形成了群情激愤的气氛，在毛泽东看来“大有炸平庐山、停止地球转动之势”。后来康生曾如此概括当时的形势：这次会议是“吴法宪造谣，汪东兴点火，陈伯达起哄，陈毅跳出来”[20]。依照中共党章，中央全会是全党的最高权力机构，一切意见均可在会上公开表达，一切大事均应由全会讨论决定，但事实上毛泽东早就把党改造成了他个人的“一言堂”。 当毛泽东在“九届二中全会”期间看出绝大多数中央委员对他那套“无产阶级专政下继续革命”的路线“很不理解”甚至强烈不满，发现继续推行他的“文革”路线的党内阻力非常大，这样的形势不利于他的“战略部署”时，立刻大动“天子之怒”。他重施故伎，利用个人崇拜气氛为他造就的绝对权威，公布了一份大字报“我的一点意见”，同时揪出陈伯达以“杀鸡吓猴”。在当时毛的个人权威被推至颠峰状态的情况下，这个“我的一点意见”几乎等同于一言九鼎的“圣旨”，众多中央委员和候补中央委员们只有高呼“万岁”、“坚决照办”，谁还敢再说半个“不”字？ 在后来公布的毛泽东的“我的一点意见”中，毛抓住“九届二中全会”上党内高层议论是否要设国家主席一事发难。中央文件甚至声称，林彪以“设国家主席”为名要“抢班夺权”，而这又被解释成林彪最后“仓惶出逃”的原因之一。对这个“设国家主席”问题，王年一和何蜀已在“‘设国家主席’问题论析”一文中做过深入分析，这里只强调几个要点： 首先，当时毛泽东反对设国家主席，却讲不出任何正当理由；他只是因为不想担任国家主席一职，就反对设立国家主席这一职位。毛泽东抱持“朕即国家” 的观念，完全把国家主席这一国家主权对内对外的最高代表当成虚设的可有可无的职位，任凭自己的兴趣决定取舍。而且，“九届二中全会”初期，毛泽东其实并未因中央委员中绝大多数人坚持“设国家主席”而动怒，他后来抓住“设国家主席”一事发难是另有权谋上的考虑。 其次，当时党内高层除了毛泽东本人外，都认为国家主席一职只能由毛泽东担任。“设国家主席”一议既非林彪首倡，也非林彪独撑。“九届二中全会”前夕，中央政治局常委会讨论此事时，只有毛泽东主张不设国家主席，而主张设国家主席的却有4票（周恩来、康生、陈伯达、林彪）。绝大多数中央委员、候补中央委员也都赞成设国家主席。硬把“设国家主席”一议说成是林彪个人的阴谋，并无根据。在“九届二中全会”上公开提出如果毛泽东不当国家主席就由林彪当国家主席的，只有一人，即江青集团的“顾问”康生。但毛泽东却从未因此而批评康生。 再次，指称林彪赞成设国家主席就是想当国家主席，要“抢班夺权”，更无道理。周恩来也赞成此议，而且具备担任这一职位的党内资历，为什么对他却不提出相同的指责？说林彪想当国家主席，其实毫无根据，而证明林彪不愿当国家主席、甚至不愿当“接班人”的根据却有不少[21]。林彪死亡后，中央文件说林彪把“设国家主席”作为反革命政变的纲领，完全是无稽之谈。在这个问题上，暴露出来的只是毛泽东的一块心病。 三、毛泽东的“心病”：林彪地位上升 高文谦在《晚年周恩来》中指出：“毛泽东并没有真想把权交给林彪，选择林彪作为接班人，不过是为了打倒刘少奇的权宜之计。九大后，林彪在政治上羽翼丰满，尾大不掉，成为毛的一块心病[22]。”林彪的“接班人”本来就是毛一手安排并强迫林彪接受的。“文革”中让军队“支左”、介入地方政治斗争，并由军队干部主持各地、各单位工作，使“一元化领导”的各级革命委员会几乎全由军人所把持，这也是毛泽东的独创。之所以在“九大”前出现林彪地位迅速上升的局面，完全是毛泽东自己一手造成的。据《晚年周恩来》一书介绍：“林彪……非但基本上掌握了军队的局面，军委办事组几乎是他清一色的人马；而且由于当时各省、市和中央各部委的第一把手多半是奉命支左的军队干部而在政治上的影响也越来越大，俨然成为左右政局的一大势力[23]。” 《剑桥中华人民共和国史》“文化大革命”部分也有相同的看法和分析。尽管林彪地位的迅速上升是毛泽东自己造成的，可是一旦毛觉得林彪似乎有“羽翼丰满、尾大不掉”之势，他又感到揣揣不安。习惯于大权独揽的毛泽东最担心的就是“大权旁落”。当年，刘少奇是他亲自选定的“接班人”，他甚至亲自推荐并动员全党拥护刘担任国家主席；可是，一旦他认为刘少奇对他的最高权力构成了威胁，自己的“大权旁落”了，“接班人”在他眼中就变成了“睡在身边的赫鲁晓夫”，便要被拉下马来而且不得好死。“九大”召开前，刘少奇的“资产阶级司令部”才刚刚被“摧毁”，毛泽东又一次为“大权旁落”担忧起来。他一贯信奉“枪杆子里面出政权”，林彪这个“接班人”是军人出身，“九大”会场上满眼都是军人，苏联当时也抨击中国是“军事官僚专政”。正是在这样的情况下，毛泽东口头上称“九大”是“团结的大会、胜利的大会”，心中想的却是如何对付“羽翼丰满、尾大不掉”的新任“接班人”林彪。 毛后来在南巡中就说：“现在我要抓军队的事。有人说军队是我缔造的，但不能指挥[24]。”其实谁也没有那样说过，“有人说”只是毛的一个借口而已，而且军权从来就被他抓得牢牢的。但他一旦起了疑心就“疑心生暗鬼”了。毛泽东在“九届二中全会”后南巡时，反复谈到林彪等人在“九届二中全会”上的“纲领就是‘天才’和要当主席”[25]。林彪死后公开传达的中央文件中，这个“要当主席”却被改换成了“设国家主席”，可能因为实在找不到林彪“要当主席”的证据，只好拿“设国家主席”一事代替。毛泽东真正不能容忍的，并不是“设国家主席”而是他疑心有人“要当主席”。对于自比秦始皇的毛泽东来说，卧榻之侧，岂容他人酣睡？毛怀疑谁动了“要当主席”的念头，谁就是“另立中心、另拉山头、另设司令部”，谁就成毛的打击对象。 其实，毛泽东指责林彪要“篡党夺权”，只不过是毛个人的疑心而已。林彪长期受着疾病的折磨，连“饮食男女，人之大欲”都没有了，实际上很少过问他分管的事务。据“林办”秘书张云生回忆：“我在林彪身边工作了4年多，因为要‘讲文件’，差不多天天都能见他一面，所以可以说，我对‘文革’中的林彪并不缺乏了解。然而我亲眼看到的林彪，在‘文革’动乱中要么是遇事不表态，要么讲些‘绝’话，要么就是对他份内之责‘大撒手’。”以军委办事组为例：“林彪受毛泽东委托主持军委日常工作，实际上，他参加主持‘日常’军委工作的记录屈指可数。特别是‘文化大革命’开始以后，他把军委的‘日常’工作委托给了军委秘书长叶剑英。叶帅‘靠边站’后，军内上层一时群龙无首，亏得有个以杨成武、吴法宪为正副组长的‘军委办事组’照应‘日常’军务，林彪则对他们的活动很少过问。‘军委办事组’改组后，黄永胜取代了杨成武。这个以林彪的‘老部下’组成的清一色‘办事’班子，叫人一看就感到有‘搞山头’之嫌。但那是毛主席钦定的，林又是毛可以信赖的‘接班人’，因此这个‘清一色’倒可成为抵挡一切‘复辟’梦想的一道屏障。林彪在名义上是‘副统帅’，实际上却是靠‘抓两头’：上头靠毛主席掌舵，下头靠有个可以办事的工作班子挡挡军内日常事务。”“军委办事组自1967年夏成立，到1968年3月改组，再到‘九大’后正式成形，直到1970年10月我调离‘林办’，我没见到一次林彪接见军委办事组的全体成员，没有听到他对军委办事组的全面工作给予一次像样的指示。我甚至认为，不管是杨成武或黄永胜领衔的军委办事组，他们在什么地方‘办事’又怎样‘办事’，林彪从不过问。”“从1967年到1970年，林彪在住地毛家湾的会客厅只召见军委办事组的黄、吴、李、邱四员大将一次，谈的仅仅是怕苏联趁我国庆对北京实施突然袭击的事，而且只有20多分钟。”“黄永胜任军委办事组组长和总参谋长前后，林彪只见他两次。”“吴法宪可算林彪的亲信，但自从军委办事组改组后，林彪在住地从未单独接见过他。”“……林彪与李作鹏并无‘私交’。我在‘林办’任职四年，只是在1966年9月海军内部出现纷争，林彪偏向了‘高举’、‘突出’、‘有干劲’的李（作鹏）、王（宏坤）、张（秀川），因而在大会堂接见过一次李作鹏夫妇。从那以后，林彪与李作鹏再无单独接触。”“邱会作在‘文革’期间从没得到单独面见林彪的机会。”“又有人说，林彪控制‘军委办事组 ’，是通过他的老婆叶群……依我看，这话只说对了一半。叶群做坏事，林彪确实有责任。但叶群打着林彪的招牌，在外边胡作非为，林彪并不全部知情。他从叶群嘴里听到一些，又是经叶群用花言巧语伪装了的。‘林办’的工作人员直接受叶群控制，眼见处于病态的林彪受叶群摆布，但无能为力。”“事实上，叶群虽为‘军委办事组’成员，但她几乎从不参加‘军委办事组’的会议。‘军委办事组’的工作出了成绩有她一份，出了是非她不承担任何责任。‘军委办事组’天天忙于处理的‘三支两军’工作、部队战备训练以及人事调整等问题，叶群从不参与正式讨论研究[26]。”林彪在1968年10月26日召开的“八届十二中全会”第二次全体会议上所作报告中也承认：“……整个两年多的工作，主要是毛主席领导的，具体执行主要是中央文革，特别起作用的是江青同志、总理、伯达同志、康生同志以及中央文革其他同志。而我呢，老实讲，就是没有做多少事。我也并不是故意偷懒，就是身体不好，不能够做多少事情。所以实际情况了解的不多，工作也做得不多[27]。”即便如此，毛泽东仍然怀疑林彪要“篡党夺权”，如此则林彪在劫难逃了。 四、林彪是如何被逼上绝路的？ 毛泽东是个权谋大师，在送林彪坐上“接班人”高位之时，就已经决定尽快把林彪从“接班人”的位置上拉下马来。熟读古籍的毛很善于运用古代帝王的欲擒故纵手法：在他准备对林彪“开刀”之前，却当面向林彪许诺，声称自己准备两年后交班给林彪[28]。这样的把戏毛泽东以前也多次玩过。1965年毛泽东部署批判历史剧《海瑞罢官》，这场批判将置彭德怀于死地，在姚文元的“评新编历史剧‘海瑞罢官’”公开发表之前，毛泽东居然还当面宽慰彭德怀，甚至说出 “也许真理在你那边”这样的话[29]。“文化大革命”初期，毛泽东制订的打倒刘少奇的“战略部署”已全面展开，“炮打司令部”的号召传遍全国，可是 1966年9月14日毛泽东还在刘少奇的检讨书上批示：“少奇同志：基本上写得很好，很严肃。特别后半段更好。”10月25日毛又在中央工作会议上说： “谁人要打倒你们呀？我是不要打倒你们的[30]。” 林彪对毛泽东的故伎重施自然有数，但林彪既不象彭德怀那样据理力争，也不象刘少奇那样认真检讨，而是采取他独具特色的对策：一顶二拖。于是，毛泽东为了达到打倒林彪的目的，只得想方设法“引蛇出洞”、“轰蛇出洞”，展开了一系列“把林彪逼上绝路”的部署。 （一）控制中央组织、宣传大权 1970年11月6日，经毛泽东批准，中共中央下发了《关于成立中央组织宣传组的决定》。它指出：“为了党在目前进行的组织宣传工作，实施统一管理，中央决定在中央政治局领导下，设立中央组织宣传组。中央组织宣传组设组长一人，由康生担任。设组员若干人，由江青、张春桥、姚文元、纪登奎、李德生同志担任。中央组织宣传组管辖中央组织部、中央党校、人民日报、红旗杂志、新华总社、中央广播事业局、光明日报、中央编译局的工作，以及中央划归该组管辖单位的工作[31]。”无疑，这个决定是毛泽东个人作出的，也只有他才能作出。目的就是为了把大权牢牢控制在自己手中，同时削弱和钳制林彪。什么“在中央政治局领导下”，其实就像“中央文革小组”一样，还是在毛泽东一人的领导和控制之下。这个“中央组织宣传组”名义上的组长是康生，但康生其实自“九届二中全会”后就称病不起，不再工作。该组组员李德生此时身兼中央军委委员、军委办事组成员、总政治部主任、安徽省革命委员会主任等重要职务，此后不久（1971年初）又担任中共安徽省委第一书记，兼任北京军区司令员、军区党委第一书记（李的这种职务安排也是毛泽东的一大“创造”），因此他在“中央组织宣传组”纯属挂名。实际上中央组织和宣传大权落入江青、张春桥、姚文元手中。中共中央明令把中央的组织宣传大权交给几个人，这是中共党史上“史无前例”、绝无仅有的一件大事。“九大”后没有“中央文革小组”了，新成立的这个“中央组织宣传组”实际上就是“中央文革小组”的“借尸还魂”，而且权力更大了。江青等人凭借这一大权，做了许多坏事。 （二）“大批判开路” 1970年11月16日，中共中央下发了“关于传达陈伯达反党问题的通知”，掀起了全国性的“批陈整风”运动，主要批判“阶级斗争熄灭论”、“唯生产力论”、“唯心主义先验论”。批“阶级斗争熄灭论”是告诉国人，刘少奇“司令部”倒台之后阶级斗争依然存在，新的“资产阶级司令部”又出现了；批“唯生产力论”是针对陈伯达的“九大”政治报告草稿，以打消人们以为“九大”后会结束“文化大革命”进入经济建设阶段的念头；批“唯心主义先验论”则是批判曾得到“八届十一中全会”确认的“天才论”。毛泽东在黄永胜等人的检讨上批注了一段批判陈伯达的话：“陈伯达早期就是一个国民党反共分子，混入党内以后，又在1931年被捕叛变，成了特务，一贯跟随王明、刘少奇反共，他的根本问题在此[32]。”毛泽东过去长期任用陈伯达作自己的政治秘书，并让陈担任为“文化大革命”立下汗马功劳的“中央文革小组”组长。倘若陈伯达确实早就是一个“国民党反共分子”，毛泽东却一直重用他，岂不是故意帮助敌人在最高决策层埋藏“定时炸弹”？事实上，毛为陈伯达加的这些“罪名”，恐怕毛自己也不见得相信，他只不过是为了整垮政敌而不择手段地给昔日的亲信陈伯达罗列“罪名”而已。这一系列批判表面上针对的是陈伯达，实际上都是针对林彪的。这是毛惯用的“大批判开路”策略。在打倒前一个“接班人”刘少奇之前，毛泽东就在全国开展了对“三家村”、对前北京市委和中宣部、文化部的“大批判”运动。这次的“批陈整风”运动实质上就是为打击林彪而制造舆论。在1971年4月15日至 29日召开的中央“批陈整风汇报会议”上，对陈伯达“反党罪行”的批判终于扩大成了对“中央军委办事组”黄永胜、吴法宪、叶群、李作鹏、邱会作5人“政治上的方向、路线错误”和“组织上的宗派主义错误”的批判。这5人都是林彪倚重的军方主要领导人，此时“批陈整风”运动真正的矛头所向就十分明显了。 1970年12月18日，毛泽东会见美国记者埃德加·斯诺，在谈话中批判了林彪颂扬毛的“四个伟大”的说法，也就等于不点名地批判了林彪。经毛泽东批准，“毛主席会见斯诺的谈话”以“中共中央文件（中发[1970]39号）”的形式下发全党。毛藉此向全党暗示，自己对林彪的态度变了（该文件特别注明：已经毛主席审阅）。“文革”初期毛泽东心安理得地接受“四个伟大”的颂扬，唯恐“个人迷信”之风不烈，如今又改口说“四个伟大”讨嫌，实在是翻手为云、覆手为雨，是黑是白全由他说了算。 1971年2月18日，周恩来将外交部编印的《外事活动简报》“古巴驻华临时代办加西亚访问外地的几点反映”送毛泽东阅。该简报的第（四）条提到，加西亚在井冈山参观时对讲解员闭口不谈南昌起义和朱德率部上井冈山这两段史实提出意见，认为这样讲外国人不容易理解。毛泽东批示：“第（四）条说得对，应对南昌起义和两军会合作正确解说[33]。”就在一年多以前的“九大”上，周恩来在大会重点发言中公开宣称：“林彪同志是南昌起义失败后率领一部分起义部队走上井冈山，接受毛主席领导的一位光荣代表[34]。”当时周恩来的这个发言贬低朱德、吹捧林彪，明显歪曲史实，吓得林彪赶紧打断周恩来的话：我林彪没什么，一切都是毛主席，我如果跟着贺龙、朱德早就完了，没有今天。为了表示自己对毛的诚惶诚恐，林彪还当场哭了起来[35]。“九大”上周恩来发表歪曲史实、吹捧林彪的讲话，当时毛泽东的态度是对周恩来的讲话报以热烈鼓掌。到了1971年春，毛认为打倒林彪的时机快来了，于是又一反过去的态度，假惺惺地要求调整“文革”以来贬低朱德的官方说法，“作正确解说”。 （三）削弱林彪的军事指挥权 为了打击林彪，毛泽东采取了一系列措施以削弱林彪的军事指挥权。毛后来自鸣得意地说：“庐山会议以后，我采取了三项办法：一个是甩石头，一个是掺沙子，一个是挖墙角。批了陈伯达搞的那个骗了不少人的材料，批发了三十八军的报告和济南军区反骄破满的报告，还有军委开了那么长的座谈会，根本不批陈，我在一个文件上加了批语。我的办法，就是拿到这些石头，加上批语，让大家讨论，这是甩石头。土太板结了就不透气，掺一点沙子就透气了。军委办事组掺的人还不够，还要增加一些人。这是掺沙子。改组北京军区，这叫挖墙角[36]。”所谓的“甩石头”是要打击林彪等人的威信，把他们“搞臭”；“掺沙子”一事表明，毛泽东完全不信任军委办事组，说“土太板结了”，就如同当年说北京市委“针插不进水泼不进”一样；“挖墙角”（又作“挖墙脚”）则更是无中生地有把北京军区看成了林彪的“墙角”和“林陈反党集团经营多年的那个山头主义的窝子”[37]。毛泽东最担心的是首都北京发生政变，因此对北京军区最不放心，要设法“换马”。当时北京军区的第一政委是李雪峰，北京军区司令员是郑维山。由于毛对此二人有所猜忌，就故意把由李雪峰、郑维山主持的“九届二中全会”华北组会议的简报钦定为“反革命的”，然后以此为借口改组北京军区，使李雪峰、郑维山二人遭受长期迫害。 （四）“敲山震虎”， 毛除了用了这“三板斧”之外，还通过对黄永胜、吴法宪、叶群、李作鹏、邱会作等人检讨的批示，“敲山震虎”，刺激林彪，逼林彪认罪。“九届二中全会”后，黄、吴、叶、李、邱都被迫写了书面检讨，毛泽东在这些检讨上作了批示并将批示下发党内，其中一些语句广为人知。例如，毛对吴法宪检讨的批示是： “由几个人发难，企图欺骗200多个中央委员，有党以来，没有见过，”“中央委员会有严重的斗争[38]。”毛对叶群检讨的批示是：“爱吹不爱批，爱听小道消息，经不起风浪，”“九大胜利，当上了中央委员，不得了了，要上天了，把九大路线抛到九霄云外，反九大的陈伯达路线在一些同志中占了上风了 [39]。”再如对刘子厚（时任河北省革委会主任、中共河北省委第一书记，“文化大革命”前的河北省省长）所作检查的批示是：“上了陈伯达的贼船，年深日久，虽有庐山半年的时间，经过各种批判会议，到3月19日才讲出几句真话，真是上贼船容易下贼船难。人一输了理（就是走错了路线），就怕揭，庐山上那种猖狂进攻的勇气，不知跑到哪里去了[40]。”此批示前边还有意味深长的一句话：“此件留待军委办事组各同志一阅[41]。” 从这些批示中可以看出，毛用的是讽刺挖苦、“上纲上线”、“揪住不放”等手法，对黄、吴、叶、李、邱等人的态度甚至比“文革”初期对刘少奇、邓小平的态度还要严厉，堪称“史无前例”。而与此同时，毛泽东对在“九届二中全会”上发表了与黄、吴、叶、李、邱相同观点的汪东兴检讨的态度却迥然不同，毛信任依赖汪东兴，对汪的言行就“轻轻放下”了。 林彪个性强，自尊心重，对毛泽东又很了解，他很清楚毛泽东的指责无非是“欲加之罪、何患无辞”。对这种莫名其妙的罪名，他即便主动承认也未必有好下场。当年的国防部长彭德怀、国家主席刘少奇不都是勉强承认了毛泽东强加的“罪名”并且一再检讨，最后仍然死于非命吗？不过，据林彪的秘书李文普回忆， “九届二中全会”以后林彪曾让新调来的秘书王焕礼代写过检查[42]，内容不详，毛泽东是否就此作过批示也得而知。这个检查显然是毛、林二人都没有当真的。1971年2月20日，中央军委办事组向毛泽东报送学习讨论其关于批陈整风“重点在批陈”指示的情况报告，毛泽东作了措辞严厉的批示，并且破天荒地将此件只批给“周、康阅后，退军委”字号(3){[43]，而不是象以往那样照例批给林彪。这显然也是在刺激林彪，逼林彪认罪。 （五）拒绝与林彪见面、不给转圜的余地 整人时拒绝与被整者面谈，不听申诉，不听解释，强调“只有低头认罪才是你的唯一出路”，这是毛泽东的一贯手段。“文革”前毛泽东整总参谋长罗瑞卿时，罗瑞卿以为其中有误会，想与毛泽东、林彪见面，把事情说清楚，被周恩来坚决阻止[44]。罗瑞卿有口难辩，在“墙倒众人推”的形势下被逼得含恨跳楼，自杀未遂。毛泽东对林彪还是用的这一套，然而毛是不会承认这一点的。相反，毛在“九·一三”事件发生后说：“对林还是要保……他们不找我，我去找他们。” 这分明是撒谎。 据李文普回忆：“九届二中全会”以后，林彪曾要求面见毛泽东，谈一谈，但毛泽东长时间不作答复。林彪个性很强，从不服软，两人之间的关系发生了急剧的变化。林彪此后不愿住在北京，经常住在苏州、北戴河[45]。另据官伟勋转述一位“林办”秘书的回忆：林彪找毛泽东很多次，“就是见不上。后来没办法才找江青，他最讨厌江青，但又没办法，因为想通过江青去见毛主席，”就在这时江青让林彪去照相，“林为了见毛主席赶紧去，走得急，脸都没刮，到了钓鱼台，现借江青秘书的刮脸刀刮了刮，照片拍了，但还是没见上毛主席[46]。” （六）南巡“打招呼”、宣布“逐林令” 毛泽东习惯于以“打招呼”来强行统一思想。所谓的“打招呼”就是非正式地颁布“最高指示”，全党与全军干部只许恭听，不“允许发表不同意见”，更不“允许发表反对意见”，对毛的意见谁想不通，必须赶紧“转弯子”。毛泽东这一次为了打倒林彪，事先不开中央会议，不发中央文件，干脆抛开中央领导集体，凭着他个人的“绝对权威”，于1971年夏南巡“打招呼”。 此次南巡后共28天，在途中毛约见各地军政大员，讲话13次。讲话中充满了给林彪“上纲上线”、“定性定罪”的话：“有人看到我年纪老了，快要上天了，他们急于想当主席，要分裂党，急于夺权”；“这次庐山会议，是两个司令部的斗争”；“我看他们的地下活动、突然袭击是有组织、有计划、有纲领的。纲领就是‘天才’和要当主席，就是推翻二中全会的议程和九大路线”；“林彪那个讲话，没有同我商量，也没有给我看”；“犯了大的原则的错误，犯了路线方向错误，改也难”；“庐山这件事，还没有完，还不彻底，还没有总结[47]。” 毛泽东在南巡讲话中一再诬指林彪等人在庐山会议上搞“反革命政变”的纲领之一是“要当主席”[48]。然而，因为说林彪“要当主席”毫无事实依据，太“莫须有”了，所以“九·一三”事件之后，当毛泽东审定并批准中央公布的此前他的南巡讲话时，又自行把当时讲话中对林彪“要当主席”的指控改成了林彪欲“设国家主席”。毛泽东的蛮横无理、任意诬陷、信口捏造，由此可见一斑。 这次南巡讲话是毛泽东欲打倒林彪的宣言书、挑战书、逐客令（逐林令）。当时的海军政委李作鹏听到毛的南巡讲话后，把它概括为3点：庐山的问题没有完；上纲比以前更高；矛头指向首长（林彪）。他的概括一点也没有错，林彪当然可以看得更清楚。毛泽东不在中央高层内部讲，不对林彪当面讲，党中央的主席背着党中央的副主席，背着中央，到下面去煽风点火，动员打倒他自己钦定的“接班人”、党中央唯一的副主席。但毛同时又假惺惺地声称：“现在不要作结论，结论要由中央作”；“不要公开的去讲这次庐山会议，因为中央还没有作结论。……不要像我对你们说的这一套[49]。”如此作为的毛泽东居然还道貌岸然地提出了 “三要三不要”（“要团结，不要分裂；要搞马克思主义，不要搞修正主义；要光明正大，不要搞阴谋诡计”）。究竟是谁在分裂党内高层，谁在搞阴谋诡计，难道不是一目了然的吗？ 毛泽东把林彪逼到这一步，林彪已没有任何转圜的余地。彼时彼地，林彪还能怎么办？低头认“罪”显然是行不通的，彭德怀、刘少奇不是都低头认“罪” 了吗？但他们的下场如何？何况此时的林彪不是1959年的彭德怀（那时的彭德怀比他年轻、身体也好），也不是1966年的刘少奇（刘少奇比他理论修养更高、政治斗争经验更丰富），林彪身患重病，经不起“认罪”后必不可少的长期折磨，于是他不想“认罪”，只想“认命”，“反正活不多久了，死也死在这里。一是坐牢，二是从容就义[50]。” 但叶群、林立果又不愿意认命，于是就有了林彪被逼出逃的“九·一三”事件。对“九·一三”事件的真相，已有一些文章指出了官方解释中的很多破绽，为此提出了一系列疑问。1971年9月13日凌晨，当毛泽东、周恩来获悉林彪夫妇准备乘坐256号专机离开北戴河之后，究竟做了些什么事，至今仍然扑朔迷离。高文谦在《晚年周恩来》一书中提供了一个新疑点：林彪“在出逃途中还曾一度萌生了打退堂鼓的念头”[51]；在林豆豆告发之后，中央可以阻止林彪的出走而未“全力阻止林彪从北戴河出走”，可以阻拦256号专机起飞而“没有人出来拦阻”……[52]。也许，逼林彪这样出走本来就是毛的“战略部署”。 林彪的出逃宣告了毛泽东所谓“团结、胜利的九大路线”的破产，宣告了“文化大革命”的破产，也是对毛泽东及其荒谬绝伦的“无产阶级专政下继续革命”说法的致命一击。林彪的出逃与惨死异国他乡，粉碎了毛泽东多年来精心编织的“以毛主席为首、林副主席为副的无产阶级司令部”、“团结、胜利的九大路线”等神话，在亿万炎黄子孙的心中引发了一场空前的“大地震”，唤起了许多人的觉醒。可以说，256号专机坠机在蒙古温都尔汗的爆炸声，敲响了“文化大革命”和“毛主席革命路线”的丧钟。","categories":[{"name":"历史","slug":"历史","permalink":"http://wangcj.com.cn/categories/%E5%8E%86%E5%8F%B2/"}],"tags":[],"author":"王长金"},{"title":"windows 下java处理设备插拔事件","slug":"windows-下java处理设备插拔事件","date":"2020-10-21T06:12:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/10/21/windows-下java处理设备插拔事件/","link":"","permalink":"http://wangcj.com.cn/2020/10/21/windows-%E4%B8%8Bjava%E5%A4%84%E7%90%86%E8%AE%BE%E5%A4%87%E6%8F%92%E6%8B%94%E4%BA%8B%E4%BB%B6/","excerpt":"","text":"基本思路创建隐藏window实现 winproc函数注册设备通知，调用winproc处理 引入依赖&lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna-platform&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;net.java.dev.jna&lt;/groupId&gt; &lt;artifactId&gt;jna&lt;/artifactId&gt; &lt;version&gt;5.6.0&lt;/version&gt; &lt;/dependency&gt;代码实现package com.cares.vip.front.service; import com.sun.jna.platform.win32.*; import lombok.extern.slf4j.Slf4j; import org.springframework.beans.factory.InitializingBean; import static com.sun.jna.platform.win32.WinUser.WM_DEVICECHANGE; /** * 监听串口设备拔出、插入 */ @Slf4j public class SpDeviceChangeService implements WinUser.WindowProc, InitializingBean &#123; private SerialportService serialportService; public void setup() &#123; serialportService.openSerialPort(); // define new window class String windowClass = &quot;MyWindowClass&quot;; WinDef.HMODULE hInst = Kernel32.INSTANCE.GetModuleHandle(&quot;&quot;); WinUser.WNDCLASSEX wClass = new WinUser.WNDCLASSEX(); wClass.hInstance = hInst; wClass.lpfnWndProc = this; wClass.lpszClassName = windowClass; // register window class User32.INSTANCE.RegisterClassEx(wClass); getLastError(); // create new window WinDef.HWND hWnd = User32.INSTANCE .CreateWindowEx( User32.WS_EX_TOPMOST, windowClass, &quot;hidden window to catch the windows events&quot;, 0, 0, 0, 0, 0, null, // WM_DEVICECHANGE contradicts parent=HWND_MESSAGE null, hInst, null); getLastError(); log.info(&quot;window sucessfully created! window hwnd: &quot; + hWnd.getPointer().toString()); Wtsapi32.INSTANCE.WTSRegisterSessionNotification(hWnd, Wtsapi32.NOTIFY_FOR_THIS_SESSION); /* this filters for all usb device classes */ DBT.DEV_BROADCAST_DEVICEINTERFACE notificationFilter = new DBT.DEV_BROADCAST_DEVICEINTERFACE(); notificationFilter.dbcc_size = notificationFilter.size(); notificationFilter.dbcc_devicetype = DBT.DBT_DEVTYP_PORT; notificationFilter.dbcc_classguid = DBT.GUID_DEVINTERFACE_HID; WinUser.HDEVNOTIFY hDevNotify = User32.INSTANCE.RegisterDeviceNotification( hWnd, notificationFilter, User32.DEVICE_NOTIFY_WINDOW_HANDLE); getLastError(); if (hDevNotify != null) log.info(&quot;RegisterDeviceNotification was sucessfully!&quot;); WinUser.MSG msg = new WinUser.MSG(); while (User32.INSTANCE.GetMessage(msg, hWnd, 0, 0) != 0) &#123; User32.INSTANCE.TranslateMessage(msg); User32.INSTANCE.DispatchMessage(msg); &#125; User32.INSTANCE.UnregisterDeviceNotification(hDevNotify); Wtsapi32.INSTANCE.WTSUnRegisterSessionNotification(hWnd); User32.INSTANCE.UnregisterClass(windowClass, hInst); User32.INSTANCE.DestroyWindow(hWnd); log.info(&quot;program exit!&quot;); &#125; /** * 实现 WinUser.WindowProc 的callback 接口 */ public WinDef.LRESULT callback(WinDef.HWND hwnd, int uMsg, WinDef.WPARAM wParam, WinDef.LPARAM lParam) &#123; switch (uMsg) &#123; case WM_DEVICECHANGE: &#123; WinDef.LRESULT lResult = this.onDeviceChange(wParam, lParam); return lResult != null ? lResult : User32.INSTANCE.DefWindowProc(hwnd, uMsg, wParam, lParam); &#125; default: return User32.INSTANCE.DefWindowProc(hwnd, uMsg, wParam, lParam); &#125; &#125; public int getLastError() &#123; int rc = Kernel32.INSTANCE.GetLastError(); if (rc != 0) log.error(&quot;error: &quot; + rc); return rc; &#125; protected WinDef.LRESULT onDeviceChange(WinDef.WPARAM wParam, WinDef.LPARAM lParam) &#123; switch (wParam.intValue()) &#123; case DBT.DBT_DEVICEARRIVAL: &#123; return onDeviceChangeArrival(lParam); &#125; case DBT.DBT_DEVICEREMOVECOMPLETE: &#123; return onDeviceChangeRemoveComplete(lParam); &#125; case DBT.DBT_DEVNODES_CHANGED: &#123; return onDeviceChangeNodesChanged(); &#125; default: log.info(&quot;Message WM_DEVICECHANGE message received, value unhandled.&quot;); &#125; return null; &#125; protected WinDef.LRESULT onDeviceChangeArrivalOrRemoveComplete(WinDef.LPARAM lParam, String action) &#123; DBT.DEV_BROADCAST_HDR bhdr = new DBT.DEV_BROADCAST_HDR(lParam.longValue()); switch (bhdr.dbch_devicetype) &#123; case DBT.DBT_DEVTYP_DEVICEINTERFACE: &#123; DBT.DEV_BROADCAST_DEVICEINTERFACE bdif = new DBT.DEV_BROADCAST_DEVICEINTERFACE(bhdr.getPointer()); log.info(&quot;BROADCAST_DEVICEINTERFACE: &quot; + action); log.info(&quot;dbcc_devicetype: &quot; + bdif.dbcc_devicetype); log.info(&quot;dbcc_name: &quot; + bdif.getDbcc_name()); log.info(&quot;dbcc_classguid: &quot; + bdif.dbcc_classguid.toGuidString()); if (&quot;insert&quot;.equals(action)) &#123; serialportService.openSerialPort(); &#125; break; &#125; case DBT.DBT_DEVTYP_PORT: &#123; if (&quot;insert&quot;.equals(action)) &#123; serialportService.openSerialPort(); &#125; log.info(&quot;BROADCAST_PORT: &quot; + action); break; &#125; default: return null; &#125; return new WinDef.LRESULT(1); &#125; protected WinDef.LRESULT onDeviceChangeArrival(WinDef.LPARAM lParam) &#123; return onDeviceChangeArrivalOrRemoveComplete(lParam, &quot;insert&quot;); &#125; protected WinDef.LRESULT onDeviceChangeRemoveComplete(WinDef.LPARAM lParam) &#123; return onDeviceChangeArrivalOrRemoveComplete(lParam, &quot;remove&quot;); &#125; protected WinDef.LRESULT onDeviceChangeNodesChanged() &#123; log.info(&quot;Message DBT_DEVNODES_CHANGED&quot;); return new WinDef.LRESULT(1); &#125; public void setSerialportService(SerialportService serialportService) &#123; this.serialportService = serialportService; &#125; @Override public void afterPropertiesSet() throws Exception &#123; setup(); &#125; &#125;","categories":[{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/categories/JNA/"}],"tags":[{"name":"jna","slug":"jna","permalink":"http://wangcj.com.cn/tags/jna/"},{"name":"监听设备插拔","slug":"监听设备插拔","permalink":"http://wangcj.com.cn/tags/%E7%9B%91%E5%90%AC%E8%AE%BE%E5%A4%87%E6%8F%92%E6%8B%94/"}],"author":"王长金"},{"title":"正则表达式总结","slug":"正则表达式总结","date":"2020-10-21T05:38:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/10/21/正则表达式总结/","link":"","permalink":"http://wangcj.com.cn/2020/10/21/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/","excerpt":"","text":"分组的引入 对于要重复单个字符，非常简单，直接在字符后卖弄加上限定符即可，例如 a+ 表示匹配1个或一个以上的a，a?表示匹配0个或1个a。这些限定符如下所示： X? X ，一次或一次也没有 X * X ，零次或多次 X + X ，一次或多次 X { n } X ，恰好 n 次 X { n ,} X ，至少 n 次 X { n , m } X ，至少 n 次，但是不超过 m 次 但是我们如果要对多个字符进行重复怎么办呢？此时我们就要用到分组，我们可以使用小括号”()”来指定要重复的子表达式，然后对这个子表达式进行重复，例如：(abc)? 表示0个或1个abc 这里一 个括号的表达式就表示一个分组 。 分组可以分为两种形式，捕获组和非捕获组。 捕获组捕获组可以通过从左到右计算其开括号来编号 。例如，在表达式 (A)(B(C)) 中，存在四个这样的组： 0 (A)(B(C)) 1 (A) 2 (B(C)) 3 (C) 组零始终代表整个表达式 之所以这样命名捕获组是因为在匹配中，保存了与这些组匹配的输入序列的每个子序列。捕获的子序列稍后可以通过 Back 引用（反向引用） 在表达式中使用，也可以在匹配操作完成后从匹配器检索。 Back 引用 是说在后面的表达式中我们可以使用组的编号来引用前面的表达式所捕获到的文本序列。注意：反向引用，引用的是前面捕获组中的文本而不是正则，也就是说反向引用处匹配的文本应和前面捕获组中的文本相同，这一点很重要。 【例】([“‘]).*\\1 其中使用了分组，\\1就是对引号这个分组的引用，它匹配包含在两个引号或者两个单引号中的所有字符串，如，”abc” 或 “ ‘ “ 或 ‘ “ ‘ ，但是请注意，它并不会对” a’或者 ‘a”匹配。原因上面已经说明，Back引用只是引用文本而不是表达式。 分组举列先来看第一个作用，对于IP地址的匹配，简单的可以写为如下形式： \\d&#123;1,3&#125;.\\d&#123;1,3&#125;.\\d&#123;1,3&#125;.\\d&#123;1,3&#125; 但仔细观察，我们可以发现一定的规律，可以把.\\d{1,3}看成一个整体，也就是把他们看成一组，再把这个组重复3次即可。表达式如下： \\d&#123;1,3&#125;(.\\d&#123;1,3&#125;)&#123;3&#125; 再来看第二个作用，就拿匹配xxx标签来说，简单的正则可以这样写： &lt;title&gt;.*&lt;/title&gt;可以看出，上边表达式中有两个title，完全一样，其实可以通过分组简写。表达式如下： &lt;(title)&gt;.*&lt;/\\1&gt;对于分组而言，整个表达式永远算作第0组，在本例中，第0组是&lt;(title)&gt;.*&lt;/\\1&gt;，然后从左到右，依次为分组编号，因此，(title)是第1组。 注意： 用\\1这种语法，可以引用某组的文本内容，但不能引用正则表达式。 例如刚刚的IP地址正则表达式为\\d{1,3}(.\\d{1,3}){3}，里边的\\d{1,3}重复了两次，如果利用后向引用简化，表达式如下： (\\d&#123;1,3&#125;)(.\\1)&#123;3&#125;经过实际测试，会发现这样写是错误的，为什么呢？ 后向引用，引用的仅仅是文本内容，而不是正则表达式！ 也就是说，组中的内容一旦匹配成功，后向引用，引用的就是匹配成功后的内容，引用的是结果，而不是表达式。 因此，(\\d{1,3})(.\\1){3}这个表达式实际上匹配的是四个数都相同的IP地址，比如：123.123.123.123。 非捕获组 以 (?) 开头的组是纯的非捕获 组，它不捕获文本 ，也不针对组合计进行计数。就是说，如果小括号中以?号开头，那么这个分组就不会捕获文本，当然也不会有组的编号，因此也不存在Back 引用。我们通过捕获组就能够得到我们想要匹配的内容了，那为什么还要有非捕获组呢？原因是捕获组捕获的内容是被存储在内存中，可供以后使用，比如反向引用就是引用的内存中存储的捕获组中捕获的内容。而非捕获组则不会捕获文本，也不会将它匹配到的内容单独分组来放到内存中。所以，使用非捕获组较使用捕获组更节省内存。在实际情况中我们要酌情选用。 1、非捕获组(?:Pattern)它的作用就是匹配Pattern字符，好处就是不捕获文本，不将匹配到的字符存储到内存中，从而节省内存。 【例】匹配indestry或者indestries 我们可以使用indestr(y|ies)或者indestr(?:y|ies) 【例】(?:a|A)123(?:b)可以匹配a123b或者A123b 非捕获组有很多种形式，其中包括：零宽度断言和模式修正符 2、零宽度断言这四个非捕获组用于匹配表达式X，但是不包含表达式的文本。 (?=X ) 零宽度正先行断言。仅当子表达式 X 在此位置的右侧匹配时才继续匹配。也就是说要使此零宽度断言起到我们想要的效果的话，就必须把这个非捕获组放在整个表达式的右侧。例如，/w+(?=/d) 与后跟数字的单词匹配，而不与该数字匹配。此构造不会回溯。 (?!X) 零宽度负先行断言。仅当子表达式 X 不在此位置的右侧匹配时才继续匹配。例如，例如，/w+(?!/d) 与后不跟数字的单词匹配，而不与该数字匹配 。 (?&lt;=X) 零宽度正后发断言。仅当子表达式 X 在此位置的左侧匹配时才继续匹配。例如，(?&lt;=19)99 与跟在 19 后面的 99 的实例匹配。此构造不会回溯。 (?&lt;!X) 零宽度负后发断言。仅当子表达式 X 不在此位置的左侧匹配时才继续匹配。例如，(?&lt;!19)99 与不跟在 19 后面的 99 的实例匹配 上面都是理论性的介绍，这里就使用一些例子来说明一下问题： 【例1】正则表达式 (?&lt;!4)56(?=9) 含义：查找56，要求前面不能是4，后面必须是9。因此，可以匹配如下文本 5569 ，与4569不匹配。 【例2】提取字符串 da12bka3434bdca4343bdca234bm中包含在字符a和b之间的数字，但是这个a之前的字符不能是c；b后面的字符必须是d才能提取。 显然，这里就只有3434这个数字满足要求。那么我们怎么提取呢？ 首先，我们写出含有捕获组的正则表达式：[^c]a\\dbd 然后我们再将其变为非捕获组的正则表达式：(?&lt;=[^c]a)\\d(?=bd) 3、模式修正符以(?)开头的非捕获组除了零宽度断言之外，还有模式修正符。 正则表达式中常用的模式修正符有i、g、m、s、x、e等。它们之间可以组合搭配使用。 (?imnsx-imnsx: ) 应用或禁用子表达式中指定的选项。例如，(?i-s: ) 将打开不区分大小写并禁用单行模式。关闭不区分大小写的开关可以使用(?-i)。有关更多信息，请参阅正则表达式选项。 【例1】(?i)ab 表示对(?i)后的所有字符都开启不区分大小写的开关。故它可以匹配ab、aB、Ab、AB 【例2】(?i:a)b 它表示只对a开启不区分大小写的开关。故它可以匹配ab和Ab。不能匹配aB和AB。 4、(?&gt;Pattern)等同于侵占模式匹配成功不进行回溯，这个比较复杂，与侵占量词“+”可以通用，比如：\\d++ 可以写为 (?&gt;\\d+)。 【例】将一些多位的小数截短到三位小数：\\d+.\\d\\d[1-9]?\\d+ 在这种条件下 6.625 能进行匹配，这样做没有必要，因为它本身就是三位小数。最后一个“5”本来是给 [1-9] 匹配的，但是后面还有一个 \\d+ 所以，[1-9] 由于是“?”可以不匹配所以只能放弃当前的匹配，将这个“5”送给 \\d+ 去匹配，如果改为： \\d+\\.\\d\\d[1-9]?+\\d+的侵占形式，在“5”匹配到 [1-9] 时，由于是侵占式的，所以不会进行回溯，后面的 \\d+ 就匹配不到任东西了，所以导致 6.625 匹配失败。 这种情况，在替换时就有效了，比如把数字截短到小数点后三位，如果正好是三位小数的，就可以不用替换了，可以提高效率，侵占量词基本上就是用来提高匹配效率的。 把 \\d+\\.\\d\\d[1-9]?+\\d+ 改为 \\d+\\.\\d\\d(?&gt;[1-9]?)\\d+ 这样是一样的。 【补充】js获取分组内容的方法：（可参考JS正则实例） 1、arr[n] = str.match(reg); 或者 arr[n] = reg.exec(str);返回的匹配数组arr[n]中，arr[0]表示整个匹配，arr[1],arr[2]…….分别表示各个分组的匹配结果 2、通过RegExp对象的静态属性来获取RegExp.1,RegExp.2………RegExp.$9 分别表示匹配到的第一个分组至第九个分组的内容 例： var str = &quot;adfasd324232sdfas&quot;; alert(str); var reg = new RegExp(&quot;([a-z]*)(\\\\d*)([a-z]*)&quot;); var arr = str.match(reg); alert(arr[0] + &quot;===&quot; + arr[1] + &quot;===&quot; + arr[2] + &quot;===&quot; + arr[3]); alert(RegExp.$1 + &quot;-----&quot; + RegExp.$2 + &quot;----&quot; + RegExp.$3); Group 分组在一个正则表达式中，如果要提取出多个不同的部分（子表达式项），需要用到分组功能。 在 C# 正则表达式中，Regex 成员关系如下，其中 Group 是其分组处理类。 Regex –&gt; MatcheCollection (匹配项集合) –&gt; Match (单匹配项 内容) –&gt; GroupCollection (单匹配项中包含的 &quot;(分组/子表达式项)&quot; 集合) –&gt; Group ( &quot;(分组/子表达式项)&quot; 内容) –&gt; CaputerCollection (分组项内容显示基础？) –&gt; CaputerGroup 对分组有两种访问方式： 1、数组下标访问在 ((\\d+)([a-z]))\\s+ 这个正则表达式里总共包含了四个分组，按照默认的从左到右的匹配方式， Groups[0] 代表了匹配项本身，也就是整个整个表达式 ((\\d+)([a-z]))\\s+ Groups[1] 代表了子表达式项 ((\\d+)([a-z])) Groups[2] 代表了子表达式项 (\\d+) Groups[3] 代表了子表达式项 ([a-z]) string text = &quot;1A 2B 3C 4D 5E 6F 7G 8H 9I 10J 11Q 12J 13K 14L 15M 16N ffee80 #800080&quot;; Response.Write(text + &quot;&lt;br/&gt;&quot;); string strPatten = @&quot;((\\d+)([a-z]))\\s+&quot;; Regex rex = new Regex(strPatten, RegexOptions.IgnoreCase); MatchCollection matches = rex.Matches(text); //提取匹配项 foreach (Match match in matches) &#123; GroupCollection groups = match.Groups; Response.Write(string.Format(&quot;&lt;br/&gt;&#123;0&#125; 共有 &#123;1&#125; 个分组：&#123;2&#125;&lt;br/&gt;&quot; , match.Value, groups.Count, strPatten)); //提取匹配项内的分组信息 for (int i = 0; i &lt; groups.Count; i++) &#123; Response.Write( string.Format(&quot;分组 &#123;0&#125; 为 &#123;1&#125;，位置为 &#123;2&#125;，长度为 &#123;3&#125;&lt;br/&gt;&quot; , i , groups[i].Value , groups[i].Index , groups[i].Length)); &#125; &#125; /* * 输出： 1A 2B 3C 4D 5E 6F 7G 8H 9I 10J 11Q 12J 13K 14L 15M 16N ffee80 #800080 1A 共有 4 个分组：((\\d+)([a-z]))\\s+ 分组 0 为 1A ，位置为 0，长度为 3 分组 1 为 1A，位置为 0，长度为 2 分组 2 为 1，位置为 0，长度为 1 分组 3 为 A，位置为 1，长度为 1 .... */ 2、命名访问利用 (?子表达式) 定义分组别名，这样就可以利用 Groups[“xxx”] 进行访问分组/子表达式内容。 string text = &quot;I&#39;ve found this amazing URL at http://www.sohu.com, and then find ftp://ftp.sohu.comisbetter.&quot;; Response.Write(text + &quot;&lt;br/&gt;&quot;); string pattern = @&quot;\\b(?&lt;protocol&gt;\\S+)://(?&lt;address&gt;\\S+)\\b&quot;; Response.Write(pattern.Replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;).Replace(&quot;&gt;&quot;, &quot;&amp;gt;&quot;) + &quot;&lt;br/&gt;&lt;br/&gt;&quot;); MatchCollection matches = Regex.Matches(text, pattern); foreach (Match match in matches) &#123; GroupCollection groups = match.Groups; Response.Write(string.Format( &quot;URL: &#123;0&#125;； Protocol: &#123;1&#125;； Address: &#123;2&#125; &lt;br/&gt;&quot; , match.Value , groups[&quot;protocol&quot;].Value , groups[&quot;address&quot;].Value)); &#125; /* * 输出 I&#39;ve found this amazing URL at http://www.sohu.com, and then find ftp://ftp.sohu.comisbetter. \\b(?&lt;protocol&gt;\\S+)://(?&lt;address&gt;\\S+)\\b URL: http://www.sohu.com； Protocol: http； Address: www.sohu.com URL: ftp://ftp.sohu.comisbetter； Protocol: ftp； Address: ftp.sohu.comisbetter */ 贪心和懒惰匹配 ZCZCqweqwNNNNZCZCqweq23123NNNN 贪心匹配 ZCZC.*NNNN 将匹配整个字符串 懒惰匹配 ZCZC.*?NNNN 将匹配 ZCZCqweqwNNNN 和ZCZCqweq23123NNNN","categories":[{"name":"正则表达式","slug":"正则表达式","permalink":"http://wangcj.com.cn/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"http://wangcj.com.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"author":"王长金"},{"title":"USB扫描枪转串口","slug":"USB扫描枪转串口","date":"2020-10-09T06:41:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/10/09/USB扫描枪转串口/","link":"","permalink":"http://wangcj.com.cn/2020/10/09/USB%E6%89%AB%E6%8F%8F%E6%9E%AA%E8%BD%AC%E4%B8%B2%E5%8F%A3/","excerpt":"","text":"安装驱动https://share.weiyun.com/kFnwmCKg 扫描条形码进行功能设置 测试 修改扫描枪绑定串口1、查看扫描枪硬件PID 2、填入硬件PID和要绑定的串口 3、点击确定，重启电脑，查看串口情况","categories":[{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[],"author":"王长金"},{"title":"构建redis 管理工具","slug":"构建redis-管理工具","date":"2020-09-03T08:31:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/09/03/构建redis-管理工具/","link":"","permalink":"http://wangcj.com.cn/2020/09/03/%E6%9E%84%E5%BB%BAredis-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/","excerpt":"","text":"代码地址https://github.com/uglide/RedisDesktopManager构建完成官方构建步骤 Install Visual Studio 2017 Community Edition. Install Qt 5.13. Go to 3rdparty/qredisclient/3rdparty/hiredis and apply the patch to fix compilation on Windows:git apply ../hiredis-win.patch Go to the 3rdparty/ folder and install zlib with nuget: nuget install zlib-msvc14-x64 -Version 1.2.11.7795 Install Python 3.7 amd64 to C:\\Python37-x64. Install Python requirements pip3 install -r src/py/requirements.txt. Open ./src/rdm.pro in Qt Creator. Choose the Desktop Qt 5.13.x MSVC2017 64bit &gt; Release build profile. Run build. (Just hit Ctrl-B) 打包发布设置环境变量cd C:\\Qt\\5.13.2\\msvc2017_64 C:\\Qt\\5.13.2\\msvc2017_64\\bin&gt;qtenv2.bat cd C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build&gt;vcvarsall.bat amd64 创建发布目录mkdir c:\\deploy构建可执行文件选择 release ，构建出 rdm.exe 在rdm.pro 中如果写入中文信息，需将rdm.pro 改为ANSI编码保存，否则中文乱码 打包发布C:\\Qt\\5.13.2\\msvc2017_64\\bin&gt;windeployqt.exe --dir C:\\deploy --compiler-runtime --release --qmldir C:\\Users\\Administrator\\rdm\\src\\qml c:\\Users\\Administrator\\rdm\\bin\\windows\\release\\rdm.exe其中qmldir 是应用程序 rdm 的qml目录 复制 rdm.exe 到 c:\\deploy 复制 C:\\Python37-x64 下的python37.dll 和 Lib 复制到 c:\\deploy 测试 制作安装包下载NSIS运行时和NSIS脚本编辑器 NSIS 运行时下载地址 https://nsis.sourceforge.io/Download NSIS 脚本编辑器(nisedit2.0.3.exe)地址 http://hmne.sourceforge.net/ 用向导生成脚本文件-》新建脚本：向导 运行脚本，构建出安装程序NSIS-》编译脚本 安装测试","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"redis","slug":"redis","permalink":"http://wangcj.com.cn/tags/redis/"},{"name":"qt5 打包","slug":"qt5-打包","permalink":"http://wangcj.com.cn/tags/qt5-%E6%89%93%E5%8C%85/"}],"author":"王长金"},{"title":"SPRINGBOOT 打包串口通信程序","slug":"SPRINGBOOT-运行图形界面程序","date":"2020-08-27T01:00:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/27/SPRINGBOOT-运行图形界面程序/","link":"","permalink":"http://wangcj.com.cn/2020/08/27/SPRINGBOOT-%E8%BF%90%E8%A1%8C%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"前置1、jdk: 1.8 2、springboot：2.3.3.RELEASE 主要代码从网上copy的，打包一个32位的运行时，写个启动脚本，做到直接运行 pom.xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.3.3.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;groupId&gt;cn.sh.cares&lt;/groupId&gt; &lt;artifactId&gt;serialport&lt;/artifactId&gt; &lt;version&gt;1.0.RELEASE&lt;/version&gt; &lt;name&gt;serialport&lt;/name&gt; &lt;description&gt;串口读写&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.netbeans.external&lt;/groupId&gt; &lt;artifactId&gt;AbsoluteLayout&lt;/artifactId&gt; &lt;version&gt;RELEASE120-1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.rxtx&lt;/groupId&gt; &lt;artifactId&gt;rxtxcomm&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/lib/RXTXcomm.jar&lt;/systemPath&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.swinglabs&lt;/groupId&gt; &lt;artifactId&gt;swing-layout&lt;/artifactId&gt; &lt;version&gt;1.0.3&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt; &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;2.3.3.RELEASE&lt;/version&gt; &lt;configuration&gt; &lt;jvmArguments&gt; -Djava.library.path=$&#123;project.basedir&#125;/lib/x64 &lt;/jvmArguments&gt; &lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt; &lt;version&gt;3.0.0&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;run&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;target&gt; &lt;property name=&quot;dist&quot;&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;&lt;/property&gt; &lt;property name=&quot;app-name&quot;&gt;$&#123;project.artifactId&#125;-$&#123;project.version&#125;&lt;/property&gt; &lt;property name=&quot;jre&quot;&gt;$&#123;dist&#125;/jre&lt;/property&gt; &lt;delete dir=&quot;$&#123;dist&#125;&quot; /&gt; &lt;mkdir dir=&quot;$&#123;dist&#125;&quot; /&gt; &lt;copy file=&quot;target/$&#123;app-name&#125;.jar&quot; tofile=&quot;$&#123;dist&#125;/$&#123;app-name&#125;.jar&quot; /&gt; &lt;copy todir=&quot;$&#123;jre&#125;&quot; overwrite=&quot;true&quot; &gt; &lt;fileset dir=&quot;D:\\soft\\Java\\JDK8_32\\jre&quot; erroronmissingdir=&quot;false&quot;&gt;&lt;/fileset&gt; &lt;/copy&gt; &lt;copy todir=&quot;$&#123;dist&#125;/jre/bin/&quot; overwrite=&quot;true&quot; &gt; &lt;fileset dir=&quot;$&#123;project.basedir&#125;/lib/x86/&quot; erroronmissingdir=&quot;false&quot;&gt; &lt;include name=&quot;*.dll&quot;&gt;&lt;/include&gt; &lt;/fileset&gt; &lt;/copy&gt; &lt;copy file=&quot;$&#123;project.basedir&#125;/cmd/start.cmd&quot; tofile=&quot;$&#123;dist&#125;/start.cmd&quot; /&gt; &lt;zip basedir=&quot;$&#123;dist&#125;&quot; destfile=&quot;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;.zip&quot; /&gt; &lt;/target&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;/project&gt; 工程结构 代码start.cmdecho off set cwd=%~dp0 set path=%cwd%jre\\bin;%path% cd %cwd% start javaw.exe -jar serialport-1.0.RELEASE.jarSerialPortManagerpackage cn.sh.cares.serialport.manager; import java.io.IOException; import java.io.InputStream; import java.io.OutputStream; import java.util.ArrayList; import java.util.Enumeration; import java.util.TooManyListenersException; import cn.sh.cares.serialport.utils.ArrayUtils; import cn.sh.cares.serialport.utils.ShowUtils; import gnu.io.CommPort; import gnu.io.CommPortIdentifier; import gnu.io.NoSuchPortException; import gnu.io.PortInUseException; import gnu.io.SerialPort; import gnu.io.SerialPortEvent; import gnu.io.SerialPortEventListener; import gnu.io.UnsupportedCommOperationException; /** * 串口管理 */ @SuppressWarnings(&quot;all&quot;) public class SerialPortManager &#123; /** * 查找所有可用端口 * * @return 可用端口名称列表 */ public static final ArrayList&lt;String&gt; findPorts() &#123; // 获得当前所有可用串口 Enumeration&lt;CommPortIdentifier&gt; portList = CommPortIdentifier.getPortIdentifiers(); ArrayList&lt;String&gt; portNameList = new ArrayList&lt;String&gt;(); // 将可用串口名添加到List并返回该List while (portList.hasMoreElements()) &#123; String portName = portList.nextElement().getName(); portNameList.add(portName); &#125; return portNameList; &#125; /** * 打开串口 * * @param portName 端口名称 * @param baudrate 波特率 * @return 串口对象 * @throws PortInUseException 串口已被占用 */ public static final SerialPort openPort(String portName, int baudrate) throws PortInUseException &#123; try &#123; // 通过端口名识别端口 CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(portName); // 打开端口，并给端口名字和一个timeout（打开操作的超时时间） CommPort commPort = portIdentifier.open(portName, 2000); // 判断是不是串口 if (commPort instanceof SerialPort) &#123; SerialPort serialPort = (SerialPort) commPort; try &#123; // 设置一下串口的波特率等参数 // 数据位：8 // 停止位：1 // 校验位：None serialPort.setSerialPortParams(baudrate, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE); &#125; catch (UnsupportedCommOperationException e) &#123; e.printStackTrace(); &#125; return serialPort; &#125; &#125; catch (NoSuchPortException e1) &#123; e1.printStackTrace(); &#125; return null; &#125; /** * 关闭串口 * * @param serialport 待关闭的串口对象 */ public static void closePort(SerialPort serialPort) &#123; if (serialPort != null) &#123; serialPort.close(); &#125; &#125; /** * 往串口发送数据 * * @param serialPort 串口对象 * @param order 待发送数据 */ public static void sendToPort(SerialPort serialPort, byte[] order) &#123; OutputStream out = null; try &#123; out = serialPort.getOutputStream(); out.write(order); out.flush(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; if (out != null) &#123; out.close(); out = null; &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125; /** * 从串口读取数据 * * @param serialPort 当前已建立连接的SerialPort对象 * @return 读取到的数据 */ public static byte[] readFromPort(SerialPort serialPort) &#123; InputStream in = null; byte[] bytes = &#123;&#125;; try &#123; in = serialPort.getInputStream(); // 缓冲区大小为一个字节 byte[] readBuffer = new byte[1]; int bytesNum = in.read(readBuffer); while (bytesNum &gt; 0) &#123; bytes = ArrayUtils.concat(bytes, readBuffer); bytesNum = in.read(readBuffer); &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; if (in != null) &#123; in.close(); in = null; &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; return bytes; &#125; /** * 添加监听器 * * @param port 串口对象 * @param listener 串口存在有效数据监听 */ public static void addListener(SerialPort serialPort, DataAvailableListener listener) &#123; try &#123; // 给串口添加监听器 serialPort.addEventListener(new SerialPortListener(listener)); // 设置当有数据到达时唤醒监听接收线程 serialPort.notifyOnDataAvailable(true); // 设置当通信中断时唤醒中断线程 serialPort.notifyOnBreakInterrupt(true); &#125; catch (TooManyListenersException e) &#123; e.printStackTrace(); &#125; &#125; /** * 串口监听 */ public static class SerialPortListener implements SerialPortEventListener &#123; private DataAvailableListener mDataAvailableListener; public SerialPortListener(DataAvailableListener mDataAvailableListener) &#123; this.mDataAvailableListener = mDataAvailableListener; &#125; public void serialEvent(SerialPortEvent serialPortEvent) &#123; switch (serialPortEvent.getEventType()) &#123; case SerialPortEvent.DATA_AVAILABLE: // 1.串口存在有效数据 if (mDataAvailableListener != null) &#123; mDataAvailableListener.dataAvailable(); &#125; break; case SerialPortEvent.OUTPUT_BUFFER_EMPTY: // 2.输出缓冲区已清空 break; case SerialPortEvent.CTS: // 3.清除待发送数据 break; case SerialPortEvent.DSR: // 4.待发送数据准备好了 break; case SerialPortEvent.RI: // 5.振铃指示 break; case SerialPortEvent.CD: // 6.载波检测 break; case SerialPortEvent.OE: // 7.溢位（溢出）错误 break; case SerialPortEvent.PE: // 8.奇偶校验错误 break; case SerialPortEvent.FE: // 9.帧错误 break; case SerialPortEvent.BI: // 10.通讯中断 ShowUtils.errorMessage(&quot;与串口设备通讯中断&quot;); break; default: break; &#125; &#125; &#125; /** * 串口存在有效数据监听 */ public interface DataAvailableListener &#123; /** * 串口存在有效数据 */ void dataAvailable(); &#125; &#125; MainFramepackage cn.sh.cares.serialport.ui; import java.awt.Color; import java.awt.GraphicsEnvironment; import java.awt.Point; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.util.List; import javax.swing.BorderFactory; import javax.swing.ButtonGroup; import javax.swing.JButton; import javax.swing.JComboBox; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JPanel; import javax.swing.JRadioButton; import javax.swing.JScrollPane; import javax.swing.JTextArea; import javax.swing.event.PopupMenuEvent; import javax.swing.event.PopupMenuListener; import cn.sh.cares.serialport.manager.SerialPortManager; import cn.sh.cares.serialport.utils.ByteUtils; import cn.sh.cares.serialport.utils.ShowUtils; import gnu.io.PortInUseException; import gnu.io.SerialPort; /** * 主界面 * */ @SuppressWarnings(&quot;all&quot;) public class MainFrame extends JFrame &#123; // 程序界面宽度 public final int WIDTH = 530; // 程序界面高度 public final int HEIGHT = 390; // 数据显示区 private JTextArea mDataView = new JTextArea(); private JScrollPane mScrollDataView = new JScrollPane(mDataView); // 串口设置面板 private JPanel mSerialPortPanel = new JPanel(); private JLabel mSerialPortLabel = new JLabel(&quot;串口&quot;); private JLabel mBaudrateLabel = new JLabel(&quot;波特率&quot;); private JComboBox mCommChoice = new JComboBox(); private JComboBox mBaudrateChoice = new JComboBox(); private ButtonGroup mDataChoice = new ButtonGroup(); private JRadioButton mDataASCIIChoice = new JRadioButton(&quot;ASCII&quot;, true); private JRadioButton mDataHexChoice = new JRadioButton(&quot;Hex&quot;); // 操作面板 private JPanel mOperatePanel = new JPanel(); private JTextArea mDataInput = new JTextArea(); private JButton mSerialPortOperate = new JButton(&quot;打开串口&quot;); private JButton mSendData = new JButton(&quot;发送数据&quot;); // 串口列表 private List&lt;String&gt; mCommList = null; // 串口对象 private SerialPort mSerialport; public MainFrame() &#123; initView(); initComponents(); actionListener(); initData(); &#125; /** * 初始化窗口 */ private void initView() &#123; // 关闭程序 setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); // 禁止窗口最大化 setResizable(false); // 设置程序窗口居中显示 Point p = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint(); setBounds(p.x - WIDTH / 2, p.y - HEIGHT / 2, WIDTH, HEIGHT); this.setLayout(null); setTitle(&quot;串口通信&quot;); &#125; /** * 初始化控件 */ private void initComponents() &#123; // 数据显示 mDataView.setFocusable(false); mScrollDataView.setBounds(10, 10, 505, 200); add(mScrollDataView); // 串口设置 mSerialPortPanel.setBorder(BorderFactory.createTitledBorder(&quot;串口设置&quot;)); mSerialPortPanel.setBounds(10, 220, 170, 130); mSerialPortPanel.setLayout(null); add(mSerialPortPanel); mSerialPortLabel.setForeground(Color.gray); mSerialPortLabel.setBounds(10, 25, 40, 20); mSerialPortPanel.add(mSerialPortLabel); mCommChoice.setFocusable(false); mCommChoice.setBounds(60, 25, 100, 20); mSerialPortPanel.add(mCommChoice); mBaudrateLabel.setForeground(Color.gray); mBaudrateLabel.setBounds(10, 60, 40, 20); mSerialPortPanel.add(mBaudrateLabel); mBaudrateChoice.setFocusable(false); mBaudrateChoice.setBounds(60, 60, 100, 20); mSerialPortPanel.add(mBaudrateChoice); mDataASCIIChoice.setBounds(20, 95, 55, 20); mDataHexChoice.setBounds(95, 95, 55, 20); mDataChoice.add(mDataASCIIChoice); mDataChoice.add(mDataHexChoice); mSerialPortPanel.add(mDataASCIIChoice); mSerialPortPanel.add(mDataHexChoice); // 操作 mOperatePanel.setBorder(BorderFactory.createTitledBorder(&quot;操作&quot;)); mOperatePanel.setBounds(200, 220, 315, 130); mOperatePanel.setLayout(null); add(mOperatePanel); mDataInput.setBounds(25, 25, 265, 50); mDataInput.setLineWrap(true); mDataInput.setWrapStyleWord(true); mOperatePanel.add(mDataInput); mSerialPortOperate.setFocusable(false); mSerialPortOperate.setBounds(45, 95, 90, 20); mOperatePanel.add(mSerialPortOperate); mSendData.setFocusable(false); mSendData.setBounds(180, 95, 90, 20); mOperatePanel.add(mSendData); &#125; /** * 初始化数据 */ private void initData() &#123; mCommList = SerialPortManager.findPorts(); // 检查是否有可用串口，有则加入选项中 if (mCommList == null || mCommList.size() &lt; 1) &#123; ShowUtils.warningMessage(&quot;没有搜索到有效串口！&quot;); &#125; else &#123; for (String s : mCommList) &#123; mCommChoice.addItem(s); &#125; &#125; mBaudrateChoice.addItem(&quot;9600&quot;); mBaudrateChoice.addItem(&quot;19200&quot;); mBaudrateChoice.addItem(&quot;38400&quot;); mBaudrateChoice.addItem(&quot;57600&quot;); mBaudrateChoice.addItem(&quot;115200&quot;); &#125; /** * 按钮监听事件 */ private void actionListener() &#123; // 串口 mCommChoice.addPopupMenuListener(new PopupMenuListener() &#123; @Override public void popupMenuWillBecomeVisible(PopupMenuEvent e) &#123; mCommList = SerialPortManager.findPorts(); // 检查是否有可用串口，有则加入选项中 if (mCommList == null || mCommList.size() &lt; 1) &#123; ShowUtils.warningMessage(&quot;没有搜索到有效串口！&quot;); &#125; else &#123; int index = mCommChoice.getSelectedIndex(); mCommChoice.removeAllItems(); for (String s : mCommList) &#123; mCommChoice.addItem(s); &#125; mCommChoice.setSelectedIndex(index); &#125; &#125; @Override public void popupMenuWillBecomeInvisible(PopupMenuEvent e) &#123; // NO OP &#125; @Override public void popupMenuCanceled(PopupMenuEvent e) &#123; // NO OP &#125; &#125;); // 打开|关闭串口 mSerialPortOperate.addActionListener(new ActionListener() &#123; @Override public void actionPerformed(ActionEvent e) &#123; if (&quot;打开串口&quot;.equals(mSerialPortOperate.getText()) &amp;&amp; mSerialport == null) &#123; openSerialPort(e); &#125; else &#123; closeSerialPort(e); &#125; &#125; &#125;); // 发送数据 mSendData.addActionListener(new ActionListener() &#123; @Override public void actionPerformed(ActionEvent e) &#123; sendData(e); &#125; &#125;); &#125; /** * 打开串口 * * @param evt 点击事件 */ private void openSerialPort(ActionEvent evt) &#123; // 获取串口名称 String commName = (String) mCommChoice.getSelectedItem(); // 获取波特率，默认为9600 int baudrate = 9600; String bps = (String) mBaudrateChoice.getSelectedItem(); baudrate = Integer.parseInt(bps); // 检查串口名称是否获取正确 if (commName == null || commName.equals(&quot;&quot;)) &#123; ShowUtils.warningMessage(&quot;没有搜索到有效串口！&quot;); &#125; else &#123; try &#123; mSerialport = SerialPortManager.openPort(commName, baudrate); if (mSerialport != null) &#123; mDataView.setText(&quot;串口已打开&quot; + &quot;\\r\\n&quot;); mSerialPortOperate.setText(&quot;关闭串口&quot;); &#125; &#125; catch (PortInUseException e) &#123; ShowUtils.warningMessage(&quot;串口已被占用！&quot;); &#125; &#125; // 添加串口监听 SerialPortManager.addListener(mSerialport, new SerialPortManager.DataAvailableListener() &#123; @Override public void dataAvailable() &#123; byte[] data = null; try &#123; if (mSerialport == null) &#123; ShowUtils.errorMessage(&quot;串口对象为空，监听失败！&quot;); &#125; else &#123; // 读取串口数据 data = SerialPortManager.readFromPort(mSerialport); // 以字符串的形式接收数据 if (mDataASCIIChoice.isSelected()) &#123; mDataView.append(new String(data) + &quot;\\r\\n&quot;); &#125; // 以十六进制的形式接收数据 if (mDataHexChoice.isSelected()) &#123; mDataView.append(ByteUtils.byteArrayToHexString(data) + &quot;\\r\\n&quot;); &#125; &#125; &#125; catch (Exception e) &#123; ShowUtils.errorMessage(e.toString()); // 发生读取错误时显示错误信息后退出系统 System.exit(0); &#125; &#125; &#125;); &#125; /** * 关闭串口 * * @param evt 点击事件 */ private void closeSerialPort(ActionEvent evt) &#123; SerialPortManager.closePort(mSerialport); mDataView.setText(&quot;串口已关闭&quot; + &quot;\\r\\n&quot;); mSerialPortOperate.setText(&quot;打开串口&quot;); mSerialport = null; &#125; /** * 发送数据 * * @param evt 点击事件 */ private void sendData(ActionEvent evt) &#123; // 待发送数据 String data = mDataInput.getText().toString(); if (mSerialport == null) &#123; ShowUtils.warningMessage(&quot;请先打开串口！&quot;); return; &#125; if (&quot;&quot;.equals(data) || data == null) &#123; ShowUtils.warningMessage(&quot;请输入要发送的数据！&quot;); return; &#125; // 以字符串的形式发送数据 if (mDataASCIIChoice.isSelected()) &#123; SerialPortManager.sendToPort(mSerialport, data.getBytes()); &#125; // 以十六进制的形式发送数据 if (mDataHexChoice.isSelected()) &#123; SerialPortManager.sendToPort(mSerialport, ByteUtils.hexStr2Byte(data)); &#125; &#125; public static void main(String args[]) &#123; &#125; &#125;ArrayUtilspackage cn.sh.cares.serialport.utils; /** * 数组工具 * */ public class ArrayUtils &#123; /** * 合并数组 * * @param firstArray 第一个数组 * @param secondArray 第二个数组 * @return 合并后的数组 */ public static byte[] concat(byte[] firstArray, byte[] secondArray) &#123; if (firstArray == null || secondArray == null) &#123; return null; &#125; byte[] bytes = new byte[firstArray.length + secondArray.length]; System.arraycopy(firstArray, 0, bytes, 0, firstArray.length); System.arraycopy(secondArray, 0, bytes, firstArray.length, secondArray.length); return bytes; &#125; &#125; ByteUtilspackage cn.sh.cares.serialport.utils; import java.nio.ByteBuffer; import java.util.Locale; /** * Byte转换工具 * */ public class ByteUtils &#123; /** * 十六进制字符串转byte[] * * @param hex 十六进制字符串 * @return byte[] */ public static byte[] hexStr2Byte(String hex) &#123; if (hex == null) &#123; return new byte[]&#123;&#125;; &#125; // 奇数位补0 if (hex.length() % 2 != 0) &#123; hex = &quot;0&quot; + hex; &#125; int length = hex.length(); ByteBuffer buffer = ByteBuffer.allocate(length / 2); for (int i = 0; i &lt; length; i++) &#123; String hexStr = hex.charAt(i) + &quot;&quot;; i++; hexStr += hex.charAt(i); byte b = (byte) Integer.parseInt(hexStr, 16); buffer.put(b); &#125; return buffer.array(); &#125; /** * byte[]转十六进制字符串 * * @param array byte[] * @return 十六进制字符串 */ public static String byteArrayToHexString(byte[] array) &#123; if (array == null) &#123; return &quot;&quot;; &#125; StringBuffer buffer = new StringBuffer(); for (int i = 0; i &lt; array.length; i++) &#123; buffer.append(byteToHex(array[i])); &#125; return buffer.toString(); &#125; /** * byte转十六进制字符 * * @param b byte * @return 十六进制字符 */ public static String byteToHex(byte b) &#123; String hex = Integer.toHexString(b &amp; 0xFF); if (hex.length() == 1) &#123; hex = &#39;0&#39; + hex; &#125; return hex.toUpperCase(Locale.getDefault()); &#125; &#125; ShowUtilspackage cn.sh.cares.serialport.utils; import javax.swing.JOptionPane; /** * 提示框 */ public class ShowUtils &#123; /** * 消息提示 * * @param message 消息内容 */ public static void message(String message) &#123; JOptionPane.showMessageDialog(null, message); &#125; /** * 警告消息提示 * * @param message 消息内容 */ public static void warningMessage(String message) &#123; JOptionPane.showMessageDialog(null, message, &quot;警告&quot;, JOptionPane.WARNING_MESSAGE); &#125; /** * 错误消息提示 * * @param message 消息内容 */ public static void errorMessage(String message) &#123; JOptionPane.showMessageDialog(null, message, &quot;错误&quot;, JOptionPane.ERROR_MESSAGE); &#125; /** * 自定义的消息提示 * * @param title 标题 * @param message 消息内容 */ public static void plainMessage(String title, String message) &#123; JOptionPane.showMessageDialog(null, message, title, JOptionPane.PLAIN_MESSAGE); &#125; /** * 带有选择功能的提示 * * @param title 标题 * @param message 消息内容 * @return 是/否 0/1 */ public static boolean selectMessage(String title, String message) &#123; int isConfirm = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION); if (0 == isConfirm) &#123; return true; &#125; return false; &#125; &#125; SerialportApplicationpackage cn.sh.cares.serialport; import cn.sh.cares.serialport.ui.MainFrame; import org.springframework.boot.WebApplicationType; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.boot.builder.SpringApplicationBuilder; @SpringBootApplication public class SerialportApplication &#123; public static void main(String[] args) &#123; SpringApplicationBuilder builder = new SpringApplicationBuilder(SerialportApplication.class); builder.headless(false).web(WebApplicationType.NONE).run(args); java.awt.EventQueue.invokeLater(() -&gt; new MainFrame().setVisible(true)); &#125; &#125; 运行 代码库https://github.com/cjwangd/serialport","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"图形","slug":"图形","permalink":"http://wangcj.com.cn/tags/%E5%9B%BE%E5%BD%A2/"},{"name":"串口通信","slug":"串口通信","permalink":"http://wangcj.com.cn/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"}],"author":"王长金"},{"title":"ORACLE 快速删除重复数据","slug":"ORACLE-快速删除重复数据","date":"2020-08-26T06:42:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/26/ORACLE-快速删除重复数据/","link":"","permalink":"http://wangcj.com.cn/2020/08/26/ORACLE-%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/","excerpt":"","text":"创建临时表create table pic_temp as select b.scs_id,b.rowid as dataid from ods_smis_scs_pic b where b.rowid not in (select MAX(a.ROWID) dataid from ods_smis_scs_pic a GROUP BY a.scs_id); 删除重复数据delete from ods_smis_scs_pic a where a.rowid in (select b.dataid from pic_temp b); commit; 删除临时表drop table pic_temp","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"oracle","slug":"oracle","permalink":"http://wangcj.com.cn/tags/oracle/"},{"name":"快速删除重复数据","slug":"快速删除重复数据","permalink":"http://wangcj.com.cn/tags/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/"}],"author":"王长金"},{"title":"Fabric 2.2.0 测试环境安装","slug":"Fabric-2-2-0-测试环境安装","date":"2020-08-25T05:59:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/25/Fabric-2-2-0-测试环境安装/","link":"","permalink":"http://wangcj.com.cn/2020/08/25/Fabric-2-2-0-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/","excerpt":"","text":"安装过程最好有翻墙软件，会节省很多时间 安装前置软件yum install git yum install golang 下载安装脚本mkdir fabric &amp;&amp; cd fabric wget https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh chmod +x bootstrap.sh ./bootstrap.sh脚本会下载2.2.0版本的fabric镜像，二进制文件和样例代码 启动测试网络设置golang模块下载代理go env -w GOPROXY=https://goproxy.cn,direct启动网络cd ~/fabric/fabric-samples/test-network ./network.sh up创建通道./network.sh createChannel 部署链码./network.sh deployCC Org1 调用链码cd ~/fabric/fabric-samples/test-network export PATH=$&#123;PWD&#125;/../bin:$PATH export FABRIC_CFG_PATH=$PWD/../config/ export CORE_PEER_TLS_ENABLED=true export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot; export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp export CORE_PEER_ADDRESS=localhost:7051 peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles $&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles $&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c &#39;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&#39; Org1查询链码peer chaincode query -C mychannel -n basic -c &#39;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&#39;Org1 提交交易peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles $&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles $&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c &#39;&#123;&quot;function&quot;:&quot;TransferAsset&quot;,&quot;Args&quot;:[&quot;asset6&quot;,&quot;Christopher&quot;]&#125;&#39;Org2 查询交易export CORE_PEER_TLS_ENABLED=true export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot; export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp export CORE_PEER_ADDRESS=localhost:9051 peer chaincode query -C mychannel -n basic -c &#39;&#123;&quot;Args&quot;:[&quot;ReadAsset&quot;,&quot;asset6&quot;]&#125;&#39; 区块链浏览器下载镜像docker pull hyperledger/explorer docker pull hyperledger/explorer-db下载、拷贝配置文件 mkdir explorer &amp;&amp; cd explorer wget https://raw.githubusercontent.com/hyperledger/blockchain-explorer/master/examples/net1/config.json wget https://raw.githubusercontent.com/hyperledger/blockchain-explorer/master/examples/net1/connection-profile/first-network.json -P connection-profile wget https://raw.githubusercontent.com/hyperledger/blockchain-explorer/master/docker-compose.yaml cp -r ~/fabric/fabric-samples/test-network/organizations ~/fabric/fabric-samples/ 修改配置文件的卷挂载vi docker-compose.yaml version: &#39;2.1&#39; volumes: pgdata: walletstore: networks: mynetwork.com: external: name: net_test # 此处修改为test_network 启动的网络，使他们在同一个网络 services: explorerdb.mynetwork.com: image: hyperledger/explorer-db:latest container_name: explorerdb.mynetwork.com hostname: explorerdb.mynetwork.com environment: - DATABASE_DATABASE=fabricexplorer - DATABASE_USERNAME=hppoc - DATABASE_PASSWORD=password healthcheck: test: &quot;pg_isready -h localhost -p 5432 -q -U postgres&quot; interval: 30s timeout: 10s retries: 5 volumes: - pgdata:/var/lib/postgresql/data ports: - 5432:5432 #暴露端口 networks: - mynetwork.com explorer.mynetwork.com: image: hyperledger/explorer:latest container_name: explorer.mynetwork.com hostname: explorer.mynetwork.com environment: - DATABASE_HOST=explorerdb.mynetwork.com - DATABASE_DATABASE=fabricexplorer - DATABASE_USERNAME=hppoc - DATABASE_PASSWD=password - LOG_LEVEL_APP=debug - LOG_LEVEL_DB=debug - LOG_LEVEL_CONSOLE=info - LOG_CONSOLE_STDOUT=true - DISCOVERY_AS_LOCALHOST=false volumes: - ./config.json:/opt/explorer/app/platform/fabric/config.json - ./connection-profile:/opt/explorer/app/platform/fabric/connection-profile - ./organizations:/tmp/crypto - walletstore:/opt/wallet command: sh -c &quot;node /opt/explorer/main.js &amp;&amp; tail -f /dev/null&quot; ports: - 8080:8080 depends_on: explorerdb.mynetwork.com: condition: service_healthy networks: - mynetwork.com 启动 区块链浏览器docker-compose up -d打开区块链浏览器 http://192.168.72.129:8080/#/login 输入账户 exploreradmin/exploreradminpw 浏览器","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"fabric","slug":"fabric","permalink":"http://wangcj.com.cn/tags/fabric/"},{"name":"fabric 2.2.0","slug":"fabric-2-2-0","permalink":"http://wangcj.com.cn/tags/fabric-2-2-0/"}],"author":"王长金"},{"title":"NFS共享文件配置","slug":"NFS共享文件配置","date":"2020-08-11T03:05:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/11/NFS共享文件配置/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/NFS%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE/","excerpt":"","text":"（NFS默认都安装了，省去安装）10.10.11.144 文件实际存储位置 10.10.11.141 PC服务器1读取 10.10.11.142 PC服务器2读取 10.10.11.144 配置步骤 mkdir -p /home/pc_data_share Chmod 666 /home/pc_data_share vi /etc/exports /home/pc_data_share 10.10.11.0/24(rw,sync,insecure,no_subtree_check,no_root_squash)systemctl start rpcbind.service systemctl start nfs.service showmount -e localhost10.10.11.141和10.10.11.142配置步骤 showmount -e 10.10.11.144 mkdir /home/share mount 10.10.11.144:/home/pc_data_share /home/share df -kh /home/share 配置开机自动挂载 vi /etc/fstab 10.10.11.144:/home/pc_data_share /home/share nfs defaults,_rnetdev 1 1","categories":[{"name":"linux","slug":"linux","permalink":"http://wangcj.com.cn/categories/linux/"}],"tags":[{"name":"NFS","slug":"NFS","permalink":"http://wangcj.com.cn/tags/NFS/"}],"author":"王长金"},{"title":"ANGULAR4 多TAB页实现","slug":"ANGULAR4-多TAB页实现","date":"2020-08-11T02:56:00.000Z","updated":"2021-01-06T13:10:40.000Z","comments":true,"path":"2020/08/11/ANGULAR4-多TAB页实现/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/ANGULAR4-%E5%A4%9ATAB%E9%A1%B5%E5%AE%9E%E7%8E%B0/","excerpt":"","text":"1、背景：本来angular，vue，react是专门做单页应用的，奈何客户觉得单页面不行要传统的多tab 2、现状：项目已经基于多模块和嵌套路由完成 3、实现思路：1、路由复用策略。2、路由结合动态组件 3.1 最先尝试的路由复用策略，此方案最终被放弃 1、首先是路由复用策略不是很稳定的一个特性 2、路由复用和模块懒加载有冲突 3、最主要的路由复用的页面如果嵌入了iframe，那么每次打开该页面iframe都会重新加载，这不是客户希望看到的结果。3.2 路由结合动态组件 项目已经是基于路由，只需稍稍改动就行 1、新增一个多tab组件，具体tab实现采用阿里ng-zorro，封装一下 &lt;div class=&quot;dsptab&quot; #dsptabs&gt; &lt;p-contextMenu [model]=&quot;items&quot; class=&quot;tree-context-menu-tab&quot;&gt;&lt;/p-contextMenu&gt; &lt;nz-tabset [nzType]=&quot;&#39;card&#39;&quot; [nzAnimated]=&quot;true&quot; [nzSelectedIndex]=&quot;currentIndex&quot; (nzSelectChange)=&quot;nzSelectChange($event)&quot; &gt; &lt;nz-tab *ngFor=&quot;let tab of menuList; let idx=index&quot; &gt; &lt;ng-template #nzTabHeading&gt; &lt;div class=&quot;dsp-anticon&quot; (contextmenu)=&quot;contextmenu($event)&quot;&gt; &#123;&#123;tab.title&#125;&#125; &lt;i *ngIf=&quot;tab.close&quot; class=&quot;fa fa-times&quot; (click)=&quot;closeUrl(tab.url)&quot;&gt;&lt;/i&gt; &lt;/div&gt; &lt;/ng-template&gt; &lt;ng-container *ngComponentOutlet=&quot;tab.component&quot;&gt;&lt;/ng-container&gt; &lt;/nz-tab&gt; &lt;/nz-tabset&gt; &lt;/div&gt; import &#123;AfterViewChecked, Component, HostListener, Injector, OnInit, ReflectiveInjector, ViewChild&#125; from &#39;@angular/core&#39;; import &#123;ActivatedRoute, NavigationEnd, Router&#125; from &#39;@angular/router&#39;; import &#123;Title&#125; from &#39;@angular/platform-browser&#39;; import &#123;PagesService&#125; from &#39;../../pages.service&#39;; import &#39;rxjs/add/operator/filter&#39;; import &#39;rxjs/add/operator/map&#39;; import &#39;rxjs/add/operator/mergeMap&#39;; import &#123;API_URL&#125; from &#39;../../pages.const&#39;; import &#123;ContextMenu&#125; from &#39;primeng/components/contextmenu/contextmenu&#39;; @Component(&#123; selector: &#39;app-multi-tabs&#39;, templateUrl: &#39;./multi-tabs.component.html&#39;, styleUrls: [&#39;./multi-tabs.component.css&#39;] &#125;) export class MultiTabsComponent implements OnInit, AfterViewChecked &#123; private apiUrl: string = API_URL; @ViewChild(ContextMenu)contexMenu: ContextMenu; // 路由列表 menuList = []; // 当前选择的tab index currentIndex: number = -1; items = []; constructor(private router: Router, private inj: Injector, private pagesService: PagesService, private activatedRoute: ActivatedRoute, private titleService: Title) &#123; // 路由事件 this.router.events.filter(event =&gt; event instanceof NavigationEnd) .map(() =&gt; this.activatedRoute) .map(route =&gt; &#123; while (route.firstChild) &#123; route = route.firstChild; &#125; return route; &#125;) .filter(route =&gt; route.outlet === &#39;primary&#39;) .subscribe((event) =&gt; &#123; this.pagesService.hideMask(); const menu: any = &#123;&#125;; const title = event.queryParams[&#39;value&#39;].title; const component = event.component; menu.title = title; menu.url = this.router.url; menu.data = event.params[&#39;_value&#39;]; if (title !== &#39;首页&#39;) &#123; menu.close = true; &#125; menu.component = component; if ( (!this.menuList || this.menuList.length === 0) &amp;&amp; title !== &#39;首页&#39; ) &#123; this.router.navigate([&#39;/pages/monitor/welcome&#39;], &#123;queryParams: &#123;title: &#39;首页&#39;&#125;&#125;); return; &#125; if ( /\\/pages\\/leaderView\\/*/.test(this.router.url) ) &#123; const url = this.apiUrl + &#39;reportUrlManager/getUrl?URLCode=&#39; + menu.data.page + &#39;&amp;timeStamp=&#39; + (new Date()).getTime(); window.open(url, &#39;_blank&#39;); const cm = this.menuList[this.currentIndex]; return; &#125; if (title &amp;&amp; component) &#123; const idx = this.menuList.findIndex(value =&gt; value.url === menu.url); if (idx &gt;= 0) &#123; this.currentIndex = idx; &#125;else &#123; this.menuList.push(menu); this.currentIndex = this.menuList.length - 1; &#125; &#125; &#125;); &#125; ngOnInit(): void &#123; this.items = [ &#123;label: &#39;关闭所有&#39;, icon: &#39;fa-window-close&#39;, command: (event) =&gt; this.closeAllTab()&#125;, &#123;label: &#39;关闭当前&#39;, icon: &#39;fa-remove&#39;, command: (event) =&gt; this.closeCurrTab()&#125; ]; &#125; closeAllTab() &#123; this.currentIndex = 0; this.menuList.forEach(value =&gt; &#123; if (value.title !== &#39;首页&#39;) &#123; &#125; &#125;); this.menuList.splice(1); const menu = this.menuList[0]; this.router.navigate([menu.url.split(&#39;?&#39;)[0]], &#123;queryParams: &#123;title: menu.title&#125;&#125;); &#125; closeCurrTab() &#123; const tab = this.menuList[this.currentIndex]; if (tab.title !== &#39;首页&#39;) &#123; this.closeUrl(tab.url); &#125; &#125; createInjector(tab) &#123; if (!tab.data) &#123; return null; &#125; const inputProviders = Object.keys(tab.data).map( (inputName) =&gt; &#123; return &#123; provide: inputName, useValue: tab.data[inputName] &#125;; &#125;); const resolvedInputs = ReflectiveInjector.resolve(inputProviders); const injector = ReflectiveInjector.resolve(inputProviders); return injector; &#125; // 关闭选项标签 closeUrl(tab: any) &#123; // 当前关闭的是第几个路由 const index = this.menuList.findIndex(p =&gt; p.url === tab); // 如果只有一个不可以关闭 if (this.menuList.length === 1) &#123; return; &#125; this.menuList.splice(index, 1); // 如果当前删除的对象是当前选中的，那么需要跳转 if (this.currentIndex === index) &#123; // 显示上一个选中 let menu = this.menuList[index - 1]; if (!menu) &#123;// 如果上一个没有下一个选中 menu = this.menuList[index]; &#125; &#125; &#125; /** * tab发生改变 */ nzSelectChange(e) &#123; if (e.tab) &#123; this.currentIndex = e.index; const menu = this.menuList[this.currentIndex]; this.router.navigateByUrl(menu.url); &#125; &#125; ngAfterViewChecked(): void &#123; &#125; contextmenu(event) &#123; event.preventDefault(); this.contexMenu.toggle(event); &#125; @HostListener(&#39;contextmenu&#39;, [&#39;$event&#39;]) ban(event) &#123;&#125; &#125;4、将封装的组件放入内容展示区 &lt;ba-sidebar&gt;&lt;/ba-sidebar&gt; &lt;ba-page-top&gt;&lt;/ba-page-top&gt; &lt;div class=&quot;al-main&quot; [ngClass]=&quot;&#123;&#39;collapsed&#39;:!_sideIsCollapsed&#125;&quot;&gt; &lt;div class=&quot;al-content&quot;&gt; &lt;app-multi-tabs&gt; &lt;router-outlet&gt;&lt;/router-outlet&gt; &lt;/app-multi-tabs&gt; &lt;/div&gt; &lt;/div&gt; 5、在内容展示区所在模块引入各个子模块，在各个子模块中将视图组件（即完整的页面组件）放入该子模块的entryComponents 6、按以上步骤修改其他子模块，修改完成完美实现 angular 多窗口 ，iframe也不会每次刷新","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"angular4","slug":"angular4","permalink":"http://wangcj.com.cn/tags/angular4/"},{"name":"多tab","slug":"多tab","permalink":"http://wangcj.com.cn/tags/%E5%A4%9Atab/"}],"author":"王长金"},{"title":"RaphaelJs 2.x 路径动画","slug":"RaphaelJs-2-x-路径动画","date":"2020-08-11T02:52:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/11/RaphaelJs-2-x-路径动画/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/RaphaelJs-2-x-%E8%B7%AF%E5%BE%84%E5%8A%A8%E7%94%BB/","excerpt":"","text":"1、做的监控页面需要动画展示数据通道是否畅通，之前手写svg，发现无法加载同一个图片，转向RaphaelJs ，但是RaphaelJs 2.x 不提供AnimateAlong函数 2、定义一个自定义属性 progress paper.customAttributes.progress = function (v) &#123; var path = this.data(&quot;mypath&quot;), attrs = this.attr(), offset = &#123; x: 0, y: 0 &#125;; if (!path) &#123; return &#123; transform: &quot;t0,0r0&quot; &#125;; &#125; var startPoint = path.getPointAtLength(0); if (attrs.hasOwnProperty(&quot;width&quot;)) &#123; offset.x = -this.attr(&quot;width&quot;) / 2; offset.y = -this.attr(&quot;height&quot;) / 2; &#125; var bbox = this.getBBox(); var len = path.getTotalLength(); var point = path.getPointAtLength(v * len); if (v * len == len) &#123; return &#123; transform: &quot;&quot; &#125; &#125;else &#123; var deg=0; if (point.y &gt; startPoint.y) &#123; deg = startPoint.alpha - point.alpha; &#125;else&#123; deg = point.alpha - startPoint.alpha; &#125; return &#123; transform: &quot;t&quot; + (point.x + offset.x - startPoint.x -bbox.width/2 ) + &quot;,&quot; + (point.y + offset.y - startPoint.y ) + &quot;r&quot; + deg &#125;; &#125; &#125;;3、设置元素动画 var arrow = paper.path(&quot;M344,&quot;+((detaInH+unitHeight)/2+i*itemH-3)+&quot;L350,&quot;+((detaInH+unitHeight)/2+i*itemH)+&quot;L344,&quot;+((detaInH+unitHeight)/2+i*itemH+3)+&quot;Z&quot;); arrow.attr(&#123;&#39;stroke&#39;:&#39;#49FF05&#39;,&#39;stroke-width&#39;:&#39;1px&#39;,&#39;fill&#39;:&#39;#49FF05&#39;&#125;); arrow.data(&quot;mypath&quot;, inSystemLine[i]); arrow.attr(&quot;progress&quot;, 0); var animation = Raphael.animation(&#123; progress: 1 &#125;, 10000,&#39;&lt;&gt;&#39;); arrow.animate(animation.repeat(&#39;Infinity&#39;));inSystemLine[i] 是运动路径","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"SVG","slug":"SVG","permalink":"http://wangcj.com.cn/tags/SVG/"},{"name":"动画","slug":"动画","permalink":"http://wangcj.com.cn/tags/%E5%8A%A8%E7%94%BB/"}],"author":"王长金"},{"title":"Angular 1.x 控制台调试","slug":"Angular-1-x-控制台调试","date":"2020-08-11T02:48:00.000Z","updated":"2021-01-06T13:10:40.000Z","comments":true,"path":"2020/08/11/Angular-1-x-控制台调试/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/Angular-1-x-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%B0%83%E8%AF%95/","excerpt":"","text":"1、获取scope var scope = angular.element(selector).scope(); 通过scope变量可以获取controller中的变量和方法2、获取 过滤器 filter，并调用过滤器调用angular自带的date 过滤器 angular.element(&#39;body&#39;).injector(&#39;ng&#39;).invoke(function($rootScope,$log,$filter)&#123; $log.debug($filter(&#39;date&#39;)(new Date(), &#39;yyyy-MM-dd HH:MM:ss&#39;)); &#125;); 要在controller中使用已有的filter,将$filter 服务注入angular.module(&#39;app&#39;,[]).controller(&#39;testCtrl&#39;,function($scope,$filter)&#123; var fmtDate = $filter(&#39;date&#39;)(new Date(), &#39;yyyy-MM-dd HH:MM:ss&#39;); &#125;);3、获取服务 service比如 $http 服务,进行一次请求，打印出请求结果 angular.element(&#39;body&#39;).injector(&#39;ng&#39;).invoke(function($http,$log)&#123; $http.get(&#39;/weibo/getEms&#39;).success(function (data) &#123; $log.info(&quot;data:&quot; + JSON.stringify(data.obj)); &#125;); &#125;); 4、UI router 页面跳转angular.element(&#39;body&#39;).injector(&#39;ng&#39;).invoke(function($state,$log)&#123; $state.go(&#39;/weibo/manager&#39;); &#125;);","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"angularjs","slug":"angularjs","permalink":"http://wangcj.com.cn/tags/angularjs/"},{"name":"调试","slug":"调试","permalink":"http://wangcj.com.cn/tags/%E8%B0%83%E8%AF%95/"}],"author":"王长金"},{"title":"CSS3 父子元素透明问题","slug":"CSS3-父子元素透明问题","date":"2020-08-11T02:46:00.000Z","updated":"2021-01-06T13:10:40.000Z","comments":true,"path":"2020/08/11/CSS3-父子元素透明问题/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/CSS3-%E7%88%B6%E5%AD%90%E5%85%83%E7%B4%A0%E9%80%8F%E6%98%8E%E9%97%AE%E9%A2%98/","excerpt":"","text":"在前端开发中，我们经常使用CSS3 的opacity属性来设置元素的透明度。但是opacity属性在父子元素间设置存在问题。 假如我们给父元素设置 opacity：0.5，子元素不设置opacity，子元素就会受到父元素opacity的影响，也会有0.5的透明度。 即使设置子元素opacity：1，子元素的opacity：1 也是在父元素的opacity：0.5的基础上设置的，因此子元素的opacity还是0.5。 所以给父子间某一元素设置透明度时，我们可以使用这种方法： 为父元素设置background: rgba(0,0,0,0.5)，去掉opacity属性，或者设置为unset","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[],"author":"王长金"},{"title":"HTML 表格打印分页问题","slug":"HTML-表格打印分页问题","date":"2020-08-11T02:43:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/HTML-表格打印分页问题/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/HTML-%E8%A1%A8%E6%A0%BC%E6%89%93%E5%8D%B0%E5%88%86%E9%A1%B5%E9%97%AE%E9%A2%98/","excerpt":"","text":"效果：自动分页，每一页有表头 &lt;body&gt; &lt;div style=&quot;margin:0 auto;width:649px&quot;&gt; &lt;p style=&quot;text-align:center;&quot;&gt; &lt;strong&gt;&lt;span style=&quot;font-size:32px;&quot;&gt;$&#123;checkListName&#125;&lt;/span&gt;&lt;/strong&gt; &lt;/p&gt; &lt;p style=&quot;text-align:center;&quot; &gt; &lt;strong&gt; &lt;span style=&quot;font-size:32px;&quot;&gt; &lt;span style=&quot;font-size:14px;&quot;&gt; &lt;table style=&quot;width:100%;&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; class=&quot;ke-zeroborder&quot;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td style=&quot;width: 150px&quot;&gt; 检查时间： &lt;/td&gt; &lt;td style=&quot;width: 150px&quot;&gt; 检查人： &lt;/td&gt; &lt;td&gt; 被检查单位： &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/span&gt; &lt;/span&gt; &lt;/strong&gt; &lt;/p&gt; &lt;p&gt;备注：检查情况：符合、不符合、不适用&lt;/p&gt; &lt;table style=&quot;width:100%;BORDER-RIGHT:#000000 1px solid; BORDER-TOP:#000000 1px solid; BORDER-LEFT:#000000 1px solid; BORDER-BOTTOM:#000000 1px solid; border-collapse: collapse; WIDTH:100%;&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; bordercolor=&quot;#000000&quot; &gt; &lt;THEAD style=&quot;display:table-header-group;font-weight:bold&quot;&gt; &lt;tr style=&quot;text-align: center;background-color: #F0F0F0&quot;&gt; &lt;td width=&quot;5%&quot;&gt; 序号 &lt;/td&gt; &lt;td width=&quot;5%&quot;&gt; 检查大类 &lt;/td &gt; &lt;td width=&quot;10%&quot;&gt; 检查分项 &lt;/td&gt; &lt;td width=&quot;25%&quot;&gt; 检查子项 &lt;/td&gt; &lt;td width=&quot;25%&quot;&gt; 细化内容 &lt;/td&gt; &lt;td width=&quot;10%&quot;&gt; 检查依据 &lt;/td&gt; &lt;td width=&quot;5%&quot;&gt; 检查方式 &lt;/td&gt; &lt;td width=&quot;15%&quot;&gt; 检查情况 &lt;/td&gt; &lt;/tr&gt; &lt;/THEAD&gt; &lt;tbody style=&quot;font-size: 12px;&quot;&gt; &lt;c:forEach items=&quot;$&#123;results&#125;&quot; var=&quot;item&quot; varStatus=&quot;status&quot;&gt; &lt;tr&gt; &lt;td width=&quot;5%&quot; style=&quot;text-align: center&quot;&gt; $&#123;status.index+1&#125; &lt;/td&gt; &lt;td width=&quot;5%&quot;&gt; $&#123;item.big_type_name&#125; &lt;/td&gt; &lt;td width=&quot;10%&quot;&gt; $&#123;item.classify_item_name&#125; &lt;/td&gt; &lt;td width=&quot;25%&quot;&gt; $&#123;item.subitem_name&#125; &lt;/td&gt; &lt;td width=&quot;25%&quot;&gt; $&#123;item.subitem_detail_name&#125; &lt;/td&gt; &lt;td width=&quot;10%&quot;&gt; $&#123;item.check_detail_rule&#125; &lt;/td&gt; &lt;td width=&quot;5%&quot;&gt; $&#123;item.check_method&#125; &lt;/td&gt; &lt;td width=&quot;15%&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/c:forEach&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/body&gt;","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"打印表格","slug":"打印表格","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8D%B0%E8%A1%A8%E6%A0%BC/"},{"name":"分页","slug":"分页","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E9%A1%B5/"}],"author":"王长金"},{"title":"ExtJS 组件重载","slug":"ExtJS-组件重载","date":"2020-08-11T02:41:48.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/ExtJS-组件重载/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/ExtJS-%E7%BB%84%E4%BB%B6%E9%87%8D%E8%BD%BD/","excerpt":"","text":"ExtJs 日期选择没有清除按钮，增加一个清除按钮 /** * 日期选择增加清除按钮 */ Ext.override(Ext.picker.Date,&#123; onRender : function(container, position) &#123; var me = this; me.clearBtn = new Ext.button.Button(&#123; ownerCt: me, ownerLayout: me.getComponentLayout(), text: &#39;清除&#39;, tooltip: &#39;清除日期&#39;, tooltipType: &#39;title&#39;, handler: me.selectClear, scope: me &#125;); this.clearBtn.ownerCt = this; this.callParent(); var foot = Ext.DomQuery.selectNode(&#39;div.x-datepicker-footer a&#39;, this.el.dom); Ext.core.DomHelper.insertAfter(foot, &#123; tag : &#39;a&#39;, cls:&#39;clearbtn&#39;, style : &#39;border:0px;margin-left:15px;&#39; &#125;, true); this.clearBtn.render(Ext.DomQuery.selectNode(&#39;a.clearbtn&#39;,this.el.dom)); &#125;, selectClear: function () &#123; var me = this, btn = me.clearBtn, handler = me.handler; if (btn &amp;&amp; !btn.disabled) &#123; me.value = &quot;&quot;; me.fireEvent(&#39;select&#39;, me, me.value); if (handler) &#123; handler.call(me.scope || me, me, me.value); &#125; me.onSelect(); &#125; return me; &#125; &#125;) ``` ![upload successful](/images/pasted-136.png) ![upload successful](/images/pasted-137.png)","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[],"author":"王长金"},{"title":"基于token认证的文件下载","slug":"基于token认证的文件下载","date":"2020-08-11T02:39:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/基于token认证的文件下载/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/%E5%9F%BA%E4%BA%8Etoken%E8%AE%A4%E8%AF%81%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/","excerpt":"","text":"1、如果项目是基于cookies的身份认证，不会存在这个问题，如果是前后端分离项目一般是在http头部带token认证，这个时候下载文件会提示401，没有办法下载 2、解决方案：将文件读取为base64返回，在前端生成文件 3、代码 后端： /** * 机号信息模板导出 * @return */ @RequestMapping(&quot;export&quot;) @ResponseBody public JSONObject export(HttpServletRequest request, HttpServletResponse response) throws Exception&#123; JSONObject jsonObject = new JSONObject(); String exportFileName = &quot;民航局机号导入模板&quot;; jsonObject.put(&quot;filename&quot;, exportFileName); ClassPathResource classPathResource = new ClassPathResource(&quot;/excel/airplaneImport.xlsx&quot;); InputStream is = classPathResource.getInputStream(); ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); IOUtils.copy(is, outputStream); jsonObject.put(&quot;fileBase64&quot;, Base64.encodeBase64String(outputStream.toByteArray())); return jsonObject; &#125;前端： b64toBlob(b64Data, contentType, sliceSize) &#123; contentType = contentType || &#39;&#39;; sliceSize = sliceSize || 512; const byteCharacters = atob(b64Data); const byteArrays = []; for (let offset = 0; offset &lt; byteCharacters.length; offset += sliceSize) &#123; const slice = byteCharacters.slice(offset, offset + sliceSize); const byteNumbers = new Array(slice.length); for (let i = 0; i &lt; slice.length; i++) &#123; byteNumbers[i] = slice.charCodeAt(i); &#125; const byteArray = new Uint8Array(byteNumbers); byteArrays.push(byteArray); &#125; const blob = new Blob(byteArrays, &#123;type: contentType&#125;); return blob; &#125; downloadTemplate() &#123; // window.location.href = this.apiUrl + &#39;airplaneinfo/export&#39;; const header = new Headers(); header.set(&#39;Authorization&#39;, this.headers.get(&#39;Authorization&#39;)); header.set(&#39;Accept&#39;, &#39;application/octet-stream&#39;); this.http.get(this.apiUrl + &#39;airplaneinfo/export&#39;, &#123; headers: this.headers &#125;).toPromise().then(response =&gt; &#123; console.log(response); const filename = response.json().filename; const base64file = response.json().fileBase64; const blob = this.b64toBlob(base64file, &#39;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;, 0); const a = document.createElement(&#39;a&#39;); // 转换完成，创建一个a标签用于下载 a.download = filename; a.href = window.URL.createObjectURL(blob); // 转成本地连接到blob文本 a.click(); &#125;); &#125;","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"token文件下载","slug":"token文件下载","permalink":"http://wangcj.com.cn/tags/token%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"}],"author":"王长金"},{"title":"JAVASCRIPT  可变参数","slug":"JAVASCRIPT-可变参数","date":"2020-08-11T02:36:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/JAVASCRIPT-可变参数/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/JAVASCRIPT-%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0/","excerpt":"","text":"在一个函数体内，标识符arguments具有特殊含义.Arguments对象是一个类似数组的对象eg:验证函数参数的正确数目 function f(x, y, z) &#123; if (arguments.length != 3) &#123; throw new Error(&quot;function with &quot; + arguments.length + &quot;arguments, but it expects 3 arguments.&quot;) // now do the actual function &#125; &#125; eg:简单的max函数能接受任意数目的实际参数 function max() &#123; var m = Number.NEGATIVE_INFINITY; for (var i = 0; i &lt; arguments.length; i++) &#123; if (arguments[i] &gt; m) m = arguments[i]; &#125; return m; &#125; var largest = max(1, 100, 92, 8, 5, 108);arguments还定义了callee属性，用来引用当前正在执行的函数eg:计算阶乘的函数 function f(x) &#123; if (x &lt;= 1) return 1; return x * arguments.callee(x - 1); &#125;","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wangcj.com.cn/tags/javascript/"}],"author":"王长金"},{"title":"CSS3技巧：fit-content水平居中","slug":"CSS3技巧：fit-content水平居中","date":"2020-08-11T02:33:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/CSS3技巧：fit-content水平居中/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/CSS3%E6%8A%80%E5%B7%A7%EF%BC%9Afit-content%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD/","excerpt":"","text":"当我们让一个模块水平居中首先想到的肯定是margin:0 auto;有木有？那么今天给大家介绍一个fit-content属性，不知道有没有同学用过，如果用过那么你可以略过这篇文章，没用过的同学就继续了，我也是第一次看到这个属性，之前不知道这个属性更不用说使用了，原来这个CSS属性是用来水平居中的，fit-content是CSS3中给width属性新加的一个属性值,它配合margin可以让我们轻松的实现水平居中的效果;一起来看下代码吧。在不设置宽度，并且元素中含用float:left情况下居中,先看一段代码: &lt;div class=&quot;navbar center&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/&quot;&gt;首页&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/&quot;&gt;关于我们&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/&quot;&gt;产品展示&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/&quot;&gt;客户支持&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/&quot;&gt;联系我们&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; li&#123;float:left&#125; 如此这个导航是不会居中的，当我们通过设置fit-content加上margin来做到居中。 ul&#123; width: -moz-fit-content; width: -webkit-fit-content; width: fit-content; margin: auto;&#125;目前这个属性只支持Chrome和Firefox浏览器，下面是居中的代码: width:-moz-fit-content;width:-webkit-fit-content;","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"css","slug":"css","permalink":"http://wangcj.com.cn/tags/css/"}],"author":"王长金"},{"title":"CSS样式覆盖规则","slug":"CSS样式覆盖规则","date":"2020-08-11T02:26:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/CSS样式覆盖规则/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/CSS%E6%A0%B7%E5%BC%8F%E8%A6%86%E7%9B%96%E8%A7%84%E5%88%99/","excerpt":"","text":"大家都知道CSS的全称叫做“层叠样式表”，但估计很多人都不知道“层叠”二字的含义。其实，“层叠”指的就是样式的覆盖，当一个元素被运用上多种样式，并且出现重名的样式属性时，浏览器必须从中选择一个属性值，这个过程就叫“层叠”。样式覆盖（这种叫法更大众化些）遵循一定的规则，之前我对这个规则一直似懂非懂的，直到这几天看了”CSS: The Missing Manual”，才豁然开朗。下面是我的一些学习笔记。 首先需要明确的是，很多情况都会导致一个元素被运用上多种样式，样式覆盖的规则也需要根据不同的情况来定，具体规则如下。 ### 规则一：由于继承而发生样式冲突时，最近祖先获胜。 CSS的继承机制使得元素可以从包含它的祖先元素中继承样式，考虑下面这种情况： ``` 1 2 3 rule 1 4 5 body {color:black;} 6 p {color:blue;} 7 8 9 10 welcome to gaodayue的网络日志 11 12 ``` strong分别从body和p中继承了color属性，但是由于p在继承树上离strong更近，因此strong中的文字最终继承p的蓝色。 ### 规则二：继承的样式和直接指定的样式冲突时，直接指定的样式获胜。 在上面的例子中，假如还指定了strong元素的样式，如： ``` 1 strong {color:red;} ``` 那么根据规则二，strong中的文字最终显示为红色。 ### 规则三：直接指定的样式发生冲突时，样式权值高者获胜。 样式的权值取决于样式的选择器，权值定义如下表。 CSS选择器 权值 标签选择器 1 类选择器 10 ID选择器 100 内联样式 1000 伪元素(:first-child等) 1 伪类(:link等) 10 可以看到，内联样式的权值&gt;&gt;ID选择器&gt;&gt;类选择器&gt;&gt;标签选择器，除此以外，后代选择器的权值为每项权值之和，比如#nav .current a的权值为100 + 10 + 1 = 111。 ### 规则四：样式权值相同时，后者获胜。 考虑下面这种情况 ``` 1 &lt;pclass=”byline”&gt;Written by &lt;aclass=”email”href=”mailto:jean@cosmofarmer. com”&gt;Jean Graine de Pomme 1 .byline a {color:red;} 2 p .email {color:blue;} ``` “.byline a”与”p .email”都直接指定了上面的a元素，且权值都为11，根据规则四，最终显示蓝色。 由于样式表可以是外部的，也可以是内部的，规则四提醒我们要注意外部样式表引入的顺序（及元素的顺序），以及外部样式表与内部样式表的出现位置。一般来说，内部样式表出现在所有外部样式表的引入之后，一般是在之前。 规则五：!important的样式属性不被覆盖。!important可以看做是万不得已的时候，打破上述四个规则的”金手指”。如果你一定要采用某个样式属性，而不让它被覆盖的，可以在属性值后加上!important，以规则四的例子为例，”.byline a &#123;color:red !important;&#125;”可以强行使链接显示红色。大多数情况下都可以通过其他方式来控制样式的覆盖，不能滥用 !important。","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[],"author":"王长金"},{"title":"悼念日网页改色","slug":"悼念日网页改色","date":"2020-08-11T02:25:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/悼念日网页改色/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/%E6%82%BC%E5%BF%B5%E6%97%A5%E7%BD%91%E9%A1%B5%E6%94%B9%E8%89%B2/","excerpt":"","text":"html &#123; -webkit-filter: grayscale(100%); -moz-filter: grayscale(100%); -ms-filter: grayscale(100%); -o-filter: grayscale(100%); filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1); _filter:none; &#125; ![upload successful](/images/pasted-130.png)","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"悼念","slug":"悼念","permalink":"http://wangcj.com.cn/tags/%E6%82%BC%E5%BF%B5/"}],"author":"王长金"},{"title":"SPRING LDAP 分页查询","slug":"SPRING-LDAP-分页查询","date":"2020-08-11T02:19:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/SPRING-LDAP-分页查询/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPRING-LDAP-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/","excerpt":"","text":"public List&lt;Person&gt; findAll() &#123; List&lt;Person&gt; result = new LinkedList&lt;Person&gt;(); final SearchControls searchControls = new SearchControls(); searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE); final PagedResultsDirContextProcessor processor = new PagedResultsDirContextProcessor(500); return SingleContextSource.doWithSingleContext( ldapTemplate.getContextSource(), new LdapOperationsCallback&lt;List&lt;Person&gt;&gt;() &#123; @Override public List&lt;Person&gt; doWithLdapOperations(LdapOperations operations) &#123; do &#123; List&lt;Person&gt; oneResult = operations.search( &quot;&quot;, &quot;(&amp;(objectclass=person))&quot;, searchControls, new AttributesMapper&lt;Person&gt;() &#123; @Override public Person mapFromAttributes(Attributes attributes) throws NamingException &#123; Person p = new Person(); p.setCn(attributes.get(&quot;cn&quot;)==null?&quot;&quot;:(String) attributes.get(&quot;cn&quot;).get()); p.setCompany(attributes.get(&quot;company&quot;)==null?&quot;&quot;:(String) attributes.get(&quot;company&quot;).get()); p.setDepartment(attributes.get(&quot;department&quot;)==null?&quot;&quot;:(String) attributes.get(&quot;department&quot;).get()); p.setsAMAccountName(attributes.get(&quot;sAMAccountName&quot;)==null?&quot;&quot;:(String) attributes.get(&quot;sAMAccountName&quot;).get()); return p; &#125; &#125;, processor); result.addAll(oneResult); &#125; while(processor.hasMore()); return result; &#125; &#125;,true,true,true); &#125;","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"LDAP","slug":"LDAP","permalink":"http://wangcj.com.cn/tags/LDAP/"},{"name":"分页查询","slug":"分页查询","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"}],"author":"王长金"},{"title":"SPRINGBOOT 分离打包","slug":"SPRINGBOOT-分离打包","date":"2020-08-11T02:11:00.000Z","updated":"2021-04-28T04:26:08.000Z","comments":true,"path":"2020/08/11/SPRINGBOOT-分离打包/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPRINGBOOT-%E5%88%86%E7%A6%BB%E6%89%93%E5%8C%85/","excerpt":"","text":"目标：可执行文件、配置文件、库、静态资源文件分开打包 优点： 1、方便修改配置 2、 方便前后端分离整合（前端工程直接拷贝到resources） 打包&lt;build&gt; &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;/finalName&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;excludes&gt; &lt;exclude&gt;application*.yml&lt;/exclude&gt; &lt;exclude&gt;application*.properties&lt;/exclude&gt; &lt;exclude&gt;bootstrap*.yml&lt;/exclude&gt; &lt;exclude&gt;bootstrap*.properties&lt;/exclude&gt; &lt;/excludes&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;!-- 替换文件中maven properties相关的属性值 --&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;includes&gt; &lt;include&gt;application.yml&lt;/include&gt; &lt;include&gt;application-$&#123;profileActive&#125;.yml&lt;/include&gt; &lt;include&gt;application.properties&lt;/include&gt; &lt;include&gt;application-$&#123;profileActive&#125;.properties&lt;/include&gt; &lt;include&gt;bootstrap.yml&lt;/include&gt; &lt;include&gt;bootstrap-$&#123;profileActive&#125;.yml&lt;/include&gt; &lt;/includes&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;cmd&lt;/directory&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;targetPath&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/&lt;/targetPath&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;nsis&lt;/directory&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;targetPath&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/&lt;/targetPath&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;cardLib&lt;/directory&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;targetPath&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/lib/cardLib&lt;/targetPath&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;faceLib&lt;/directory&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;targetPath&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/lib/faceLib&lt;/targetPath&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt; &lt;configuration&gt; &lt;useDefaultDelimiters&gt;false&lt;/useDefaultDelimiters&gt; &lt;delimiters&gt; &lt;delimiter&gt;$&#123;*&#125;&lt;/delimiter&gt; &lt;/delimiters&gt; &lt;encoding&gt;UTF-8&lt;/encoding&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;!--拷贝第三方依赖文件到指定目录--&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;copy-dependencies&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;copy-dependencies&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;!--target/lib是依赖jar包的输出目录，根据自己喜好配置--&gt; &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/lib&lt;/outputDirectory&gt; &lt;excludeTransitive&gt;false&lt;/excludeTransitive&gt; &lt;stripVersion&gt;false&lt;/stripVersion&gt; &lt;includeScope&gt;runtime&lt;/includeScope&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;copy&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;configuration&gt; &lt;tasks&gt; &lt;copy todir=&quot;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/jre&quot; overwrite=&quot;true&quot; &gt; &lt;fileset dir=&quot;C:\\soft\\Java\\jdk8_64\\jre&quot; /&gt; &lt;/copy&gt; &lt;copy file=&quot;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;.jar&quot; tofile=&quot;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/bin/$&#123;project.artifactId&#125;.jar&quot;&gt;&lt;/copy&gt; &lt;!-- &lt;exec executable=&quot;C:\\NSIS\\Bin\\makensis.exe&quot;&gt; &lt;arg line=&quot;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;/fids.nsi&quot;&gt;&lt;/arg&gt; &lt;/exec&gt;--&gt; &lt;/tasks&gt; &lt;/configuration&gt; &lt;goals&gt; &lt;goal&gt;run&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; 启动命令echo off set cwd=%~dp0 set path=%cwd%\\jre\\bin;%cwd%\\faceLib;%path% cd %cwd% start %cwd%\\jre\\bin\\javaw -Dfile.encoding=UTF-8 -classpath %cwd%lib\\*;%cwd%jre\\lib\\*;%cwd%jre\\lib\\ext\\*;%cwd%bin\\* com.cares.witfids.WitFidsApplication windows 将springboot 打包成exe安装包使用NSIS工具 NSIS 打包脚本 ; Script generated by the HM NIS Edit Script Wizard. ; HM NIS Edit Wizard helper defines !define PRODUCT_NAME &quot;yantai_fids&quot; !define PRODUCT_VERSION &quot;1.0&quot; !define PRODUCT_PUBLISHER &quot;南京研发中心&quot; !define PRODUCT_WEB_SITE &quot;http://www.cares.sh.cn&quot; !define PRODUCT_DIR_REGKEY &quot;Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\start.cmd&quot; !define PRODUCT_UNINST_KEY &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$&#123;PRODUCT_NAME&#125;&quot; !define PRODUCT_UNINST_ROOT_KEY &quot;HKLM&quot; SetCompressor lzma ; MUI 1.67 compatible ------ !include &quot;MUI.nsh&quot; ; MUI Settings !define MUI_ABORTWARNING !define MUI_ICON &quot;fids.ico&quot; !define MUI_UNICON &quot;fids.ico&quot; ; Language Selection Dialog Settings !define MUI_LANGDLL_REGISTRY_ROOT &quot;$&#123;PRODUCT_UNINST_ROOT_KEY&#125;&quot; !define MUI_LANGDLL_REGISTRY_KEY &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; !define MUI_LANGDLL_REGISTRY_VALUENAME &quot;NSIS:Language&quot; ; Welcome page !insertmacro MUI_PAGE_WELCOME ; License page !insertmacro MUI_PAGE_LICENSE &quot;license.txt&quot; ; Directory page !insertmacro MUI_PAGE_DIRECTORY ; Instfiles page !insertmacro MUI_PAGE_INSTFILES ; Finish page !insertmacro MUI_PAGE_FINISH ; Uninstaller pages !insertmacro MUI_UNPAGE_INSTFILES ; Language files !insertmacro MUI_LANGUAGE &quot;SimpChinese&quot; ; Reserve files !insertmacro MUI_RESERVEFILE_INSTALLOPTIONS ; MUI end ------ Name &quot;$&#123;PRODUCT_NAME&#125; $&#123;PRODUCT_VERSION&#125;&quot; OutFile &quot;FidsInstaller.exe&quot; InstallDir &quot;$PROGRAMFILES\\$PRODUCT_NAME&quot; InstallDirRegKey HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; &quot;&quot; ShowInstDetails show ShowUnInstDetails show Function .onInit !insertmacro MUI_LANGDLL_DISPLAY FunctionEnd Section &quot;MainSection&quot; SEC01 SetOutPath &quot;$INSTDIR&quot; SetOverwrite try File &quot;fids.ico&quot; File &quot;license.txt&quot; File &quot;start.cmd&quot; File /r &quot;jre&quot; File /r &quot;lib&quot; File /r &quot;bin&quot; CreateDirectory &quot;$SMPROGRAMS\\$PRODUCT_NAME&quot; CreateShortCut &quot;$SMPROGRAMS\\$PRODUCT_NAME\\$PRODUCT_NAME.lnk&quot; &quot;$INSTDIR\\start.cmd&quot; &quot;&quot; &quot;$INSTDIR\\fids.ico&quot; CreateShortCut &quot;$DESKTOP\\$PRODUCT_NAME.lnk&quot; &quot;$INSTDIR\\start.cmd&quot; &quot;&quot; &quot;$INSTDIR\\fids.ico&quot; SectionEnd Section -AdditionalIcons WriteIniStr &quot;$INSTDIR\\$&#123;PRODUCT_NAME&#125;.url&quot; &quot;InternetShortcut&quot; &quot;URL&quot; &quot;$&#123;PRODUCT_WEB_SITE&#125;&quot; CreateShortCut &quot;$SMPROGRAMS\\$PRODUCT_NAME\\Website.lnk&quot; &quot;$INSTDIR\\$&#123;PRODUCT_NAME&#125;.url&quot; CreateShortCut &quot;$SMPROGRAMS\\$PRODUCT_NAME\\Uninstall.lnk&quot; &quot;$INSTDIR\\uninst.exe&quot; SectionEnd Section -Post WriteUninstaller &quot;$INSTDIR\\uninst.exe&quot; WriteRegStr HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; &quot;&quot; &quot;$INSTDIR\\start.cmd&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayName&quot; &quot;$(^Name)&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;UninstallString&quot; &quot;$INSTDIR\\uninst.exe&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayIcon&quot; &quot;$INSTDIR\\fids.ico&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;DisplayVersion&quot; &quot;$&#123;PRODUCT_VERSION&#125;&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;URLInfoAbout&quot; &quot;$&#123;PRODUCT_WEB_SITE&#125;&quot; WriteRegStr $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; &quot;Publisher&quot; &quot;$&#123;PRODUCT_PUBLISHER&#125;&quot; WriteRegStr HKCU &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot; &quot;ytFidsClient&quot; &quot;$INSTDIR\\start.cmd&quot; SectionEnd Function un.onUninstSuccess HideWindow MessageBox MB_ICONINFORMATION|MB_OK &quot;$(^Name) 已成功地从你的计算机移除。&quot; FunctionEnd Function un.onInit !insertmacro MUI_UNGETLANGUAGE MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 &quot;你确实要完全移除 $(^Name) ，其及所有的组件？&quot; IDYES +2 Abort FunctionEnd Section Uninstall Delete &quot;$SMPROGRAMS\\$PRODUCT_NAME\\Uninstall.lnk&quot; Delete &quot;$SMPROGRAMS\\$PRODUCT_NAME\\Website.lnk&quot; Delete &quot;$DESKTOP\\$PRODUCT_NAME.lnk&quot; Delete &quot;$SMPROGRAMS\\$PRODUCT_NAME\\$PRODUCT_NAME.lnk&quot; RMDir &quot;$SMPROGRAMS\\$PRODUCT_NAME&quot; RMDir /r /REBOOTOK $INSTDIR DeleteRegValue HKCU &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot; &quot;ytFidsClient&quot; DeleteRegKey $&#123;PRODUCT_UNINST_ROOT_KEY&#125; &quot;$&#123;PRODUCT_UNINST_KEY&#125;&quot; DeleteRegKey HKLM &quot;$&#123;PRODUCT_DIR_REGKEY&#125;&quot; SetAutoClose true SectionEnd linux 将springboot 打包成rpm 安装包待续。。。","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8C%85/"}],"author":"王长金"},{"title":"SPRINGBOOT 全局错误处理","slug":"SPRINGBOOT-全局错误处理","date":"2020-08-11T02:08:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/SPRINGBOOT-全局错误处理/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPRINGBOOT-%E5%85%A8%E5%B1%80%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","excerpt":"","text":"package com.cares.mqconnector.controller; import com.cares.configManager.common.constants.MqMessageConstant; import com.cares.configManager.core.message.MqMessage; import com.cares.configManager.core.message.MqMessageBody; import com.cares.configManager.core.message.MqMessageHeader; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.amqp.core.MessageProperties; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.autoconfigure.web.ServerProperties; import org.springframework.boot.context.properties.EnableConfigurationProperties; import org.springframework.boot.web.servlet.error.ErrorController; import org.springframework.http.HttpStatus; import org.springframework.http.MediaType; import org.springframework.oxm.Marshaller; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.ResponseBody; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import javax.xml.transform.stream.StreamResult; import java.io.ByteArrayOutputStream; import java.io.IOException; import java.util.Date; @Controller @EnableConfigurationProperties(&#123;ServerProperties.class&#125;) public class ErrorHandleController implements ErrorController &#123; private static MqMessageHeader header =new MqMessageHeader();; private static MqMessageBody&lt;Object&gt; body = new MqMessageBody&lt;Object&gt;(); private static MqMessage&lt;Object&gt; msg = new MqMessage&lt;Object&gt;(); private static MessageProperties messageProperties; static &#123; messageProperties = new MessageProperties(); messageProperties.setContentType(MediaType.APPLICATION_XML_VALUE); header.setSendTime(new Date()); body.setSeqNum(&quot;0&quot;); header.setSender(MqMessageConstant.Participate.DATACENTER.getParticipate()); msg.setBody(body); msg.setHeader(header); &#125; private Logger logger = LoggerFactory.getLogger(ErrorHandleController.class); @Autowired Marshaller marshaller; @Override public String getErrorPath() &#123; return null; &#125; @RequestMapping(value = &quot;error&quot;,produces = MediaType.APPLICATION_XML_VALUE) @ResponseBody public String errorHtml404(HttpServletRequest request, HttpServletResponse response) &#123; HttpStatus httpStatus = getStatus(request); if (HttpStatus.NOT_FOUND.equals(httpStatus)) &#123; body.setStatus(MqMessageConstant.MqMessageStatus.REJECT.getStatus()); &#125; else &#123; body.setStatus(MqMessageConstant.MqMessageStatus.UNAVAILABLE.getStatus()); &#125; ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); try &#123; marshaller.marshal(msg, new StreamResult(byteArrayOutputStream)); &#125; catch (IOException e) &#123; e.printStackTrace(); return &quot;&quot; ; &#125; return new String(byteArrayOutputStream.toByteArray()); &#125; private HttpStatus getStatus(HttpServletRequest request) &#123; Integer statusCode = (Integer) request .getAttribute(&quot;javax.servlet.error.status_code&quot;); if (statusCode == null) &#123; return HttpStatus.INTERNAL_SERVER_ERROR; &#125; try &#123; return HttpStatus.valueOf(statusCode); &#125; catch (Exception ex) &#123; return HttpStatus.INTERNAL_SERVER_ERROR; &#125; &#125; &#125;","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"错误处理","slug":"错误处理","permalink":"http://wangcj.com.cn/tags/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"}],"author":"王长金"},{"title":"SPRING BOOT 报ZIP64 entry not support","slug":"SPRING-BOOT-报ZIP64-entry-not-support","date":"2020-08-11T02:05:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/11/SPRING-BOOT-报ZIP64-entry-not-support/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPRING-BOOT-%E6%8A%A5ZIP64-entry-not-support/","excerpt":"","text":"1.工程打成jar，结果执行不起来，在IDEA能正常运行。百度一番，没有结果，好像spring boot loader不支持zip64 2.只能围绕IDEA能正常运行做文章了 3.首先将工程打成库、配置、资源分离的 形式 E:\\IDEA_WORKSPACE\\DCS\\MQ-CONNECTOR\\TARGET\\MQ-CONNECTOR├─bin│ └─com│ └─cares│ └─mqconnector│ ├─common│ ├─config│ ├─constants│ ├─controller│ ├─enums│ ├─exception│ ├─services│ │ └─impl│ └─utils├─config├─lib├─logs└─resources ├─static │ └─lib │ ├─axios │ └─layui │ ├─css │ │ └─modules │ │ ├─laydate │ │ │ └─default │ │ └─layer │ │ └─default │ ├─font │ ├─images │ │ └─face │ └─lay │ └─modules └─templates 4.编写启动脚本 @echo off set CURRENT_DIR=%cd% cd .. set MQOSBAPP_HOME=%cd% set MQOSBAPP_CLASSPATH=%MQOSBAPP_HOME%/lib/*;%MQOSBAPP_HOME%/config;%MQOSBAPP_HOME%/resources;%MQOSBAPP_HOME%/bin;%JAVA_HOME%/lib/* echo %MQOSBAPP_HOME% echo %MQOSBAPP_CLASSPATH% java -classpath %MQOSBAPP_CLASSPATH% com.cares.mqconnector.MqConnectorApplication 5 点击启动脚本，程序能跑了","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8C%85/"},{"name":"ZIP64","slug":"ZIP64","permalink":"http://wangcj.com.cn/tags/ZIP64/"}],"author":"王长金"},{"title":"Thymeleaf 总结","slug":"Thymeleaf-总结","date":"2020-08-11T01:39:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/Thymeleaf-总结/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/Thymeleaf-%E6%80%BB%E7%BB%93/","excerpt":"","text":"1、配置spring.thymeleaf.cache=false spring.thymeleaf.enable-spring-el-compiler=true&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt; &lt;/dependency&gt;2、js变量赋值其中script 标签type 要替换为 th:inline=”javascript”,替换变量双重中括号[[spel表达式]] &lt;script th:inline=&quot;javascript&quot;&gt; //前台调用时传过来的参数 var menuclick = [[$&#123;param.menu&#125;]]; var specialtext = [[$&#123;specialtext&#125;]]; var index = [[$&#123;index&#125;]]; //前台系统配置调用首页，其他的不调用首页 type=homePage var type = [[$&#123;type&#125;]]; var xx= [[$&#123;session.LOGIN_USER_NAME&#125;]]; if(&#39;null&#39;==xx)&#123; window.location.href = &quot;./&quot;; &#125; setLocalUser(); function userModifyOp()&#123; cares.loadModule(&#39;userModify&#39;, &#39;个人信息&#39;, &#39;userManagement/userModify.js&#39;,[[$&#123;session.LOGIN_USER_NAME.usrId&#125;]]); &#125; function jumpHome()&#123; window.location.href=&quot;index/index.jsp&quot;; &#125; &lt;/script&gt;3、设置标签动态属性th:attr=&quot;id=@&#123;&#39;bpmnModel-&#39;+ $&#123;param.uuid&#125;&#125;&quot;4、 日期格式化&lt;span th:text=&quot;$&#123;#dates.format(curDate, &#39;yyyy-MM-dd HH:mm:ss&#39;)&#125;&quot;&gt;&lt;/span&gt;说明： 使用内置对象dates的format函数即可对日期进行格式化，在format函数中，第一个参数是日期对象，对二两个参数为日期格式（规则跟SimpleDateFormat一样）需要注意的是：· 内置对象一般都以s结尾，如dates、lists、numbers等· 在使用内置对象是在对象名前都需要加#号。 5、数字格式化&lt;span th:text=&quot;$&#123;#numbers.formatDecimal(money, 0, 2)&#125;&quot;&gt;&lt;/span&gt;说明： 此示例表示保留两位小数位，整数位自动； &lt;span th:text=&quot;$&#123;#numbers.formatDecimal(money, 3, 2)&#125;&quot;&gt;&lt;/span&gt;说明： 此示例表示保留两位小数位，3位整数位（不够的前加0） 6、获取列表长度&lt;span th:text=&quot;$&#123;#lists.size(datas)&#125;&quot;&gt;&lt;/span&gt; 说明： 使用#lists.size来获取List的长度。 7、获取URL参数值&lt;span th:text=&quot;$&#123;#httpServletRequest.getParameter(&#39;page&#39;)&#125;&quot;&gt;&lt;/span&gt; 说明： 当访问http://localhost:1105/index?page=5时页面将会得到page对应的值：5。 8、定义变量&lt;div th:with=&quot;curPage=$&#123;#httpServletRequest.getParameter(&#39;page&#39;)&#125;&quot;&gt; &lt;h3&gt;当前页码：&lt;span th:text=&quot;$&#123;curPage&#125;&quot;&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/div&gt;说明： 同样，当访问http://localhost:1105/index?page=5时，页面将显示：当前页码：5，说明用th:with来定义变量，多个用,号隔开，使用范围在当前标签内。 9、自定义标签属性在Thymeleaf中可以使用th:加上标签的任何属性进行赋值，但有些时候会遇到自定义的属性，再用th:加自定义的属性则会无效。比如：需要对标签增加objName和objId这样的属性，在非Thymeleaf情况下是这样： &lt;span objId=&quot;1&quot; objName=&quot;知识林&quot;&gt;&lt;/span&gt;变量情况是： &lt;span objId=&quot;$&#123;obj.id&#125;&quot; objName=&quot;$&#123;obj.name&#125;&quot;&gt;&lt;/span&gt;在Thymeleaf下则是： &lt;span th:attr=&quot;myDate=$&#123;#dates.format(curDate, &#39;yyyy-mm-dd&#39;)&#125;, myMoney=$&#123;money&#125;&quot;&gt;&lt;/span&gt;说明：在页面上查看源代码可以看到： &lt;span myMoney=&quot;91.6059494319957&quot; myDate=&quot;2016-31-02&quot;&gt;&lt;/span&gt; 说明自定义属性用：th:attr，多个属性用,隔开。 10、内置对象上面简单描述了比较常用的dates、lists、numbers这几个内置对象，在Thymeleaf还有很多的内置对象，像strings也非常常用，用法跟java.lang.String类的用法一样。在Thymeleaf中的内置对象有： #dates：日期格式化内置对象，具体方法可以参照java.util.Date #calendars：类似于#dates，但是是java.util.Calendar类的方法； #numbers： 数字格式化； #strings：字符串格式化，具体方法可以参照java.lang.String，如startsWith、contains等； #objects：参照java.lang.Object； #bools：判断boolean类型的工具； #arrays：数组操作的工具； #lists：列表操作的工具，参照java.util.List； #sets：Set操作工具，参照java.util.Set； #maps：Map操作工具，参照java.util.Map； #aggregates：操作数组或集合的工具； #messages：操作消息的工具。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"thymeleaf","slug":"thymeleaf","permalink":"http://wangcj.com.cn/tags/thymeleaf/"}],"author":"王长金"},{"title":"SPRING BOOT 监听SESSION 事件","slug":"SPRING-BOOT-监听SESSION-事件","date":"2020-08-11T01:37:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/11/SPRING-BOOT-监听SESSION-事件/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPRING-BOOT-%E7%9B%91%E5%90%ACSESSION-%E4%BA%8B%E4%BB%B6/","excerpt":"","text":"/** * Redis内session过期事件监听 * * @param expiredEvent */ @EventListener public void onSessionExpired(SessionExpiredEvent expiredEvent) &#123; logLoginService.doExit(expiredEvent.getSessionId()); LogLoginVO logLoginVO = logLoginService.querySessionId(expiredEvent.getSessionId()); if (null != logLoginVO) &#123; SmsUtils.sendMsg(MsgType.TIMEOUT_MSG, &quot;timeout&quot;, logLoginVO.getUsrId().toString()); logger.debug(&quot;用户&#123;&#125;登录超时&quot;, UserCache.getUserName(logLoginVO.getUsrId())); &#125; &#125; /** * Redis内session删除事件监听 * * @param deletedEvent */ @EventListener public void onSessionDeleted(SessionDeletedEvent deletedEvent) &#123; logLoginService.doExit(deletedEvent.getSessionId()); &#125; /** * Redis内session保存事件监听 * * @param createdEvent */ @EventListener public void onSessionCreated(SessionCreatedEvent createdEvent) &#123; String sessionId = createdEvent.getSessionId(); &#125;","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"SESSION","slug":"SESSION","permalink":"http://wangcj.com.cn/tags/SESSION/"},{"name":"事件监听","slug":"事件监听","permalink":"http://wangcj.com.cn/tags/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"}],"author":"王长金"},{"title":"KETTLE 日志写入XXL JOB 文件","slug":"KETTLE-日志写入XXL-JOB-文件","date":"2020-08-11T01:34:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/11/KETTLE-日志写入XXL-JOB-文件/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/KETTLE-%E6%97%A5%E5%BF%97%E5%86%99%E5%85%A5XXL-JOB-%E6%96%87%E4%BB%B6/","excerpt":"","text":"kettle日志默认打印到控制台，无法在XXL JOB 框架查看kettle 日志 1、自定义kettle日志监听package com.xxl.job.executor.service; import com.xxl.job.core.log.XxlJobLogger; import org.pentaho.di.core.logging.KettleLogStore; import org.pentaho.di.core.logging.KettleLoggingEvent; import org.pentaho.di.core.logging.LoggingPlugin; import org.pentaho.di.core.logging.LoggingPluginInterface; /** * kettle 日志和XXL JOB 集成 * @author 王长金 */ @LoggingPlugin(id=&quot;KettleLogListener&quot;, isSeparateClassLoaderNeeded=true) public class KettleLogListener implements LoggingPluginInterface &#123; @Override public void init() &#123; KettleLogStore.getAppender().addLoggingEventListener(this); &#125; @Override public void dispose() &#123; KettleLogStore.getAppender().removeLoggingEventListener(this); &#125; @Override public void eventAdded(KettleLoggingEvent kettleLoggingEvent) &#123; XxlJobLogger.log(kettleLoggingEvent.getMessage().toString()); &#125; &#125;2、集成/** * kettle 日志和XXL JOB集成 * @return */ @Bean(initMethod = &quot;init&quot;, destroyMethod = &quot;dispose&quot;) public KettleLogListener kettleLogListener() &#123; try &#123; KettleEnvironment.init(); &#125; catch (KettleException e) &#123; e.printStackTrace(); &#125; return new KettleLogListener(); &#125;3、测试查看效果可以看到KETTLE 执行 日志成功输出到了 XXL JOB 框架","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"kettle","slug":"kettle","permalink":"http://wangcj.com.cn/tags/kettle/"},{"name":"xxljob","slug":"xxljob","permalink":"http://wangcj.com.cn/tags/xxljob/"},{"name":"日志","slug":"日志","permalink":"http://wangcj.com.cn/tags/%E6%97%A5%E5%BF%97/"}],"author":"王长金"},{"title":"java程序在windows后台执行的办法","slug":"java程序在windows后台执行的办法","date":"2020-08-11T01:31:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/java程序在windows后台执行的办法/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/java%E7%A8%8B%E5%BA%8F%E5%9C%A8windows%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8A%9E%E6%B3%95/","excerpt":"","text":"1、新建run.txt文件2、在文件中输入一下内容：@echo off start javaw -jar xx.jar exit3、保存，修改文件名为run.bat4、双击即可5、删除windows后台程序tasklist 查看进程 taskkill /? 查看杀进程命令的帮助 taskkill /pid 进程号 杀死该进程 错误：无法种子PID为 xxxx 的进程。 原因：只能强行终止这个进程（带 /F 选项 ） taskkill -F /pid 进程号 强制杀死该进程 成功：已终止PID为xxxx的进程5、linux 后台启动 nohup java -jar xx.jar &gt; /dev/null 2&gt;&amp;1 &amp;因为 shell支持后台启动，所以linux下没有javaw 这个命令","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"后台启动","slug":"后台启动","permalink":"http://wangcj.com.cn/tags/%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8/"}],"author":"王长金"},{"title":"算术验证码","slug":"算术验证码","date":"2020-08-11T01:23:00.000Z","updated":"2021-01-06T13:10:44.000Z","comments":true,"path":"2020/08/11/算术验证码/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/%E7%AE%97%E6%9C%AF%E9%AA%8C%E8%AF%81%E7%A0%81/","excerpt":"","text":"1、引入依赖&lt;dependency&gt; &lt;groupId&gt;com.github.whvcse&lt;/groupId&gt; &lt;artifactId&gt;easy-captcha&lt;/artifactId&gt; &lt;version&gt;1.6.2&lt;/version&gt; &lt;/dependency&gt; 2、验证码请求接口@RequestMapping(&quot;/captcha&quot;) @ResponseBody public JSONObject captcha(HttpServletRequest request, HttpServletResponse response) throws Exception &#123; ArithmeticCaptcha captcha = new ArithmeticCaptcha(130, 48); String key = UUID.randomUUID().toString(); captcha.setLen(3); captcha.getArithmeticString(); captcha.setHeight(30); captcha.setWidth(146); String res = captcha.text(); stringRedisTemplate.opsForValue().set(key,res,300, TimeUnit.SECONDS); JSONObject jsonObject = new JSONObject(); jsonObject.put(&quot;key&quot;, key); jsonObject.put(&quot;captcha&quot;, captcha.toBase64()); return jsonObject; &#125; 3、验证码验证逻辑@RequestMapping(value = &quot;/login&quot;, method = RequestMethod.POST) public BaseResult createAuthenticationToken(@RequestBody AuthenticationRequest authenticationRequest, HttpServletRequest request) throws AuthenticationException &#123; try &#123; // 验证验证码 if (StringUtils.isEmpty(authenticationRequest.getCaptcha())) &#123; return BaseResult.fail(&quot;验证码不能为空！&quot;); &#125; String captcha = stringRedisTemplate.opsForValue().get(authenticationRequest.getCaptchaKey()); if (!authenticationRequest.getCaptcha().equals(captcha)) &#123; return BaseResult.fail(&quot;验证码不正确！&quot;); &#125; final AuthenticationResponse response = authService.login(authenticationRequest.getUsername(), authenticationRequest.getPassword()); taskExecutor.submit(() -&gt; &#123; String ip = Optional.ofNullable(request.getHeader(&quot;X-Forwarded-For&quot;)).orElse(request.getRemoteAddr()); LoginLog loginLog = new LoginLog(); loginLog.setDeptName(response.getUser().getDeptName()); loginLog.setLoginName(response.getUser().getLoginName()); loginLog.setLogintime(new Date()); loginLog.setToken(response.getToken()); loginLog.setIp(ip); loginLogMapper.insert(loginLog); &#125;); return BaseResult.success(response); &#125; catch (Exception ex) &#123; return BaseResult.fail(ex.getMessage()); &#125; &#125; 4、前端代码 &lt;div class=&quot;info_put_b&quot;&gt; &lt;span&gt;验证码：&lt;/span&gt; &lt;input class=&quot;code&quot; type=&quot;text&quot; style=&quot;top: 205px;width: 100px&quot; [(ngModel)]=&quot;signIn.captcha&quot; name=&quot;captcha&quot; autocomplete=&quot;new-password&quot; /&gt; &lt;img width=&quot;146&quot; height=&quot;30&quot; src=&quot;&#123;&#123;captcha&#125;&#125;&quot; (click)=&quot;getcaptcha()&quot;&gt; &lt;/div&gt; 5、效果","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"算术验证码","slug":"算术验证码","permalink":"http://wangcj.com.cn/tags/%E7%AE%97%E6%9C%AF%E9%AA%8C%E8%AF%81%E7%A0%81/"}],"author":"王长金"},{"title":"SPTING CLOUD GATEWAY 禁止后方应用302","slug":"SPTING-CLOUD-GATEWAY-禁止后方应用302","date":"2020-08-11T01:20:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/08/11/SPTING-CLOUD-GATEWAY-禁止后方应用302/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/SPTING-CLOUD-GATEWAY-%E7%A6%81%E6%AD%A2%E5%90%8E%E6%96%B9%E5%BA%94%E7%94%A8302/","excerpt":"","text":"@Bean public RouteLocator customRouteLocator(RouteLocatorBuilder builder) &#123; return builder.routes() // 数据共享服务限流 .route(&quot;web_limit&quot;, r -&gt; r.path(&quot;/palm/**&quot;) .filters(f -&gt; &#123; f.hystrix(c -&gt; c.setName(&quot;slowcmd&quot;).setFallbackUri(&quot;forward:/fallback&quot;)); f.preserveHostHeader(); // 禁止后方302 关键代码 return f; &#125;) .uri(&quot;lb://system-manager&quot;) ) .build(); &#125;","categories":[{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"}],"tags":[{"name":"路由配置","slug":"路由配置","permalink":"http://wangcj.com.cn/tags/%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/"}],"author":"王长金"},{"title":"IBMMQ 循环读取消息","slug":"IBMMQ-循环读取消息","date":"2020-08-11T01:10:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/11/IBMMQ-循环读取消息/","link":"","permalink":"http://wangcj.com.cn/2020/08/11/IBMMQ-%E5%BE%AA%E7%8E%AF%E8%AF%BB%E5%8F%96%E6%B6%88%E6%81%AF/","excerpt":"","text":"1、配置package cn.sh.cares.exec.config; import cn.sh.cares.exec.constant.Constants; import com.ibm.mq.MQEnvironment; import com.ibm.mq.MQQueue; import com.ibm.mq.MQQueueManager; import com.ibm.mq.constants.CMQC; import lombok.extern.slf4j.Slf4j; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; @Slf4j @Configuration public class IbmMqConfig &#123; @Value(&quot;$&#123;ibm.host&#125;&quot;) private String host; @Value(&quot;$&#123;ibm.port&#125;&quot;) private Integer port; @Value(&quot;$&#123;ibm.channel&#125;&quot;) private String channel; @Value(&quot;$&#123;ibm.queue_manager&#125;&quot;) private String queue_manager; @Value(&quot;$&#123;ibm.userId&#125;&quot;) private String userId; @Value(&quot;$&#123;ibm.password&#125;&quot;) private String password; private String queue_name_upload = Constants.AIRPORT_ICAO_CODE + &quot;.TO.NTFM&quot;; private String queue_name_download = &quot;NTFM.TO.&quot;+Constants.AIRPORT_ICAO_CODE; @Bean MQQueueManager mqQueueManager() &#123; MQQueueManager queueManager = null; MQEnvironment.hostname = host; MQEnvironment.port = port; MQEnvironment.channel = channel; MQEnvironment.userID = userId; MQEnvironment.password = password; try &#123; queueManager = new MQQueueManager(queue_manager); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;创建队列管理器失败&quot;); System.exit(-1); &#125; return queueManager; &#125; @Bean MQQueue putQueue(MQQueueManager queueManager) &#123; MQQueue putQueue = null; try &#123; int openOptionsArg = CMQC.MQOO_OUTPUT|CMQC.MQOO_INQUIRE|CMQC.MQOO_INPUT_AS_Q_DEF ; putQueue = queueManager.accessQueue(queue_name_upload, openOptionsArg); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;连接队列失败&quot;); System.exit(-1); &#125; return putQueue; &#125; @Bean MQQueue getQueue(MQQueueManager queueManager) &#123; MQQueue getQueue = null; try &#123; int openOptionsArg = CMQC.MQOO_OUTPUT|CMQC.MQOO_INQUIRE|CMQC.MQOO_INPUT_AS_Q_DEF ; getQueue = queueManager.accessQueue(queue_name_download, openOptionsArg); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;连接队列失败&quot;); System.exit(-1); &#125; return getQueue; &#125; &#125; 2、消息发送package cn.sh.cares.exec.service.impl; import cn.sh.cares.exec.message.struct.Mqmessage; import cn.sh.cares.exec.service.JaxbService; import cn.sh.cares.exec.service.MessageSender; import com.ibm.mq.MQMessage; import com.ibm.mq.MQPutMessageOptions; import com.ibm.mq.MQQueue; import com.xxl.job.core.log.XxlJobLogger; import lombok.extern.slf4j.Slf4j; import org.apache.commons.lang3.time.DateFormatUtils; import org.apache.commons.text.StringEscapeUtils; import org.springframework.beans.factory.annotation.Value; import org.springframework.stereotype.Service; import javax.annotation.Resource; import java.io.FileWriter; import java.nio.file.Path; import java.nio.file.Paths; import java.util.Date; @Slf4j @Service public class MessageSenderImpl implements MessageSender &#123; @Resource private MQQueue putQueue; @Resource private JaxbService jaxbService; @Value(&quot;$&#123;apoi.log.msg&#125;&quot;) private String msgPath; @Override public void send(Mqmessage mqmessage) &#123; log.debug(&quot;开始发送&quot;); String msg = jaxbService.serializeMsg(mqmessage); XxlJobLogger.log(StringEscapeUtils.escapeXml10(msg)); log.debug(msg); writeToFile(msg); MQMessage myMessage = new MQMessage(); try &#123; myMessage.writeUTF(msg); MQPutMessageOptions pmo = new MQPutMessageOptions(); putQueue.put(myMessage, pmo); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;消息发送失败&quot;); &#125; XxlJobLogger.log(&quot;发送消息成功&quot;); log.debug(&quot;发送成功&quot;); &#125; private void writeToFile(String msg) &#123; Path path = Paths.get(msgPath, DateFormatUtils.format(new Date(),&quot;yyyy-MM-dd&quot;)); try &#123; if (!path.toFile().exists()) &#123; if (!path.toFile().getParentFile().exists()) &#123; path.toFile().getParentFile().mkdirs(); &#125; path.toFile().createNewFile(); &#125; FileWriter printWriter = new FileWriter(path.toFile(),true); printWriter.append(msg).append(&quot;\\n&quot;); printWriter.flush(); printWriter.close(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125; 3、循环读取消息package cn.sh.cares.exec; import cn.sh.cares.exec.service.JaxbService; import cn.sh.cares.exec.service.impl.apoi.FplnServiceImpl; import com.ibm.mq.MQGetMessageOptions; import com.ibm.mq.MQMessage; import com.ibm.mq.MQPutMessageOptions; import com.ibm.mq.MQQueue; import org.junit.jupiter.api.Test; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.boot.test.context.SpringBootTest; import javax.annotation.Resource; import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import static com.ibm.mq.constants.CMQC.MQWI_UNLIMITED; @SpringBootTest class DataExchangeNtfmApplicationTests &#123; @Resource MQQueue getQueue; @Test void getMsg() &#123; try &#123; MQGetMessageOptions gmo = new MQGetMessageOptions(); gmo.waitInterval = MQWI_UNLIMITED; int depth = putQueue.getCurrentDepth(); while (depth-- &gt; 0) &#123; MQMessage retrievedMessage = new MQMessage(); putQueue.get(retrievedMessage, gmo); String msg = retrievedMessage.readUTF(); System.out.println(msg); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125;","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"IBMMQ","slug":"IBMMQ","permalink":"http://wangcj.com.cn/tags/IBMMQ/"},{"name":"消息读取","slug":"消息读取","permalink":"http://wangcj.com.cn/tags/%E6%B6%88%E6%81%AF%E8%AF%BB%E5%8F%96/"}],"author":"王长金"},{"title":"JAVA 进程调试参数","slug":"JAVA-进程调试参数","date":"2020-08-10T07:54:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/10/JAVA-进程调试参数/","link":"","permalink":"http://wangcj.com.cn/2020/08/10/JAVA-%E8%BF%9B%E7%A8%8B%E8%B0%83%E8%AF%95%E5%8F%82%E6%95%B0/","excerpt":"","text":"-Xdebug -Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=y suspend=y 表示服务进程阻塞直到调试端口连接上suspend=y 表示服务进程不等待调试端口连接","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[],"author":"王长金"},{"title":"IBMMQ 9 配置使用","slug":"IBMMQ-9-配置使用","date":"2020-08-06T05:28:00.000Z","updated":"2021-05-27T06:31:37.000Z","comments":true,"path":"2020/08/06/IBMMQ-9-配置使用/","link":"","permalink":"http://wangcj.com.cn/2020/08/06/IBMMQ-9-%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/","excerpt":"","text":"1、安装1.1 拉取镜像docker pull store/ibmcorp/mqadvanced-server-dev:9.1.0.01.2 启动mqdocker run \\ --name IBMMQ \\ --env LICENSE=accept \\ --env MQ_QMGR_NAME=ZSJN \\ --env MQ_ADMIN_PASSWORD=123 \\ --env MQ_APP_PASSWORD=123 \\ --publish 1414:1414 \\ --publish 9443:9443 \\ --detach \\ store/ibmcorp/mqadvanced-server-dev:9.1.0.0docker ps 2、配置2.1 配置用户[root@localhost ibmmq]# docker exec -it IBMMQ bash (mq:9.1.0.0)root@f970f0efcb12:/# useradd ZSJN (mq:9.1.0.0)root@f970f0efcb12:/# passwd ZSJN Enter new UNIX password: Retype new UNIX password: passwd: password updated successfully 2.2 配置队列2.2.1 登录web控制台 2.2.2 创建通道 2.2.3 通道ZSJN赋权限 2.2.4 创建通道认证记录用户映射和地址映射各一条用户映射允许哪些用户连接，地址映射允许哪些地址连接 2.2.5 创建队列 2.2.6 添加队列权限记录 2.2.7 设置队列权限 2.2.8 队列管理器添加权限记录 2.2.8 队列管理器权限记录设置权限 3、测试3.1 配置文件# ibm 队列配置 ibm.host=192.168.72.129 ibm.port=1414 ibm.channel=ZSJN ibm.queue_manager=ZSJN ibm.userId=ZSJN ibm.password=1233.2 队列配置 @Slf4j @Configuration public class IbmMqConfig &#123; @Value(&quot;$&#123;ibm.host&#125;&quot;) private String host; @Value(&quot;$&#123;ibm.port&#125;&quot;) private Integer port; @Value(&quot;$&#123;ibm.channel&#125;&quot;) private String channel; @Value(&quot;$&#123;ibm.queue_manager&#125;&quot;) private String queue_manager; @Value(&quot;$&#123;ibm.userId&#125;&quot;) private String userId; @Value(&quot;$&#123;ibm.password&#125;&quot;) private String password; private String queue_name = Constants.AIRPORT_ICAO_CODE + &quot;.TO.NTFM&quot;; @Bean MQQueueManager mqQueueManager() &#123; MQQueueManager queueManager = null; MQEnvironment.hostname = host; MQEnvironment.port = port; MQEnvironment.channel = channel; MQEnvironment.userID = userId; MQEnvironment.password = password; try &#123; queueManager = new MQQueueManager(queue_manager); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;创建队列管理器失败&quot;); System.exit(-1); &#125; return queueManager; &#125; @Bean MQQueue mqQueue(MQQueueManager queueManager) &#123; MQQueue putQueue = null; try &#123; int openOptionsArg = CMQC.MQOO_OUTPUT|CMQC.MQOO_INPUT_AS_Q_DEF|CMQC.MQOO_INQUIRE; putQueue = queueManager.accessQueue(queue_name, openOptionsArg); &#125; catch (Exception e) &#123; e.printStackTrace(); log.error(&quot;连接队列失败&quot;); System.exit(-1); &#125; return putQueue; &#125; &#125;3.4 测试代码 @Resource MQQueue putQueue; @Test void putmsg() &#123; String msg = &quot;测试消息&quot;; MQMessage myMessage = new MQMessage(); try &#123; myMessage.writeUTF(msg); MQPutMessageOptions pmo = new MQPutMessageOptions(); putQueue.put(myMessage, pmo); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; @Test void getMsg() &#123; MQMessage retrievedMessage = new MQMessage(); MQGetMessageOptions gmo = new MQGetMessageOptions(); try &#123; putQueue.get(retrievedMessage, gmo); String msg = retrievedMessage.readUTF(); System.out.println(msg); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; 4、IBMMQ 命令行操作ibmmq 9.2的web控制台没有创建队列管理器的入口了 创建队列管理器 docker exec -it IBMMQ crtmqm QM.ACDM 启动队列管理器 docker exec -it IBMMQ strmqm QM.ACDM 停止队列管理器 docker exec -it IBMMQ endmqm QM.ACDM 修改队列管理器的字符集 docker exec -it IBMMQ runmqsc QM.ACDM alter qmgr ccsid(1208)","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[],"author":"王长金"},{"title":"网络知识点","slug":"网络知识点","date":"2020-08-05T07:03:00.000Z","updated":"2021-01-06T13:10:44.000Z","comments":true,"path":"2020/08/05/网络知识点/","link":"","permalink":"http://wangcj.com.cn/2020/08/05/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"","text":"1、查看路由windows route print linux route 2、端口转发2.1 windowsnetsh interface portproxy add v4tov4 listenaddress=localaddress listenport=localport connectaddress=destaddress connectport=destport2.2 linuxfirewall-cmd –permanent –zone=public –add-forward-port=port=8087:proto=tcp:toaddr=10.60.73.146:toport=70253、添加路由3.1 windowsroute add 192.168.53.0 mask 255.255.255.0 192.168.52.1 IF devicecodedevicecode 为网卡设备号，可通过route print查看 192.168.52.1 为 devicecode 网卡对应的网关，同一个网络可设置为要转到的ip地址如192.168.53.12 3.2 linuxroute add --net IP netmask MASK eth0 或 route add --net IP netmask MASK gw IP 或 route add --net IP/24 eth1","categories":[{"name":"网络","slug":"网络","permalink":"http://wangcj.com.cn/categories/%E7%BD%91%E7%BB%9C/"}],"tags":[],"author":"王长金"},{"title":"OSB PIPELINE 错误处理","slug":"OSB-PIPELINE-错误处理","date":"2020-08-05T06:52:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/05/OSB-PIPELINE-错误处理/","link":"","permalink":"http://wangcj.com.cn/2020/08/05/OSB-PIPELINE-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","excerpt":"","text":"OSB 默认错误返回是包含error-code 和error-msg 的json格式报文，一般情况下对于客户来说这个格式跟系统是不统一的 ，此时需要自定义错误处理，根据不同错误码返回不同的自定义格式报文","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"OSB","slug":"OSB","permalink":"http://wangcj.com.cn/tags/OSB/"}],"author":"王长金"},{"title":"MSMQ 添加属性","slug":"MSMQ-添加属性","date":"2020-08-05T06:30:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/08/05/MSMQ-添加属性/","link":"","permalink":"http://wangcj.com.cn/2020/08/05/MSMQ-%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7/","excerpt":"","text":"1、背景项目接入货邮数据，对方只提供msmq接入方式，网上找了个JNI实现，但是消息属性只有label和消息体。需要增加lookupid和消息到达时间属性，这两个属性是MSMQ的API有的 2、POJO 添加属性 3、JNI方法JNIEXPORT jint JNICALL Java_ionic_Msmq_Queue_nativeReceiveBytes (JNIEnv *jniEnv, jobject object, jobject msg, jint timeout, jint ReadOrPeek) &#123; HRESULT hr = 0; try &#123; MsmqQueue *q = GetReceiverQueue(jniEnv, object, NULL, &amp;hr); if (hr != 0) return (jint)hr; // get message from the Queue WCHAR wszMessageLabel[MQ_MAX_MSG_LABEL_LEN] = L&quot;&quot;; BYTE pCorrelationId[PROPID_M_CORRELATIONID_SIZE]; ULONGLONG pLookupId = 0; ULONG arrdt = 0; // msg arrive time // initialize variables BYTE* pbMessage = NULL; DWORD dwMessageLength = 0; hr = q-&gt;receiveBytes(&amp;pbMessage, &amp;dwMessageLength, (WCHAR*)wszMessageLabel, pCorrelationId, &amp;pLookupId, &amp;arrdt, timeout, ReadOrPeek); if (hr == 0) &#123; CHAR szLabel[MQ_MAX_MSG_LABEL_LEN]; int len = wcslen(wszMessageLabel); int rc = 0; if (len &gt; 0) rc = WideCharToMultiByte( (UINT)CP_ACP, // code page (DWORD)0, // conversion flags (LPCWSTR)wszMessageLabel, // wide-character string to convert len, // number of chars in string. (LPSTR)szLabel, // buffer for new string MQ_MAX_MSG_LABEL_LEN, // size of buffer (LPCSTR)NULL, // default for unmappable chars (LPBOOL)NULL // set when default char used ); // terminate if (rc&gt;0) szLabel[rc] = &#39;\\0&#39;; else if (rc&lt;0) szLabel[0] = &#39;\\0&#39;; SetJavaByteArray(jniEnv, msg, &quot;_messageBody&quot;, pbMessage, dwMessageLength); SetJavaString(jniEnv, msg, &quot;_label&quot;, (char *)szLabel); SetJavaByteArray(jniEnv, msg, &quot;_correlationId&quot;, pCorrelationId, PROPID_M_CORRELATIONID_SIZE); char buf[1024]; memset(buf,0x00,sizeof buf); sprintf(buf,&quot;%I64d&quot;,pLookupId); SetJavaString(jniEnv, msg, &quot;_lookupId&quot;, buf); //char buff[1024]; //memset(buff,0x00,sizeof buff); //sprintf(buff,&quot;%d&quot;,arrdt); //MessageBoxA(NULL,buff,&quot;&quot;,MB_OK); setJavaDate(jniEnv, msg, &quot;arrTime&quot;,arrdt); &#125; delete[] pbMessage; if (hr != 0) return hr; &#125; catch (...) &#123; DIAG(&quot;Read() : Exception\\n&quot;); jniEnv-&gt;ExceptionDescribe(); jniEnv-&gt;ExceptionClear(); hr = -99; &#125; fflush(stdout); return (jint)hr; &#125; ![upload successful](/images/pasted-88.png)4、接收消息实现HRESULT receiveBytes( BYTE **ppbMessageBody, DWORD *dwBodyLen, WCHAR *swzMessageLabel, BYTE *pCorrelationId, ULONGLONG* pLookupId, ULONG* arrtm, DWORD dwTimeOut, int ReadOrPeek ); HRESULT MsmqQueue::receiveBytes(BYTE **ppbMessageBody, DWORD *dwpBodyLen, WCHAR *wszMessageLabel, BYTE *pCorrelationId, // sz PROPID_M_CORRELATIONID_SIZE ULONGLONG* pLookupId, ULONG* arrtm, DWORD dwTimeOut, int ReadOrPeek ) &#123; // for receive message const int NUMBEROFPROPERTIES = 7; MQMSGPROPS MsgProps; MQPROPVARIANT fields[NUMBEROFPROPERTIES]; MSGPROPID propId[NUMBEROFPROPERTIES]; DWORD i = 0; DWORD dwAction = (ReadOrPeek == 1) ? MQ_ACTION_RECEIVE : MQ_ACTION_PEEK_CURRENT; HRESULT hr = S_OK; int iBodyLen = 0; int iBody = 0; int iLabelLen = 0; int iLookUpid = 0; int iarrtm = 0; ULONG ulLabelLen = MQ_MAX_MSG_LABEL_LEN; // initialize all out variables to NULL if (NULL != wszMessageLabel) *wszMessageLabel = L&#39;\\0&#39;; if (NULL != pCorrelationId) memset(pCorrelationId, 0, PROPID_M_CORRELATIONID_SIZE); int MAX_INITIAL_BODY_SIZE = 1024; *ppbMessageBody = new BYTE[MAX_INITIAL_BODY_SIZE]; // prepare the property array PROPVARIANT of // message properties that we want to receive propId[i] = PROPID_M_BODY_SIZE; fields[i].vt = VT_UI4; fields[i].ulVal = *dwpBodyLen; iBodyLen = i; i++; propId[i] = PROPID_M_BODY; fields[i].vt = VT_VECTOR | VT_UI1; fields[i].caub.cElems = *dwpBodyLen; fields[i].caub.pElems = (unsigned char *)*ppbMessageBody; iBody = i; i++; if (NULL != pCorrelationId) &#123; propId[i] = PROPID_M_CORRELATIONID; fields[i].vt = VT_VECTOR | VT_UI1; fields[i].caub.pElems = (LPBYTE)pCorrelationId; fields[i].caub.cElems = PROPID_M_CORRELATIONID_SIZE; i++; &#125; propId[i] = PROPID_M_LABEL_LEN; fields[i].vt = VT_UI4; fields[i].ulVal = ulLabelLen; iLabelLen = i; i++; propId[i] = PROPID_M_LABEL; fields[i].vt = VT_LPWSTR; fields[i].pwszVal = wszMessageLabel; i++; // lookupid iLookUpid=i; propId[i] = PROPID_M_LOOKUPID; fields[i].vt = VT_UI8; i++; iarrtm = i; propId[i] = PROPID_M_ARRIVEDTIME; fields[i].vt = VT_NULL; i++; // Set the MQMSGPROPS structure MsgProps.cProp = i; // Number of properties. MsgProps.aPropID = propId; // Id of properties. MsgProps.aPropVar = fields; // Value of properties. MsgProps.aStatus = NULL; // No Error report. hr = MQReceiveMessage( hQueue, // handle to the Queue. dwTimeOut, // Max time (msec) to wait for the message. dwAction, // Action. &amp;MsgProps, // properties to retrieve. NULL, // No overlaped structure. NULL, // No callback function. NULL, // No Cursor. NULL // transaction ); // handle the case where the buffer is too small do &#123; if (MQ_ERROR_BUFFER_OVERFLOW == hr) &#123; if (NULL != *ppbMessageBody) &#123; delete[] * ppbMessageBody; *ppbMessageBody = NULL; &#125; INT iNewMsgLen = fields[iBodyLen].ulVal; *ppbMessageBody = new BYTE[iNewMsgLen]; fields[iBody].caub.cElems = fields[iBodyLen].ulVal; fields[iBody].caub.pElems = (unsigned char *)*ppbMessageBody; hr = MQReceiveMessage( hQueue, // handle to the Queue. dwTimeOut, // Max time (msec) to wait for the message. dwAction, // Action. &amp;MsgProps, // properties to retrieve. NULL, // No overlapped structure. NULL, // No callback function. NULL, // No Cursor. NULL // transaction ); &#125; if (hr == MQ_ERROR_LABEL_BUFFER_TOO_SMALL) &#123; fields[iLabelLen].ulVal = ulLabelLen; fields[iLabelLen + 1].pwszVal = wszMessageLabel; hr = MQReceiveMessage( hQueue, // handle to the Queue. dwTimeOut, // Max time (msec) to wait for the message. dwAction, // Action. &amp;MsgProps, // properties to retrieve. NULL, // No overlapped structure. NULL, // No callback function. NULL, // No Cursor. NULL // transaction ); &#125; &#125; while (MQ_ERROR_BUFFER_OVERFLOW == hr); if (FAILED(hr)) &#123; delete[] * ppbMessageBody; *ppbMessageBody = NULL; return hr; &#125; *dwpBodyLen = fields[iBodyLen].ulVal; if (0 == *dwpBodyLen) &#123; delete[] * ppbMessageBody; *ppbMessageBody = NULL; &#125; ulLabelLen = fields[iLabelLen].ulVal; *pLookupId = fields[iLookUpid].uhVal.QuadPart; *arrtm = fields[iarrtm].ulVal; return hr; &#125;; ![upload successful](/images/pasted-90.png) 5、测试Queue queuet = null; try &#123; String recpath = &quot;direct=tcp:192.168.182.128\\\\private$\\\\AirLogistics_Receipt&quot;; queuet = new Queue(recpath); Message sendMsg = new Message(&quot;test&quot;); queuet.send(sendMsg,TransactionType.SINGLE_MESSAGE); Message message = queuet.peek(); System.out.println(DateFormatUtils.format(message.getArrTime(),&quot;yyyy-MM-dd HH:mm:ss&quot;)); &#125; catch (MessageQueueException | UnsupportedEncodingException e) &#123; e.printStackTrace(); System.out.println(&quot;MSMQ连接失败&quot;); System.exit(-6); &#125; JNI调用JAVA有参构造函数调用 java.util.Date 类的 Date(long ms) // set date field void setJavaDate(JNIEnv * jniEnv, jobject object, char * fieldName, const unsigned long valueToSet)&#123; jclass cls = jniEnv-&gt;GetObjectClass(object); jclass date = jniEnv-&gt;FindClass(&quot;java/util/Date&quot;); jmethodID dcs = jniEnv-&gt;GetMethodID(date,&quot;&lt;init&gt;&quot;,&quot;(J)V&quot;); jlong ms = ((jlong)valueToSet)*1000; jobject dobj = jniEnv-&gt;NewObject(date,dcs,ms); jfieldID fieldId; fieldId = jniEnv-&gt;GetFieldID(cls, fieldName, &quot;Ljava/util/Date;&quot;); if (fieldId != 0) jniEnv-&gt;SetObjectField(object, fieldId, dobj); &#125;","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"MSMQ","slug":"MSMQ","permalink":"http://wangcj.com.cn/tags/MSMQ/"},{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/tags/JNI/"}],"author":"王长金"},{"title":"DOCKER 知识点","slug":"DOCKER-知识点","date":"2020-08-05T00:47:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/08/05/DOCKER-知识点/","link":"","permalink":"http://wangcj.com.cn/2020/08/05/DOCKER-%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"","text":"1、容器中使用 systemctl 服务docker run -dit --privileged=true --name test centos:7.8.2003 /usr/sbin/init 2、容器中使用gui1、容器启动添加环境变量 -e DISPLAY:unix$DISPLAY 2、添加映射 -v/tmp/.X11-unix/:/tmp/.X11-unix/ 3、宿主机执行 xhost+ 命令 3、启动的容器修改启动参数等1、停止dockerd进程Systemctl stop docker.service 2、修改配置文件/var/lib/docker/containers/ 以容器id为开头的文件夹，修改config.v2.jsonHostname,hosts 可修改主机名和本地域名解析","categories":[{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/tags/docker/"},{"name":"systemctl","slug":"systemctl","permalink":"http://wangcj.com.cn/tags/systemctl/"}],"author":"王长金"},{"title":"SPRINGBOOT 加解密方案","slug":"SPRINGBOOT-加解密方案","date":"2020-07-08T08:47:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/07/08/SPRINGBOOT-加解密方案/","link":"","permalink":"http://wangcj.com.cn/2020/07/08/SPRINGBOOT-%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%96%B9%E6%A1%88/","excerpt":"","text":"1、引入依赖&lt;dependency&gt; &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt; &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;3.0.3&lt;/version&gt; &lt;/dependency&gt;2、配置密码 jasypt.encryptor.password=加密用的密码 3、得到加密后的密码@Resource StringEncryptor stringEncryptor; @Test public void testMq() &#123; System.out.println(&quot;账号: &quot; + stringEncryptor.encrypt(&quot;账号&quot;)); System.out.println(&quot;密码: &quot; + stringEncryptor.encrypt(&quot;密码&quot;)); &#125; 4、配置加密密码spring.activemq.user=ENC(加密后的字符串) spring.activemq.password=ENC(加密后的字符串)","categories":[{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"}],"tags":[{"name":"加解密","slug":"加解密","permalink":"http://wangcj.com.cn/tags/%E5%8A%A0%E8%A7%A3%E5%AF%86/"}],"author":"王长金"},{"title":"ORACLE 数据库实时监控表数据变化","slug":"ORACLE-数据库实时监控表数据变化","date":"2020-07-07T10:01:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/07/07/ORACLE-数据库实时监控表数据变化/","link":"","permalink":"http://wangcj.com.cn/2020/07/07/ORACLE-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E8%A1%A8%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96/","excerpt":"","text":"1、需求既有系统无法向你发送数据变化，但是要求实时处理变化的数据 2、编写接口 @RequestMapping(&quot;notify&quot;) @PermissionLimit(limit = false) @ResponseBody public void processChange(String params)&#123; log.debug(&quot;收到数据库发出的航班变更消息:&#123;&#125;&quot;,params); &#125;3、数据库添加 java代码create or replace and compile java source named apoi as import java.io.BufferedReader; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.URL; public class APOI &#123; public static void notify(String notifyUrl,String data)&#123; BufferedReader reader = null; String response=null; try &#123; StringBuilder postData = new StringBuilder(); postData.append(&quot;params&quot;).append(&quot;=&quot;).append(data); byte[] postDataBytes = postData.toString().getBytes(&quot;UTF-8&quot;); HttpURLConnection conn = (HttpURLConnection)(new URL(notifyUrl)).openConnection(); conn.setRequestMethod(&quot;POST&quot;); conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;); conn.setRequestProperty(&quot;Content-Length&quot;, String.valueOf(postDataBytes.length)); conn.setConnectTimeout(2000); conn.setReadTimeout(5000); conn.setDoInput(true); conn.setDoOutput(true); conn.connect(); conn.getOutputStream().write(postDataBytes); conn.getOutputStream().flush(); reader = new BufferedReader(new InputStreamReader(conn.getInputStream())); String lines; while ((lines = reader.readLine()) != null) &#123; lines = new String(lines.getBytes(), &quot;utf-8&quot;); response+=lines; &#125; reader.close(); conn.disconnect(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125; 4、编写存储过程create or replace procedure sia_apoi( notifyUrl varchar2, data varchar2 ) as language java name &#39;APOI.notify(java.lang.String,java.lang.String)&#39;; 5、编写触发器create or replace trigger t_aco_td_plan_leg after insert on AOC.TH_MESSAGE for each row declare notifyUrl varchar2(200); dir varchar2(200); begin select value into notifyUrl from xxl_job_config where key = &#39;xxl-notify-url&#39;; select &#39;D&#39; into dir from dual; sia_apoi(notifyUrl,:new.pleg_id||&#39;,&#39;||dir); end t_aco_td_plan_leg; 6、授予用户socket权限 exec dbms_java.grant_permission( &#39;USERNAME&#39;, &#39;SYS:java.net.SocketPermission&#39;, &#39;IP:PORT&#39;, &#39;connect,resolve&#39; );6、测试","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"oracle","slug":"oracle","permalink":"http://wangcj.com.cn/tags/oracle/"}],"author":"王长金"},{"title":"MYSQL5.7 INNODB CLUSTER","slug":"MYSQL5-7-INNODB-CLUSTER","date":"2020-07-01T11:24:00.000Z","updated":"2021-05-20T06:56:27.000Z","comments":true,"path":"2020/07/01/MYSQL5-7-INNODB-CLUSTER/","link":"","permalink":"http://wangcj.com.cn/2020/07/01/MYSQL5-7-INNODB-CLUSTER/","excerpt":"","text":"1、环境 节点 主机名 ip地址 操作系统版本 节点一 mysql1 10.5.11.70 centos 7.5 节点二 mysql2 10.5.11.71 centos 7.5 节点三 mysql3 10.5.11.72 centos 7.5 1.1、主机名设置 hostnamectl set-hostname mysql1 hostnamectl set-hostname mysql2 hostnamectl set-hostname mysql3关闭终端，重新登录 2、软件安装2.1 mysql1 rpm -e postfix rpm -e mariadb-libs rpm -ivh mysql-router-community-8.0.20-1.el7.x86_64.rpm rpm -ivh mysql-shell-8.0.20-1.el7.x86_64.rpm tar xvf mysql-5.7.30-1.el7.x86_64.rpm-bundle.tar rpm -ivh mysql-community-common-5.7.30-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.30-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-compat-5.7.30-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.30-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.30-1.el7.x86_64.rpm 三个节点安装步骤同上 3、节点mysql1配置3.1、创建工作目录mkdir -p /home/mysql/data chown -R mysql.mysql /home/mysql3.2、创建配置文件vi /home/mysql/my.cnf [mysqld] pid-file = /home/mysql/mysqld.pid socket = /home/mysql/mysqld.sock datadir = /home/mysql/data log-error = /home/mysql/mysqld.log log_bin=ON secure-file-priv= NULL symbolic-links=0 server_id=1 max_connections=4096 character-set-server=utf8mb4 default_authentication_plugin=mysql_native_password default_storage_engine=INNODB innodb_buffer_pool_size=12G innodb_log_file_size=256M innodb_log_buffer_size=12M innodb_flush_log_at_trx_commit=2 lower_case_table_names=1 gtid_mode=ON enforce_gtid_consistency=ON binlog_checksum=NONE master_info_repository=TABLE relay_log_info_repository=TABLE transaction_write_set_extraction=XXHASH64 binlog_checksum=NONE log_slave_updates=ON binlog_format=ROW expire_logs_days=1 skip-host-cache skip-name-resolve 3.3、修改目录权限chown -R mysql.mysql /home/mysql3.4、初始化数据库 mysqld --defaults-file=/home/mysql/my.cnf --initialize-insecure --user=mysql3.5 启动数据库修改启动脚本vi /lib/systemd/system/mysqld.service [Unit] Description=MySQL Server Documentation=man:mysqld(8) Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html After=network.target After=syslog.target [Install] WantedBy=multi-user.target [Service] User=mysql Group=mysql Type=forking PIDFile=/var/run/mysqld/mysqld.pid # Disable service start and stop timeout logic of systemd for mysqld service. TimeoutSec=0 # Execute pre and post scripts as root PermissionsStartOnly=true # Start main service ExecStart=/usr/sbin/mysqld --daemonize --defaults-file=/home/mysql/my.cnf # Use this to switch malloc implementation EnvironmentFile=-/etc/sysconfig/mysql # Sets open_files_limit LimitNOFILE = 5000 Restart=on-failure RestartPreventExitStatus=1 PrivateTmp=falsesystemctl deamon-reload systemctl enable mysqld.service systemctl start mysqld.service3.6 创建用户并授权mysql -uroot -p -S /home/mysql/mysqld.socket grant all privileges on *.* to root@&#39;%&#39; identified by password; flush privileges; quit 4、节点mysql2配置4.1、创建工作目录mkdir -p /home/mysql/data chown -R mysql.mysql /home/mysql4.2、创建配置文件vi /home/mysql/my.cnf [mysqld] pid-file = /home/mysql/mysqld.pid socket = /home/mysql/mysqld.sock datadir = /home/mysql/data log-error = /home/mysql/mysqld.log log_bin=ON secure-file-priv= NULL symbolic-links=0 server_id=2 max_connections=4096 character-set-server=utf8mb4 default_authentication_plugin=mysql_native_password default_storage_engine=INNODB innodb_buffer_pool_size=12G innodb_log_file_size=256M innodb_log_buffer_size=12M innodb_flush_log_at_trx_commit=2 lower_case_table_names=1 gtid_mode=ON enforce_gtid_consistency=ON binlog_checksum=NONE master_info_repository=TABLE relay_log_info_repository=TABLE transaction_write_set_extraction=XXHASH64 binlog_checksum=NONE log_slave_updates=ON binlog_format=ROW expire_logs_days=1 skip-host-cache skip-name-resolve 4.3、修改目录权限chown -R mysql.mysql /home/mysql4.4、初始化数据库 mysqld --defaults-file=/home/mysql/my.cnf --initialize-insecure --user=mysql4.5 启动数据库修改启动脚本vi /lib/systemd/system/mysqld.service [Unit] Description=MySQL Server Documentation=man:mysqld(8) Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html After=network.target After=syslog.target [Install] WantedBy=multi-user.target [Service] User=mysql Group=mysql Type=forking PIDFile=/var/run/mysqld/mysqld.pid # Disable service start and stop timeout logic of systemd for mysqld service. TimeoutSec=0 # Execute pre and post scripts as root PermissionsStartOnly=true # Start main service ExecStart=/usr/sbin/mysqld --daemonize --defaults-file=/home/mysql/my.cnf # Use this to switch malloc implementation EnvironmentFile=-/etc/sysconfig/mysql # Sets open_files_limit LimitNOFILE = 5000 Restart=on-failure RestartPreventExitStatus=1 PrivateTmp=falsesystemctl deamon-reload systemctl enable mysqld.service systemctl start mysqld.service4.6 创建用户并授权mysql -uroot -p -S /home/mysql/mysqld.socket grant all privileges on *.* to root@&#39;%&#39; identified by password; flush privileges; quit 5、节点mysql3配置5.1、创建工作目录mkdir -p /home/mysql/data chown -R mysql.mysql /home/mysql5.2、创建配置文件vi /home/mysql/my.cnf [mysqld] pid-file = /home/mysql/mysqld.pid socket = /home/mysql/mysqld.sock datadir = /home/mysql/data log-error = /home/mysql/mysqld.log log_bin=ON secure-file-priv= NULL symbolic-links=0 server_id=3 max_connections=4096 character-set-server=utf8mb4 default_authentication_plugin=mysql_native_password default_storage_engine=INNODB innodb_buffer_pool_size=12G innodb_log_file_size=256M innodb_log_buffer_size=12M innodb_flush_log_at_trx_commit=2 lower_case_table_names=1 gtid_mode=ON enforce_gtid_consistency=ON binlog_checksum=NONE master_info_repository=TABLE relay_log_info_repository=TABLE transaction_write_set_extraction=XXHASH64 binlog_checksum=NONE log_slave_updates=ON binlog_format=ROW expire_logs_days=1 skip-host-cache skip-name-resolve 5.3、修改目录权限chown -R mysql.mysql /home/mysql5.4、初始化数据库 mysqld --defaults-file=/home/mysql/my.cnf --initialize-insecure --user=mysql5.5 启动数据库修改启动脚本vi /lib/systemd/system/mysqld.service [Unit] Description=MySQL Server Documentation=man:mysqld(8) Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html After=network.target After=syslog.target [Install] WantedBy=multi-user.target [Service] User=mysql Group=mysql Type=forking PIDFile=/var/run/mysqld/mysqld.pid # Disable service start and stop timeout logic of systemd for mysqld service. TimeoutSec=0 # Execute pre and post scripts as root PermissionsStartOnly=true # Start main service ExecStart=/usr/sbin/mysqld --daemonize --defaults-file=/home/mysql/my.cnf # Use this to switch malloc implementation EnvironmentFile=-/etc/sysconfig/mysql # Sets open_files_limit LimitNOFILE = 5000 Restart=on-failure RestartPreventExitStatus=1 PrivateTmp=falsesystemctl deamon-reload systemctl enable mysqld.service systemctl start mysqld.service5.6 创建用户并授权mysql -uroot -p -S /home/mysql/mysqld.socket grant all privileges on *.* to root@&#39;%&#39; identified by password; flush privileges; quit 6、集群配置6.1 集群条件检查和配置mysqlsh --uri &#39;root@mysql1&#39; dba.checkInstanceConfiguration() dba.configLocalInstance() mysqlsh --uri &#39;root@mysql2&#39; dba.checkInstanceConfiguration() dba.configLocalInstance() mysqlsh --uri &#39;root@mysql3&#39; dba.checkInstanceConfiguration() dba.configLocalInstance() 6.2 创建集群mysqlsh --uri &#39;root@mysql1&#39; var c = dba.createCluster(&#39;bag&#39;,&#123;multiPrimary:true&#125;) c.addInstance(&#39;root@mysql2&#39;) c.addInstance(&#39;root@mysql3&#39;) 6.3 创建路由配置文件,启动路由mysqlrouter -B &#39;root@mysql1&#39; --user=mysqlrouter systemctl enable mysqlrouter systemctl start mysqlrouter7、故障恢复7.1 情形一7.1.1 故障描述mysql集群有三个节点，重启后节点一、节点二恢复集群，节点三无法加入集群，且数据不断往节点三写入 mysql5.7 集群节点全部重启后是不会自动启动集群，需要执行dba.rebootClusterFromCompleteOutage(),而在此之前节点三不断写入，导致节点三的状态与节点一、二不一致，最终节点一二加入集群，而节点三不能加入集群 7.1.2 恢复步骤7.1.2.1 停止节点三的写入，将节点三的数据导出 mysqldump -uroot -p -S /home/mysql3/mysqld.sock --triggers --routines --events --databases test &gt; test.sql 7.1.2.2 重启节点一、二,导入节点三的数据在命令行执行 reset master导入数据 mysql -uroot -p -S /home/mysql1/mysqld.sock &lt; test.sql7.1.2.3 拉起集群[root@localhost home]# mysqlsh --uri &#39;root@localhost:3316&#39; MySQL Shell 8.0.20 Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type &#39;\\help&#39; or &#39;\\?&#39; for help; &#39;\\quit&#39; to exit. Creating a session to &#39;root@localhost:3316&#39; Fetching schema names for autocompletion... Press ^C to stop. Your MySQL connection id is 6 Server version: 5.7.30-log MySQL Community Server (GPL) No default schema selected; type \\use &lt;schema&gt; to set one. MySQL localhost:3316 ssl JS &gt; var c = dba.getCluster() Dba.getCluster: This function is not available through a session to a standalone instance (metadata exists, instance belongs to that metadata, but GR is not active) (RuntimeError) MySQL localhost:3316 ssl JS &gt; dba.rebootClusterFromCompleteOutage() Restoring the default cluster from complete outage... The instance &#39;localhost.localdomain:3326&#39; was part of the cluster configuration. Would you like to rejoin it to the cluster? [y/N]: y The instance &#39;localhost.localdomain:3336&#39; was part of the cluster configuration. Would you like to rejoin it to the cluster? [y/N]: y NOTE: Group Replication will communicate with other members using &#39;localhost.localdomain:33161&#39;. Use the localAddress option to override. WARNING: Instance &#39;localhost.localdomain:3316&#39; cannot persist Group Replication configuration since MySQL version 5.7.30 does not support the SET PERSIST command (MySQL version &gt;= 8.0.11 required). Please use the dba.configureLocalInstance() command locally to persist the changes. localhost.localdomain:3316 was restored. Rejoining &#39;localhost.localdomain:3326&#39; to the cluster. NOTE: Group Replication will communicate with other members using &#39;localhost.localdomain:33261&#39;. Use the localAddress option to override. WARNING: Instance &#39;localhost.localdomain:3326&#39; cannot persist Group Replication configuration since MySQL version 5.7.30 does not support the SET PERSIST command (MySQL version &gt;= 8.0.11 required). Please use the dba.configureLocalInstance() command locally to persist the changes. Rejoining &#39;localhost.localdomain:3336&#39; to the cluster. NOTE: Group Replication will communicate with other members using &#39;localhost.localdomain:33361&#39;. Use the localAddress option to override. WARNING: Instance &#39;localhost.localdomain:3336&#39; cannot persist Group Replication configuration since MySQL version 5.7.30 does not support the SET PERSIST command (MySQL version &gt;= 8.0.11 required). Please use the dba.configureLocalInstance() command locally to persist the changes. The cluster was successfully rebooted. &lt;Cluster:bag&gt; MySQL localhost:3316 ssl JS &gt; var c = dba.getCluster() MySQL localhost:3316 ssl JS &gt; c.status() &#123; &quot;clusterName&quot;: &quot;bag&quot;, &quot;defaultReplicaSet&quot;: &#123; &quot;name&quot;: &quot;default&quot;, &quot;primary&quot;: &quot;localhost.localdomain:3316&quot;, &quot;ssl&quot;: &quot;DISABLED&quot;, &quot;status&quot;: &quot;OK&quot;, &quot;statusText&quot;: &quot;Cluster is ONLINE and can tolerate up to ONE failure.&quot;, &quot;topology&quot;: &#123; &quot;localhost.localdomain:3316&quot;: &#123; &quot;address&quot;: &quot;localhost.localdomain:3316&quot;, &quot;mode&quot;: &quot;R/W&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;role&quot;: &quot;HA&quot;, &quot;status&quot;: &quot;ONLINE&quot; &#125;, &quot;localhost.localdomain:3326&quot;: &#123; &quot;address&quot;: &quot;localhost.localdomain:3326&quot;, &quot;mode&quot;: &quot;R/O&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;role&quot;: &quot;HA&quot;, &quot;status&quot;: &quot;ONLINE&quot; &#125;, &quot;localhost.localdomain:3336&quot;: &#123; &quot;address&quot;: &quot;localhost.localdomain:3336&quot;, &quot;mode&quot;: &quot;R/O&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;role&quot;: &quot;HA&quot;, &quot;status&quot;: &quot;ONLINE&quot; &#125; &#125;, &quot;topologyMode&quot;: &quot;Single-Primary&quot; &#125;, &quot;groupInformationSourceMember&quot;: &quot;localhost.localdomain:3316&quot; &#125; MySQL localhost:3316 ssl JS &gt; 7.1.2.4 恢复方法二停止集群写入重启全部mysqld进程mysqlsh 登录到写入数据的实例，执行 dba.rebootClusterFromCompleteOutage()","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"mysql5.7","slug":"mysql5-7","permalink":"http://wangcj.com.cn/tags/mysql5-7/"},{"name":"innodb cluster","slug":"innodb-cluster","permalink":"http://wangcj.com.cn/tags/innodb-cluster/"}],"author":"王长金"},{"title":"KEEPALIVED 安装","slug":"KEEPALIVED-安装","date":"2020-07-01T10:45:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/07/01/KEEPALIVED-安装/","link":"","permalink":"http://wangcj.com.cn/2020/07/01/KEEPALIVED-%E5%AE%89%E8%A3%85/","excerpt":"","text":"1、环境 节点 主机名 ip地址 操作系统版本 节点一 midware1 10.5.11.74 centos 7.5 节点二 midware1 10.5.11.75 centos 7.5 2、编译RPM包&emsp;&emsp;官网只提供源码包，需要编译成安装包，编译环境可选本地虚拟机（需与安装机器操作系统版本一致）或者要安装的服务器 &emsp;&emsp;一般选择本地虚拟机，服务器缺少对应编译依赖 2.1、解压源码tar zxvf keepalived-2.1.3.tar.gz 2.2、前置依赖安装yum install make automake autoconf openssl-devel libnl3-devel ipset-devel iptables-devel rpm-build 2.3、编译cd keepalived-2.1.3 mkdir -p $HOME/rpmbuild/SOURCES./configure make rpm [root@midware2 soft]# ls $HOME/rpmbuild BUILD BUILDROOT RPMS SOURCES SPECS SRPMS [root@midware2 soft]# ls $HOME/rpmbuild/RPMS x86_64 [root@midware2 soft]# ls $HOME/rpmbuild/RPMS/x86_64 keepalived-2.1.3-1.el7.x86_64.rpm keepalived-debuginfo-2.1.3-1.el7.x86_64.rpm [root@midware2 soft]# &emsp;&emsp;复制 keepalived-2.1.3-1.fc32.x86_64.rpm 到要安装的服务器节点一、节点二 3、节点一安装3.1 安装rpmrpm -ivh keepalived-2.1.3-1.el7.x86_64.rpm 3.2 配置vi /etc/keepalived/keepalived.conf global_defs &#123; router_id midware1 &#125; vrrp_instance VI_1 &#123; state MASTER interface ens33 virtual_router_id 51 priority 100 advert_int 1 authentication &#123; auth_type PASS auth_pass 1111 &#125; virtual_ipaddress &#123; 10.5.11.73/24 dev ens33 label ens33:vip &#125; &#125;参数解释 state 主为 MASTER,备份为 BACKUP interface 网卡名称 priority 主的优先级比备份的高 3.3 启动systemctl enable keepalived.serevice systemctl start keepalived.serevice4、节点二安装4.1 安装rpmrpm -ivh keepalived-2.1.3-1.el7.x86_64.rpm 4.2 配置vi /etc/keepalived/keepalived.conf global_defs &#123; router_id midware2 &#125; vrrp_instance VI_1 &#123; state BACKUP interface ens33 virtual_router_id 51 priority 99 advert_int 1 authentication &#123; auth_type PASS auth_pass 1111 &#125; virtual_ipaddress &#123; 10.5.11.73/24 dev ens33 label ens33:vip &#125; &#125;4.3 启动systemctl enable keepalived.serevice systemctl start keepalived.serevice如有多余两个节点的情况，重复章节4 [root@localhost keepalived-2.1.3]# systemctl status keepalived.service ● keepalived.service - LVS and VRRP High Availability Monitor Loaded: loaded (/usr/lib/systemd/system/keepalived.service; enabled; vendor preset: disabled) Active: active (running) since Wed 2020-07-01 18:51:06 CST; 29min ago Process: 1037 ExecStart=/usr/sbin/keepalived $KEEPALIVED_OPTIONS (code=exited, status=0/SUCCESS) Main PID: 1042 (keepalived) Tasks: 2 (limit: 9467) Memory: 2.1M CGroup: /system.slice/keepalived.service ├─1042 /usr/sbin/keepalived -D └─1043 /usr/sbin/keepalived -D 5、测试5.1 查看节点一网口情况ifconfig 5.2 查看节点二网口情况ifconfig 5.3 节点一关机，查看节点二网口情况ifconfig 可以看到VIP漂到节点二","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"keepalived","slug":"keepalived","permalink":"http://wangcj.com.cn/tags/keepalived/"}],"author":"王长金"},{"title":"WEEDFS 分布式文件系统","slug":"WEEDFS-分布式文件系统","date":"2020-07-01T08:03:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/07/01/WEEDFS-分布式文件系统/","link":"","permalink":"http://wangcj.com.cn/2020/07/01/WEEDFS-%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"1、 环境 节点 IP 进程 节点一 10.5.11.76 master，volume 节点二 10.5.11.77 volume 准备weedfs软件包 linux_amd64.tar 2、节点一 安装2.1、安装准备2.1.1、解压可执行文件tar xvf linux_amd64.tar cp weed /usr/local/bin 2.1.2、创建运行目录mkdir -p /home/&#123;weed-log,weed-log-master,weed-data,weed-meta&#125; 2.2、 编写自启动脚本 weedmaster.servicevi /lib/systemd/system/weedmaster.service [Unit] Description=weedmaster After=network.target remote-fs.target nss-lookup.target [Service] PrivateTmp=yes ExecStart=/usr/local/bin/weed -logdir /home/weed-log-master master -ip.bind 0.0.0.0 -mdir /home/weed-meta/ Restart=on-abort [Install] WantedBy=multi-user.target 2.3、 启动mastersystemctl enable weedmaster.service systemctl start weedmaster.service 2.4、 编写自启动脚本 weedvolume.servicevi /lib/systemd/system/weedvolume.service [Unit] Description=weedmaster After=network.target remote-fs.target nss-lookup.target [Service] PrivateTmp=yes ExecStart=/usr/local/bin/weed -logdir /home/weed-log volume -dir /home/weed-data/ -max 7 -mserver 10.5.11.76:9333 Restart=on-abort [Install] WantedBy=multi-user.target2.5、 启动volumesystemctl enable weedvolume.service systemctl start weedvolume.service 3、节点二 安装3.1、安装准备3.1.1、解压可执行文件tar xvf linux_amd64.tar cp weed /usr/local/bin 3.1.2、创建运行目录mkdir -p /home/&#123;weed-log,weed-data&#125; 3.2、 编写自启动脚本 weedvolume.servicevi /lib/systemd/system/weedvolume.service [Unit] Description=weedmaster After=network.target remote-fs.target nss-lookup.target [Service] PrivateTmp=yes ExecStart=/usr/local/bin/weed -logdir /home/weed-log volume -dir /home/weed-data/ -max 7 -mserver 10.5.11.76:9333 Restart=on-abort [Install] WantedBy=multi-user.target3.3、 启动volumesystemctl enable weedvolume.service systemctl start weedvolume.service 4、测试4.1、上传文件 4.2、获取上传文件内容","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"WEEDFS","slug":"WEEDFS","permalink":"http://wangcj.com.cn/tags/WEEDFS/"}],"author":"王长金"},{"title":"REDIS 主从安装","slug":"REDIS-主从安装","date":"2020-06-28T14:40:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/06/28/REDIS-主从安装/","link":"","permalink":"http://wangcj.com.cn/2020/06/28/REDIS-%E4%B8%BB%E4%BB%8E%E5%AE%89%E8%A3%85/","excerpt":"","text":"1 环境 节点 主机名 ip地址 操作系统版本 节点一 midware1 10.5.11.74 centos 7.5 节点二 midware2 10.5.11.75 centos 7.5 2 设置hostname2.1 hostsvi /etc/hosts 10.5.11.74 midware1 10.5.11.75 midware2 2.2 hostname节点一 hostnamectl set-hostname midware1 节点二 hostnamectl set-hostname midware2 3 主从安装3.1 节点一软件安装rpm -ivh jemalloc-3.6.0-1.el7.x86_64.rpm rpm -ivh redis-3.2.12-2.el7.x86_64.rpm 3.2 节点一配置修改 /etc/redis.conf 中以下配置项 bind 0.0.0.0 requirepass password systemctl enable redis systemctl start redis3.3 节点二软件安装rpm -ivh jemalloc-3.6.0-1.el7.x86_64.rpm rpm -ivh redis-3.2.12-2.el7.x86_64.rpm 3.4 节点二配置修改 /etc/redis.conf 中以下配置项 bind 0.0.0.0 requirepass password systemctl enable redis systemctl start redis3.5 节点二从节点配置修改 /etc/redis.conf 以下配置项 slaveof 10.5.11.74 6379 masterauth password systemctl restart redis3.6 测试3.6.1 节点一写入键值对 3.6.2 节点二读取test键","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"redis","slug":"redis","permalink":"http://wangcj.com.cn/tags/redis/"},{"name":"主从","slug":"主从","permalink":"http://wangcj.com.cn/tags/%E4%B8%BB%E4%BB%8E/"}],"author":"王长金"},{"title":"RABBITMQ 集群安装","slug":"RABBITMQ-集群安装","date":"2020-06-28T13:57:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/06/28/RABBITMQ-集群安装/","link":"","permalink":"http://wangcj.com.cn/2020/06/28/RABBITMQ-%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/","excerpt":"","text":"1 环境 节点 主机名 ip地址 操作系统版本 节点一 midware1 10.5.11.74 centos 7.5 节点二 midware2 10.5.11.75 centos 7.5 2 设置hostname2.1 添加 hostsvi /etc/hosts 10.5.11.74 midware1 10.5.11.75 midware22.2 hostname节点一 hostnamectl set-hostname midware1节点二 hostnamectl set-hostname midware23 集群安装3.1 节点一安装软件rpm -ivh socat-1.7.3.2-2.el7.x86_64.rpm rpm -ivh erlang-18.1-1.el6.x86_64.rpm rpm -ivh rabbitmq-server-3.6.8-1.el6.noarch.rpm3.2 节点一配置systemctl enable rabbitmq-server systemctl start rabbitmq-server rabbitmqctl add_user cares &#39;passwd&#39; rabbitmqctl set_user_tags cares administrator rabbitmqctl set_permissions -p / cares &#39;.*&#39; &#39;.*&#39; &#39;.*&#39; rabbitmq-plugins enable rabbitmq_management 3.3 节点二安装软件rpm -ivh socat-1.7.3.2-2.el7.x86_64.rpm rpm -ivh erlang-18.1-1.el6.x86_64.rpm rpm -ivh rabbitmq-server-3.6.8-1.el6.noarch.rpm3.4 复制节点一的cookie文件在节点一执行以下命令 scp /var/lib/rabbitmq/.erlang.cookie root@10.5.11.75://var/lib/rabbitmq/ 在节点二执行以下命令 cd /var/lib/rabbitmq/ chown rabbitmq.rabbitmq .erlang.cookie 3.5 节点二配置systemctl enable rabbitmq-server systemctl start rabbitmq-server rabbitmqctl add_user cares &#39;passwd&#39; rabbitmqctl set_user_tags cares administrator rabbitmqctl set_permissions -p / cares &#39;.*&#39; &#39;.*&#39; &#39;.*&#39; rabbitmq-plugins enable rabbitmq_management 3.6 节点二加入集群在节点一执行以下命令 rabbitmqctl stop_app rabbitmqctl join_cluster rabbit@midware2 --ram rabbitmqctl start_app rabbitmqctl set_policy ha-all &quot;^&quot; &#39;&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;&#39;","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"rabbit mq","slug":"rabbit-mq","permalink":"http://wangcj.com.cn/tags/rabbit-mq/"},{"name":"集群安装","slug":"集群安装","permalink":"http://wangcj.com.cn/tags/%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"}],"author":"王长金"},{"title":"RABBITMQ 动态监听与消息转换","slug":"RABBITMQ-动态监听与消息转换","date":"2020-05-18T13:44:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/05/18/RABBITMQ-动态监听与消息转换/","link":"","permalink":"http://wangcj.com.cn/2020/05/18/RABBITMQ-%E5%8A%A8%E6%80%81%E7%9B%91%E5%90%AC%E4%B8%8E%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2/","excerpt":"","text":"1、创建 SimpleMessageListenerContainer @Bean public SimpleMessageListenerContainer messageListenerContainer(ConnectionFactory connectionFactory, StoreMessageListener storeMessageListener, MqMsgConvertor mqMsgConvertor) &#123; SimpleMessageListenerContainer container = new SimpleMessageListenerContainer(connectionFactory); // 从数据库查出_IN 结尾的队列名 container.setQueueNames(&quot;test&quot;); container.setExposeListenerChannel(true); container.setPrefetchCount(100); // 设置为数据库队列个数 container.setConcurrentConsumers(1); container.setAcknowledgeMode(AcknowledgeMode.AUTO); MessageListenerAdapter adapter = new MessageListenerAdapter(storeMessageListener); adapter.setMessageConverter(mqMsgConvertor); container.setMessageListener(adapter); return container; &#125; 其中在监听适配器 MessageListenerAdapter 包装自定义的消息监听 storeMessageListener适配器实现了消息监听接口 onmessage 方法，然后进行消息转换，通过反射执行我们定义的消息监听 所以要实现消息转换功能，我们定义的监听不能实现rabbit监听接口，只需定义一个普通类即可 2、自定义消息监听MessageListenerAdapter 默认会调用我们自定义监听的类的 handleMessage方法，这个在MessageListenerAdapter 适配器是默认方法，可以设置为其他的 public class StoreMessageListener &#123; @Autowired private MsgFilterChain filterChain; public void handleMessage(MqMessage request) &#123; if (null == request) &#123; log.debug(&quot;消息格式错误，不做处理&quot;); return; &#125; filterChain.doFilter(request,new MqMessage()); &#125; &#125; 3、消息转换类public class MqMsgConvertor implements MessageConverter &#123; Jaxb2Marshaller jaxb2Marshaller; public MqMsgConvertor(Jaxb2Marshaller jaxb2Marshaller) &#123; this.jaxb2Marshaller = jaxb2Marshaller; &#125; @Override public Message toMessage(Object o, MessageProperties messageProperties) throws MessageConversionException &#123; messageProperties.setContentType(MediaType.APPLICATION_XML_VALUE); messageProperties.setDeliveryMode(MessageDeliveryMode.PERSISTENT); ByteArrayOutputStream arrayOutputStream = new ByteArrayOutputStream(); jaxb2Marshaller.marshal(o,new StreamResult(arrayOutputStream)); Message message = new Message(arrayOutputStream.toByteArray(),messageProperties); return message; &#125; @Override public Object fromMessage(Message message) throws MessageConversionException &#123; try &#123; Object o = jaxb2Marshaller.unmarshal(new StreamSource(new ByteArrayInputStream(message.getBody()))); return o; &#125; catch (Exception e) &#123; log.error(&quot;消息转换错误,消息格式不符合定义&quot;,e); &#125; return null; &#125; &#125;","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[{"name":"rabbitmq","slug":"rabbitmq","permalink":"http://wangcj.com.cn/tags/rabbitmq/"}],"author":"王长金"},{"title":"JAXB 中MAP 的互转","slug":"JAXB-中MAP-的互转","date":"2020-05-18T11:39:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/05/18/JAXB-中MAP-的互转/","link":"","permalink":"http://wangcj.com.cn/2020/05/18/JAXB-%E4%B8%ADMAP-%E7%9A%84%E4%BA%92%E8%BD%AC/","excerpt":"","text":"1、样例消息&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt; &lt;Root&gt; &lt;Header&gt; &lt;Sender&gt;sss&lt;/Sender&gt; &lt;SendTime&gt;2020-05-18 19:38:55&lt;/SendTime&gt; &lt;Receiver&gt;dasdas&lt;/Receiver&gt; &lt;MsgType&gt;fdsfasdf&lt;/MsgType&gt; &lt;/Header&gt; &lt;Body&gt; &lt;DataType&gt;dasfas&lt;/DataType&gt; &lt;List&gt; &lt;Item&gt; &lt;OPERATE&gt;MOD&lt;/OPERATE&gt; &lt;DATA&gt; &lt;USERADDR&gt;南京&lt;/USERADDR&gt; &lt;USERNAME&gt;王长金&lt;/USERNAME&gt; &lt;/DATA&gt; &lt;/Item&gt; &lt;/List&gt; &lt;/Body&gt; &lt;/Root&gt;目标是将 DATA节点转化为MAP，或者将java对象序列为上述格式，DATA下节点的个数不定 2、Item 节点@XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = &quot;&quot;, propOrder = &#123; &quot;operate&quot;, &quot;dataNode&quot; &#125;) @XmlRootElement(name = &quot;Item&quot;) public class ItemNode &#123; @XmlElement(name = &quot;OPERATE&quot;) @XmlJavaTypeAdapter(CollapsedStringAdapter.class) @XmlSchemaType(name = &quot;NCName&quot;) protected String operate; @XmlJavaTypeAdapter(MapAdapter.class) @XmlElement(name = &quot;DATA&quot;) private Map&lt;String, String&gt; dataNode; public String getOperate() &#123; return operate; &#125; public void setOperate(String value) &#123; this.operate = value; &#125; public Map&lt;String, String&gt; getDataNode() &#123; return dataNode; &#125; public void setDataNode(Map&lt;String, String&gt; dataNode) &#123; this.dataNode = dataNode; &#125; &#125; 3、DATA (DataNode) 节点@XmlAccessorType(XmlAccessType.FIELD) public class DataNode &#123; @XmlAnyElement private List&lt;Element&gt; entries; public List&lt;Element&gt; getEntries() &#123; return entries; &#125; public void setEntries(List&lt;Element&gt; entries) &#123; this.entries = entries; &#125; &#125; 4、MapAdapterpublic class MapAdapter extends XmlAdapter&lt;DataNode, Map&lt;String, Object&gt;&gt; &#123; @Override public Map&lt;String, Object&gt; unmarshal(DataNode v) throws Exception &#123; if (v == null) &#123; return null; &#125; Map&lt;String, Object&gt; map = new HashMap&lt;&gt;(); List&lt;Element&gt; entries = v.getEntries(); if (entries != null &amp;&amp; !entries.isEmpty()) &#123; entries.forEach(ele -&gt; &#123; String key = ele.getLocalName(); String value = ele.getTextContent(); if (ele.getChildNodes().getLength() &gt; 0) &#123; Map&lt;String, Object&gt; child = new HashMap&lt;&gt;(10); unmarshalRecursive(ele.getChildNodes(),child); map.put(key, child); &#125;else &#123; map.put(key, value); &#125; &#125;); &#125; return map; &#125; @Override public DataNode marshal(Map&lt;String, Object&gt; v) throws Exception &#123; if (v == null) &#123; return null; &#125; DataNode holder = new DataNode(); if (!v.isEmpty()) &#123; Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument(); List&lt;Element&gt; entries = new ArrayList&lt;&gt;(); v.forEach((key, value) -&gt; &#123; Element ele = doc.createElement(key); if(value instanceof String)&#123; ele.setTextContent(value.toString()); &#125;else if(value instanceof Map)&#123; marshalRecursive(doc,ele, (Map&lt;String, Object&gt;) value); &#125; entries.add(ele); &#125;); holder.setEntries(entries); &#125; return holder; &#125; private void unmarshalRecursive(NodeList nodeList, Map&lt;String, Object&gt; map) &#123; for (int i = 0; i &lt; nodeList.getLength(); i++) &#123; Node node = nodeList.item(i); if (node.hasChildNodes()) &#123; Map&lt;String, Object&gt; child = new HashMap&lt;&gt;(10); unmarshalRecursive(node.getChildNodes(),child); map.put(node.getLocalName(), child); &#125; map.put(node.getLocalName(), node.getTextContent()); &#125; &#125; private void marshalRecursive(Document doc,Element ele, Map&lt;String,Object&gt; map)&#123; map.entrySet().stream().forEach(e-&gt;&#123; if(e.getValue() instanceof String)&#123; Element element = doc.createElement(e.getKey()); element.setTextContent(e.getValue().toString()); ele.appendChild(element); &#125;else if(e.getValue() instanceof Map)&#123; Element element = doc.createElement(e.getKey()); marshalRecursive(doc, element, (Map&lt;String, Object&gt;) e.getValue()); &#125; &#125;); &#125; &#125;","categories":[{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"}],"tags":[{"name":"jaxb","slug":"jaxb","permalink":"http://wangcj.com.cn/tags/jaxb/"}],"author":"王长金"},{"title":"XXL-JOB 微服务改造","slug":"XXL-JOB-微服务改造","date":"2020-05-15T06:08:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/05/15/XXL-JOB-微服务改造/","link":"","permalink":"http://wangcj.com.cn/2020/05/15/XXL-JOB-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%94%B9%E9%80%A0/","excerpt":"","text":"1、改造目标 调度器、执行器全部随机端口，注册到注册中心 在执行器随机端口的情况下查看日志功能正常 调度器掉线后，执行器能够重新向调度器注册 2、定义CLOUD执行器 XxlJobCloudExecutor@Slf4j public class XxlJobCloudExecutor extends XxlJobSpringExecutor &#123; @Override public void start() throws Exception &#123; super.start(); &#125; public XxlJobCloudExecutor(DiscoveryClient discoveryClient, String xxlAdminServiceId) &#123; List&lt;ServiceInstance&gt; serviceInstances = null; while (true) &#123; serviceInstances = discoveryClient.getInstances(xxlAdminServiceId); if (!CollectionUtils.isEmpty(serviceInstances)) &#123; break; &#125; log.info(&quot;未查询到调度服务，执行器将等待&quot;); try &#123; Thread.sleep(2000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; List&lt;String&gt; addrs = DiscoveryClientUtil.getAddrList(discoveryClient,xxlAdminServiceId); setAdminAddresses(StringUtils.join(addrs, &#39;,&#39;)); &#125; &#125; 3、定义CLOUD执行器 @EventListener public void createExecuor(InstanceRegisteredEvent event)&#123; ConfigurableApplicationContext context = (ConfigurableApplicationContext) this.applicationContext; DiscoveryClient discoveryClient = context.getBean(DiscoveryClient.class); this.discoveryClient = discoveryClient; DefaultListableBeanFactory defaultListableBeanFactory = (DefaultListableBeanFactory) context.getBeanFactory(); BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(XxlJobCloudExecutor.class); builder.setInitMethodName(&quot;start&quot;); builder.setDestroyMethodName(&quot;destroy&quot;); builder.addConstructorArgValue(discoveryClient); builder.addConstructorArgValue(serviceId); builder.addPropertyValue(&quot;appName&quot;, appName); builder.addPropertyValue(&quot;accessToken&quot;, accessToken); builder.addPropertyValue(&quot;appTitle&quot;, appTitle); builder.addPropertyValue(&quot;logPath&quot;, logPath); builder.addPropertyValue(&quot;port&quot;, executorPort); builder.addPropertyValue(&quot;logRetentionDays&quot;, logRetentionDays); logger.info(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; dsp-job config init.&quot;); defaultListableBeanFactory.registerBeanDefinition(&quot;xxlJobExecutor&quot;, builder.getBeanDefinition()); if (null == this.executor) &#123; this.executor = defaultListableBeanFactory.getBean(&quot;xxlJobExecutor&quot;, XxlJobCloudExecutor.class); applicationInfoManager.getInfo().getMetadata().put(EXECUTOR_PORT, executorPort.toString()); applicationInfoManager.getInfo().setIsDirty(); &#125; &#125; 4、调度器掉线执行器重新注册 @EventListener public void refreshAdminAddr(HeartbeatEvent event) &#123; if (null == discoveryClient || null == this.executor) &#123; return; &#125; List&lt;String&gt; addrs = DiscoveryClientUtil.getAddrList(discoveryClient,serviceId); String origin = this.executor.getAdminAddresses(); String now = StringUtils.join(addrs, &#39;,&#39;); if (!origin.equals(now)) &#123; this.executor.resetAdminBizList(now); &#125; &#125;5、执行器随机端口查看日志@RequestMapping(&quot;/logDetailCat&quot;) @ResponseBody public ReturnT&lt;LogResult&gt; logDetailCat(String executorAddress, Long triggerTime, Integer logId, Integer fromLineNum)&#123; try &#123; XxlJobLog xxlJobLog = xxlJobLogDao.load(logId); XxlJobGroup xxlJobGroup = xxlJobGroupDao.load(xxlJobLog.getJobGroup()); String serviceName = xxlJobGroup.getAppName(); Optional&lt;String&gt; optional = discoveryClient.getInstances(serviceName).stream().filter(serviceInstance -&gt; &#123; String addr = serviceInstance.getHost() + &quot;:&quot; + serviceInstance.getMetadata().get(EXECUTOR_PORT); log.debug(&quot;addr=&#123;&#125;&quot;,addr); try &#123; ExecutorBiz executorBiz = XxlJobDynamicScheduler.getExecutorBiz(addr); ReturnT&lt;String&gt; res = executorBiz.hasLog(triggerTime, logId); log.debug(&quot;has log ::&#123;&#125;&quot;, res); if (res.getCode()==200) &#123; return true; &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return false; &#125;).findFirst().map(serviceInstance -&gt; serviceInstance.getHost()+&quot;:&quot;+serviceInstance.getMetadata().get(EXECUTOR_PORT)); if (!optional.isPresent()) &#123; throw new Exception(&quot;未找到日志，日志id为&quot;+logId); &#125; ExecutorBiz executorBiz = XxlJobDynamicScheduler.getExecutorBiz(optional.get()); ReturnT&lt;LogResult&gt; logResult = executorBiz.log(triggerTime, logId, fromLineNum); // is end if (logResult.getContent()!=null &amp;&amp; logResult.getContent().getFromLineNum() &gt; logResult.getContent().getToLineNum()) &#123; XxlJobLog jobLog = xxlJobLogDao.load(logId); if (jobLog.getHandleCode() &gt; 0) &#123; logResult.getContent().setEnd(true); &#125; &#125; return logResult; &#125; catch (Exception e) &#123; logger.error(e.getMessage(), e); return new ReturnT&lt;LogResult&gt;(ReturnT.FAIL_CODE, e.getMessage()); &#125; &#125; 6、执行器判断日志是否存在 @Override public ReturnT&lt;String&gt; hasLog(long logDateTim, int logId) &#123; String logFileName = XxlJobFileAppender.makeLogFileName(new Date(logDateTim), logId); boolean exists = Files.isReadable(Paths.get(logFileName)); if (exists) &#123; return ReturnT.SUCCESS; &#125; return ReturnT.FAIL; &#125;","categories":[{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"}],"tags":[{"name":"xxl-job","slug":"xxl-job","permalink":"http://wangcj.com.cn/tags/xxl-job/"}],"author":"王长金"},{"title":"SPRING CLOUD 动态注册元数据","slug":"SPRING-CLOUD-动态注册元数据","date":"2020-05-15T06:05:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/05/15/SPRING-CLOUD-动态注册元数据/","link":"","permalink":"http://wangcj.com.cn/2020/05/15/SPRING-CLOUD-%E5%8A%A8%E6%80%81%E6%B3%A8%E5%86%8C%E5%85%83%E6%95%B0%E6%8D%AE/","excerpt":"","text":"1、注入 ApplicationInfoManagerApplicationInfoManager applicationInfoManager; 2、注册元数据applicationInfoManager.getInfo().getMetadata().put(EXECUTOR_PORT, executorPort.toString()); applicationInfoManager.getInfo().setIsDirty(); 3、效果图","categories":[{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"}],"tags":[{"name":"服务注册","slug":"服务注册","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C/"}],"author":"王长金"},{"title":"ANGULAR 笔记","slug":"ANGULAR-笔记","date":"2020-05-15T01:28:00.000Z","updated":"2021-01-06T13:10:40.000Z","comments":true,"path":"2020/05/15/ANGULAR-笔记/","link":"","permalink":"http://wangcj.com.cn/2020/05/15/ANGULAR-%E7%AC%94%E8%AE%B0/","excerpt":"","text":"1、路由传参1.1 传参queryParams: this.router.navigate([&#39;pages/xxlJob/joblog&#39;], &#123;queryParams: &#123;title: &#39;查看调度日志[&#39; + row.jobDesc + &#39;]&#39;, jobId: row.id, jobGroup: row.jobGroup&#125;&#125;); 1.2 接收参数1.2.1 构造函数注入 ActivatedRouteprivate activatedRoute: ActivatedRoute1.2.2 解析参数this.activatedRoute.queryParams.subscribe((value: any) =&gt; &#123; this.jobid = value.jobId; this.jobgroup = value.jobGroup; &#125;);2、在当前组件打开一个新的组件假设当前组件为 JobLogComponent，要打开的组件为 JobLogDetailComponent 2.1 父组件模板添加存放子组件的容器&lt;ng-container #joblogdetail&gt;&lt;/ng-container&gt;2.2 父组件声明子组件容器的引用 @ViewChild(&#39;joblogdetail&#39;, &#123; read: ViewContainerRef &#125;) conRef: ViewContainerRef;2.3 父组件注入必要的组件 private resolver: ComponentFactoryResolver, private injector: Injector,2.4 父组件打开子组件的事件 public edit(row: any) &#123; this.showLogDetail = true; if (this.conRef) &#123; this.conRef.clear(); // 删除之前的视图 &#125; const ss: StandService = new StandService(); ss.service = row; const myInjector = Injector.create(&#123; providers: [&#123; provide: StandService, deps: [], useValue: ss&#125;], parent: this.injector &#125;); const factory = this.resolver.resolveComponentFactory(JobLogDetailComponent); const comref: ComponentRef&lt;JobLogDetailComponent&gt; = this.conRef.createComponent(factory, 0, myInjector); comref.instance.backMain.subscribe(() =&gt; &#123; this.conRef.clear(); this.showLogDetail = false; &#125;); &#125; 2.5 StandService 自定义参数注入组件 import &#123; Injectable &#125; from &#39;@angular/core&#39;; @Injectable() export class StandService &#123; service: any; &#125;2.6 子组件声明 点击事件用于返回父组件@Output() backMain = new EventEmitter(); 2.7 子组件构造函数注入参数，并接受参数如果父组件不传参数给子组件可忽略 private ss: StandService, this.executorAddress = ss.service.executorAddress; this.triggerTime = ss.service.triggerTime; this.logId = ss.service.id; 2.8 子组件返回键 &lt;button nz-button [nzType]=&quot;&#39;primary&#39;&quot; (click)=&quot;backMain.next()&quot;&gt; &lt;i nz-icon nzType=&quot;arrow-left&quot; nzTheme=&quot;outline&quot;&gt;&lt;/i&gt; 返回 &lt;/button&gt; 3 angular 升级到 9后，post 中文乱码3.1 原发生乱码的代码 editRow(rowData: Resource): Observable&lt;any&gt; &#123; const postUrl = this.apiUrl + &#39;resource/edit&#39;; let body = &#39;resId=&#39; + rowData.resId + &#39;&amp;resName=&#39; + rowData.resName + &#39;&amp;resType=&#39; + rowData.resType + &#39;&amp;resUrl=&#39; + rowData.resUrl + &#39;&amp;resIcon=&#39; + (rowData.resIcon ? rowData.resIcon : &#39;&#39;) + &#39;&amp;seqSort=&#39; + rowData.seqSort + &#39;&amp;remark=&#39; + (rowData.remark ? rowData.remark : &#39;&#39;); if (!(rowData.resPid === null || rowData.resPid === undefined) &amp;&amp; rowData.resPid.toString() !== &#39;null&#39;) &#123; body += &#39;&amp;resPid=&#39; + rowData.resPid; &#125; return this.http.post(postUrl, body, &#123; headers: this.headers &#125;); &#125; 3.2 修改后的代码 editRow(rowData: Resource): Observable&lt;any&gt; &#123; const postUrl = this.apiUrl + &#39;resource/edit&#39;; const body = new HttpParams() .set(&#39;resName&#39;, rowData.resName) .set(&#39;resId&#39;, rowData.resId.toString()) .set(&#39;resType&#39;, rowData.resType.toString()) .set(&#39;resUrl&#39;, rowData.resUrl) .set(&#39;resIcon&#39;, (rowData.resIcon ? rowData.resIcon : &#39;&#39;)) .set(&#39;seqSort&#39;, rowData.seqSort.toString()) .set(&#39;validity&#39;, (rowData.validity ? rowData.validity : &#39;&#39;)) .set(&#39;remark&#39;, (rowData.remark ? rowData.remark : &#39;&#39;)); if (!(rowData.resPid === null || rowData.resPid === undefined) &amp;&amp; rowData.resPid.toString() !== &#39;null&#39;) &#123; body.set(&#39;resPid&#39;, rowData.resPid.toString()); &#125; return this.http.post(postUrl, body, &#123; headers: this.headers &#125;); &#125; 4 自定义字段校验规则4.1 自定义校验函数 confirmPasswd(pwd: string): ValidatorFn &#123; return (control) =&gt; &#123; if (!control.value) &#123; return &#123; error: true, required: true &#125;; &#125; else if (control.value !== control.parent.controls[pwd].value) &#123; return &#123; confirm: true, error: true &#125;; &#125; return &#123;&#125;; &#125;; &#125; 其中 返回 confirm 是要在表单要用到的错误处理字段，为true表示密码不一致,参数表示要与之比较的字段 4.2 表单定义 this.sysAddForm = this.fb.group(&#123; sysId: [&#39;&#39;, [Validators.required]], sysUserPassword: [&#39;&#39;, [Validators.required, Validators.pattern(&#39;(?=.*\\\\d)(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).&#123;8,30&#125;&#39;)]], sysUserPasswordConfirm: [&#39;&#39;, this.pagesService.confirmPasswd(&#39;sysUserPassword&#39;) ], content: [&#39;&#39;], sysUserName: [&#39;&#39;, Validators.required, Validators.pattern(&#39;^[A-Za-z][A-Za-z_]+[A-Za-z]$&#39;)], id: [null] &#125;); 4.3 错误展示&lt;nz-form-control [nzSpan]=&quot;18&quot; [nzErrorTip]=&quot;sysUserPasswordConfirm&quot;&gt; &lt;input autocomplete=&quot;new-password&quot; type=&quot;password&quot; nz-input formControlName=&quot;sysUserPasswordConfirm&quot;/&gt; &lt;ng-template #sysUserPasswordConfirm let-control&gt; &lt;ng-container *ngIf=&quot;control.hasError(&#39;required&#39;)&quot;&gt; 确认密码不能为空！ &lt;/ng-container&gt; &lt;ng-container *ngIf=&quot;control.hasError(&#39;confirm&#39;)&quot;&gt; 密码不一致！ &lt;/ng-container&gt; &lt;/ng-template&gt; &lt;/nz-form-control&gt; 5 全局模板有时候很多地方会用到同一种模板，这时候有必要创建全局模板，方便管理维护，万一要更改也方便 5.1 定义全局模板组件@Component(&#123; selector: &#39;app-global-templates&#39;, templateUrl: &#39;./global-templates.component.html&#39;, styleUrls: [&#39;./global-templates.component.less&#39;] &#125;) export class GlobalTemplatesComponent &#123; @ViewChild(&#39;rangeTemplate&#39;, &#123;static: true&#125;) rangeTemplate!: TemplateRef&lt;void&gt;; @ViewChild(&#39;nzIndicatorTpl&#39;, &#123;static: true&#125;) nzIndicator!: TemplateRef&lt;void&gt;; &#125;html &lt;ng-template #nzIndicatorTpl&gt; &lt;div id=&quot;preloader&quot;&gt; &lt;div&gt; &lt;div class=&quot;cares-logo&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/ng-template&gt; &lt;ng-template #rangeTemplate let-range=&quot;range&quot; let-total&gt; 第 &#123;&#123; range[0] &#125;&#125;-&#123;&#123; range[1] &#125;&#125; 条 / 共 &#123;&#123; total &#125;&#125; 条 &lt;/ng-template&gt; 5.2 将模板注入全局service 作为组件的变量 indicatorTemplate!: TemplateRef&lt;void&gt;; rangeTemplate!: TemplateRef&lt;void&gt;;5.3 全局service实例化模板并赋值 constructor( injector: Injector, resolver: ComponentFactoryResolver ) &#123; const factory = resolver.resolveComponentFactory(GlobalTemplatesComponent); const &#123;rangeTemplate&#125; = factory.create(injector).instance; const &#123;nzIndicator&#125; = factory.create(injector).instance; this.rangeTemplate = rangeTemplate; this.indicatorTemplate=nzIndicator; &#125;5.4 引用配置全局加载指示器 const nzConfigFactory = ( pagesService: PagesService, ): NzConfig =&gt; &#123; const nzIndicator = pagesService.indicatorTemplate; return &#123; spin: &#123; nzIndicator &#125;, message: &#123;nzTop: 120&#125;, notification: &#123;nzTop: 120&#125; &#125;; &#125;; providers: [ &#123;provide: NZ_CONFIG, useFactory: nzConfigFactory, deps:[PagesService]&#125;, &#123;provide: HTTP_INTERCEPTORS, useClass: DefaultInterceptor, multi: true&#125;, ],","categories":[{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[],"author":"王长金"},{"title":"selenium 3 自动化测试","slug":"selenium-3-自动化测试","date":"2020-05-11T04:53:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/05/11/selenium-3-自动化测试/","link":"","permalink":"http://wangcj.com.cn/2020/05/11/selenium-3-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1、环境准备selenium 的本质是模拟用户点击浏览器的，所以要具备以下条件1、gui桌面环境2、安装谷歌浏览器或者火狐浏览器，或者其他的。windows系统也支持ie和edge3、下载 webdriver，浏览器对应的webdriver不同，将下载的webdriver放到 PATH 下载地址 https://www.selenium.dev/documentation/en/webdriver/driver_requirements/#quick-reference 2、创建工程，添加依赖 &lt;dependency&gt; &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt; &lt;artifactId&gt;selenium-java&lt;/artifactId&gt; &lt;version&gt;3.141.59&lt;/version&gt; &lt;/dependency&gt; 3、 实现 @Scheduled(cron = &quot;0 30 6 * * ?&quot;) public void report()&#123; Properties properties = new Properties(); try &#123; properties.load(new ClassPathResource(&quot;accounts.properties&quot;).getInputStream()); properties.entrySet().stream().forEach(objectObjectEntry -&gt; &#123; logger.debug(&quot;开始自动打卡::&#123;&#125;&quot;, objectObjectEntry.getKey()); String value = (String) objectObjectEntry.getValue(); String[] acc = value.split(&quot;,&quot;); doReport(acc[0],acc[1]); &#125;); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; WebDriver driver = new FirefoxDriver(); WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10).getSeconds()); try &#123; logger.debug(&quot;开始登陆&quot;); driver.get(&quot;你要测试的网站地址&quot;); driver.findElement(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div/div[1]/input&quot;)).sendKeys(id); driver.findElement(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div/div[2]/input&quot;)).sendKeys(pass); driver.findElement(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div/div[3]&quot;)).click(); WebElement daka = wait.until(presenceOfElementLocated(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div[2]/div/div[2]/div[1]/div[2]/div[3]/ul/li[1]/div&quot;))); logger.debug(&quot;登陆成功&quot;); // TODO 查看面板是否有公告,读公告 // 填报温度，提交 logger.debug(&quot;开始点击每日打卡&quot;); daka.click(); WebElement tem = wait.until(presenceOfElementLocated(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div[2]/div[5]/div[2]/span/div/input&quot;))); logger.debug(&quot;进入每日打卡填报页面&quot;); tem.clear(); // 生成随机温度 String temperature = new java.text.DecimalFormat(&quot;#.0&quot;).format(36d + (Math.random() * 0.7d + 0.1d)); logger.debug(&quot;生成随机温度:: &#123;&#125;&quot;,temperature); tem.sendKeys(temperature); logger.debug(&quot;提交上报&quot;); driver.findElement(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div[3]/div&quot;)).click(); // 提交后进入面板页面 daka = wait.until(presenceOfElementLocated(By.xpath(&quot;//*[@id=\\&quot;app\\&quot;]/div/div[2]/div/div[2]/div[1]/div[2]/div[3]/ul/li[1]/div&quot;))); logger.debug(&quot;提交上报成功&quot;); &#125; finally &#123; driver.quit(); &#125;","categories":[{"name":"自动化测试","slug":"自动化测试","permalink":"http://wangcj.com.cn/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"自动化测试","slug":"自动化测试","permalink":"http://wangcj.com.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"}],"author":"王长金"},{"title":"SPRING CLOUD CONFIG 使用数据库存储配置数据","slug":"SPRING-CLOUD-CONFIG-使用数据库存储配置数据","date":"2020-04-29T10:04:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/04/29/SPRING-CLOUD-CONFIG-使用数据库存储配置数据/","link":"","permalink":"http://wangcj.com.cn/2020/04/29/SPRING-CLOUD-CONFIG-%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE/","excerpt":"","text":"1 创建表create table DSP_CONFIG ( key VARCHAR2(1000) not null, value VARCHAR2(2000), application VARCHAR2(100) not null, profile VARCHAR2(100) not null, label VARCHAR2(100), remark VARCHAR2(200) )2 引入依赖 &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.oracle&lt;/groupId&gt; &lt;artifactId&gt;ojdbc6&lt;/artifactId&gt; &lt;version&gt;11.2.0.3&lt;/version&gt; &lt;/dependency&gt; 3 增加配置spring.cloud.config.server.bootstrap=true spring.cloud.config.server.prefix=/config spring.cloud.config.server.jdbc.sql=SELECT KEY, VALUE from DSP_CONFIG where APPLICATION=? and PROFILE=? and LABEL=? spring.profiles.active=jdbc spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=1521))(LOAD_BALANCE=YES)(FAILOVER=YES)(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=DCDB))) spring.datasource.username=dspmgr spring.datasource.password=qaz_Mgr123 spring.datasource.driver-class-name=oracle.jdbc.OracleDriver4 将原配置文件导入数据库package com.cares.dspconfigserver; import org.springframework.core.io.ClassPathResource; import java.io.IOException; import java.sql.Connection; import java.sql.PreparedStatement; import java.sql.SQLException; import java.util.List; import java.util.Properties; import java.util.stream.Collectors; public class LoadPropsToDb &#123; class Pros &#123; private String key; private String value; private String profile; private String application; private String label; private String remark; public Pros(String key, String value, String profile, String application, String label, String remark) &#123; this.key = key; this.value = value; this.profile = profile; this.application = application; this.label = label; this.remark = remark; &#125; public String getKey() &#123; return key; &#125; public void setKey(String key) &#123; this.key = key; &#125; public String getValue() &#123; return value; &#125; public void setValue(String value) &#123; this.value = value; &#125; public String getProfile() &#123; return profile; &#125; public void setProfile(String profile) &#123; this.profile = profile; &#125; public String getApplication() &#123; return application; &#125; public void setApplication(String application) &#123; this.application = application; &#125; public String getLabel() &#123; return label; &#125; public void setLabel(String label) &#123; this.label = label; &#125; public String getRemark() &#123; return remark; &#125; public void setRemark(String remark) &#123; this.remark = remark; &#125; &#125; public List&lt;Pros&gt; load(String filename) throws IOException &#123; String profile, app; String[] proAndapp = filename.split(&quot;\\\\.&quot;)[0].split(&quot;-&quot;); profile = proAndapp.length==2?proAndapp[1]:&quot;default&quot;; app = proAndapp[0]; Properties properties = new Properties(); properties.load(new ClassPathResource(&quot;/config/&quot;+filename).getInputStream()); return properties.stringPropertyNames().stream().map(s -&gt; &#123; Pros pros = new Pros(s,properties.getProperty(s),profile,app,&quot;master&quot;,&quot;&quot;); return pros; &#125;).collect(Collectors.toList()); &#125; public void insert(List&lt;Pros&gt; list,Connection connection)&#123; try&#123; connection.setAutoCommit(false); //设置手动提交 //预编译sql对象,只编译一回 PreparedStatement ps = connection.prepareStatement( &quot;insert into DSP_CONFIG(KEY,VALUE,APPLICATION,PROFILE,LABEL)values(?,?,?,?,?)&quot;); list.stream().forEach(pros -&gt; &#123; try &#123; ps.setString(1,pros.getKey()); ps.setString(2,pros.getValue()); ps.setString(3,pros.getApplication()); ps.setString(4,pros.getProfile()); ps.setString(5,pros.getLabel()); ps.addBatch();//添加到批次 &#125; catch (SQLException throwables) &#123; throwables.printStackTrace(); &#125; &#125;); ps.executeBatch();//提交批处理 connection.commit();//执行 &#125; catch (SQLException throwables) &#123; throwables.printStackTrace(); &#125;finally &#123; try &#123; connection.close(); &#125; catch (SQLException throwables) &#123; throwables.printStackTrace(); &#125; &#125; &#125; &#125; package com.cares.dspconfigserver; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.test.context.SpringBootTest; import org.springframework.test.context.junit4.SpringRunner; import javax.sql.DataSource; import java.io.IOException; import java.sql.SQLException; @RunWith(SpringRunner.class) @SpringBootTest public class DspConfigServerApplicationTests &#123; @Autowired DataSource source; @Test public void contextLoads() &#123; LoadPropsToDb lt = new LoadPropsToDb(); try &#123; lt.insert(lt.load(&quot;db-dev.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;db-test.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;eureka.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;configmanager.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;configmonitor.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;common.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;rabbit-dev.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;rabbit-test.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;redis-test.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;redis-dev.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;mybatis.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;leaderview.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;gateway.properties&quot;),source.getConnection()); lt.insert(lt.load(&quot;xxljobadmin.properties&quot;),source.getConnection()); &#125; catch (IOException | SQLException e) &#123; e.printStackTrace(); &#125; &#125; &#125;","categories":[{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"}],"tags":[{"name":"服务配置","slug":"服务配置","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"}],"author":"王长金"},{"title":"oracle 12c expdp impdp","slug":"oracle-12c-expdp-impdp","date":"2020-04-26T09:01:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/04/26/oracle-12c-expdp-impdp/","link":"","permalink":"http://wangcj.com.cn/2020/04/26/oracle-12c-expdp-impdp/","excerpt":"","text":"整个用户导出导出expdp \\&#39;system/oracle@127.0.0.1:1521/dcdb AS SYSDBA\\&#39; nologfile=y dumpfile=expdp.dmp directory=ORACLE_BASE schemas=dsp,dspmgr,security query=&#39;where rownum &lt; 1000&#39;导入impdp \\&#39;sys/Oradoc_db1@127.0.0.1:1521/orclpdb1.localdomain AS SYSDBA\\&#39; nologfile=y dumpfile=expdp.dmp directory=ORACLE_BASE schemas=dsp,dspmgr,security remap_schema=dspmgr:dspmgr,dsp:dsp,security:security remap_tablespace=TBS_DSP:users,TBS_DSP_SECURITY:users,TBS_DSP_MGR:users,TBS_DSP_TEMP:temp,TBS_DSP_IDX:users;导入指定的表并指定where条件导出 expdp \\&#39;sys/caresoracle@172.28.11.1:1521/dcdb AS SYSDBA\\&#39; nologfile=y dumpfile=expdp.dmp directory=DPDATA1 tables=dsp.DW_FLIGHT_ACTIVITY,dsp.ODS_IMF_FLIGHT,dsp.DIM_PASSENGER query=dsp.DW_FLIGHT_ACTIVITY:\\&quot;where date_plan_flight \\&gt; to_date\\(\\&#39;2020-04-06\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\) and date_plan_flight \\&lt; to_date\\(\\&#39;2020-04-20\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\)\\&quot;,query=dsp.ODS_IMF_FLIGHT:\\&quot;where flightscheduleddate \\&gt; to_date\\(\\&#39;2020-04-06\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\) and flightscheduleddate \\&lt; to_date\\(\\&#39;2020-04-20\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\)\\&quot;,dsp.DIM_PASSENGER:\\&quot;where flightdate \\&gt; to_date\\(\\&#39;2020-04-06\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\) and flightdate \\&lt; to_date\\(\\&#39;2020-04-20\\&#39;,\\&#39;yyyy-MM-dd\\&#39;\\)\\&quot; 导入 impdp \\&#39;sys/Oradoc_db1@127.0.0.1:1521/dcdb AS SYSDBA\\&#39; nologfile=y dumpfile=expdp.dmp directory=ORACLE_BASE table_exists_action=replace remap_tablespace=TBS_DSP:users,TBS_DSP_SECURITY:users,TBS_DSP_MGR:users,TBS_DSP_TEMP:temp,TBS_DSP_IDX:users;table_exists_action： skip 如果已存在表，则跳过并处理下一个对象； append 为表增加数据; truncate 截断表，然后为其增加新数据； replace 删除已存在表，重新建表并追加数据;","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[],"author":"王长金"},{"title":"基于docker 搭建 mysql innodb cluster 集群","slug":"基于docker-搭建-mysql-innodb-cluster-集群","date":"2020-04-11T03:18:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/04/11/基于docker-搭建-mysql-innodb-cluster-集群/","link":"","permalink":"http://wangcj.com.cn/2020/04/11/%E5%9F%BA%E4%BA%8Edocker-%E6%90%AD%E5%BB%BA-mysql-innodb-cluster-%E9%9B%86%E7%BE%A4/","excerpt":"","text":"1、构建mysql-shell 镜像由于没有好用的mysql-shell镜像，这里先手工构建一个 1.1 下载 mysql-shellfedora 32 版本 下载 mysql-shell-8.0.22-1.fc32.x86_64.rpm下载地址 https://dev.mysql.com/downloads/shell/1.2 编写docker file FROM fedora MAINTAINER Wang Changjin &lt;wangcj@cares.sh.cn&gt; ADD mysql-shell-8.0.22-1.fc32.x86_64.rpm /mysql-shell-8.0.22-1.fc32.x86_64.rpm COPY cluster.js / RUN rpm -ivh /mysql-shell-8.0.22-1.fc32.x86_64.rpm ENTRYPOINT [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;while true; do sleep 1; done&quot;] 1.3 集群创建脚本 cluster.js try &#123; print(&#39;Setting up InnoDB cluster...\\n&#39;); shell.connect(&#39;root@mysqldb3:3306&#39;, &#39;123456&#39;); var cluster = dba.createCluster(&quot;test&quot;,&#123;autoRejoinTries:1000&#125;); print(&#39;Adding instances to the cluster.&#39;); cluster.addInstance(&#123;user: &quot;root&quot;, host: &quot;mysqldb1&quot;, port: 3306, password: &#39;123456&#39;&#125;); print(&#39;.&#39;); cluster.addInstance(&#123;user: &quot;root&quot;, host: &quot;mysqldb2&quot;, port: 3306, password: &#39;123456&#39;&#125;); print(&#39;.\\nInstances successfully added to the cluster.&#39;); print(&#39;\\nInnoDB cluster deployed successfully.\\n&#39;); &#125; catch(e) &#123; print(&#39;\\nThe InnoDB cluster could not be created.\\n\\nError: &#39; + + e.message + &#39;\\n&#39;); &#125; 1.4 目录结构 1.5 软件版本操作系统：Fedora release 31 (Thirty One) docker : 19.03.8 docker-compose : 1.25.4 2 启动 mysql innodb cluster 集群2.1 mysqld 配置总共启动三个实例，保证server_id 不同 [mysqld] pid-file = /var/run/mysqld/mysqld.pid socket = /var/run/mysqld/mysqld.sock datadir = /var/lib/mysql secure-file-priv= NULL symbolic-links=0 server_id=1 max_connections=4096 character-set-server=utf8mb4 default_authentication_plugin=mysql_native_password default_storage_engine=INNODB innodb_buffer_pool_size=2G innodb_log_file_size=256M innodb_log_buffer_size=12M innodb_flush_log_at_trx_commit=2 lower_case_table_names=1 gtid_mode=ON enforce_gtid_consistency=ON binlog_checksum=NONE master_info_repository=TABLE relay_log_info_repository=TABLE transaction_write_set_extraction=XXHASH64 binlog_checksum=NONE log_slave_updates=ON binlog_format=ROW expire_logs_days=1 skip-host-cache skip-name-resolve 2.2 compose 文件version: &quot;3.7&quot; services: mysql1: image: mysql volumes: - /root/mysql_cluster/config/mysql1.cnf:/etc/mysql/my.cnf - /etc/localtime:/etc/localtime environment: MYSQL_ROOT_PASSWORD: 123456 hostname: mysqldb1 container_name: mysqldb1 restart: always networks: mysql_cluster: ipv4_address: 172.20.1.4 extra_hosts: - &quot;mysqldb2:172.20.1.2&quot; - &quot;mysqldb3:172.20.1.3&quot; mysql2: image: mysql restart: always volumes: - /root/mysql_cluster/config/mysql2.cnf:/etc/mysql/my.cnf - /etc/localtime:/etc/localtime environment: MYSQL_ROOT_PASSWORD: 123456 hostname: mysqldb2 container_name: mysqldb2 networks: mysql_cluster: ipv4_address: 172.20.1.2 extra_hosts: - &quot;mysqldb1:172.20.1.4&quot; - &quot;mysqldb3:172.20.1.3&quot; mysql3: image: mysql restart: always volumes: - /root/mysql_cluster/config/mysql3.cnf:/etc/mysql/my.cnf - /etc/localtime:/etc/localtime environment: MYSQL_ROOT_PASSWORD: 123456 hostname: mysqldb3 container_name: mysqldb3 networks: mysql_cluster: ipv4_address: 172.20.1.3 extra_hosts: - &quot;mysqldb1:172.20.1.4&quot; - &quot;mysqldb2:172.20.1.2&quot; mysql-shell: build: context: . volumes: - /etc/localtime:/etc/localtime container_name: mysql-shell networks: mysql_cluster: ipv4_address: 172.20.1.5 extra_hosts: - &quot;mysqldb1:172.20.1.4&quot; - &quot;mysqldb2:172.20.1.2&quot; - &quot;mysqldb3:172.20.1.3&quot; mysql-router: image: mysql/mysql-router restart: always environment: MYSQL_HOST: mysqldb1 MYSQL_PORT: 3306 MYSQL_USER: root MYSQL_PASSWORD: 123456 ports: - &quot;6446-6447:6446-6447&quot; depends_on: - mysql1 - mysql2 - mysql3 volumes: - /etc/localtime:/etc/localtime container_name: mysql-router networks: mysql_cluster: ipv4_address: 172.20.1.6 extra_hosts: - &quot;mysqldb1:172.20.1.4&quot; - &quot;mysqldb2:172.20.1.2&quot; - &quot;mysqldb3:172.20.1.3&quot; networks: mysql_cluster: ipam: driver: default config: - subnet: &quot;172.20.1.0/24&quot;2.3 集群配置2.3.1 启动脚本 startdocker-compose -f mysql.yaml up -d check()&#123; ret=1 while [[ $ret != 0 ]] do sleep 1s echo &quot;wait for $1&quot; docker logs $1 &gt; aa 2&gt;&amp;1 cat aa|grep &#39;port: 3306 MySQL Community Server - GPL&#39; &gt; /dev/null ret=$? done &#125; check &#39;mysqldb1&#39; docker exec -i mysql-shell mysqlsh --uri=&#39;root:123456@mysqldb1:3306&#39; &lt;&lt; EOF dba.checkInstanceConfiguration() dba.configureLocalInstance() EOF check &#39;mysqldb2&#39; docker exec -i mysql-shell mysqlsh --uri=&#39;root:123456@mysqldb2:3306&#39; &lt;&lt; EOF dba.checkInstanceConfiguration() dba.configureLocalInstance() EOF check &#39;mysqldb3&#39; docker exec -i mysql-shell mysqlsh --uri=&#39;root:123456@mysqldb3:3306&#39; &lt;&lt; EOF dba.checkInstanceConfiguration() dba.configureLocalInstance() EOF docker exec -i mysql-shell mysqlsh -f /cluster.js &lt;&lt; EOF C C EOF rm -fr aa &gt; /dev/null 2&gt;&amp;1 2.3.2 执行启动脚本 [root@localhost mysql_cluster]# ./start Creating network &quot;mysql_cluster_mysql_cluster&quot; with the default driver Creating mysql_cluster_mysql3_1 ... done Creating mysql-shell ... done Creating mysql_cluster_mysql2_1 ... done Creating mysql_cluster_mysql1_1 ... done Creating mysql-router ... done Logger: Tried to log to an uninitialized logger. WARNING: Using a password on the command line interface can be insecure. Validating MySQL instance at mysqldb1:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb1:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. Checking whether existing tables comply with Group Replication requirements... No incompatible tables detected Checking instance configuration... Instance configuration is compatible with InnoDB cluster The instance &#39;mysqldb1:3306&#39; is valid to be used in an InnoDB cluster. Configuring MySQL instance at mysqldb1:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb1:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. The instance &#39;mysqldb1:3306&#39; is valid to be used in an InnoDB cluster. The instance &#39;mysqldb1:3306&#39; is already ready to be used in an InnoDB cluster. Logger: Tried to log to an uninitialized logger. WARNING: Using a password on the command line interface can be insecure. Validating MySQL instance at mysqldb2:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb2:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. Checking whether existing tables comply with Group Replication requirements... No incompatible tables detected Checking instance configuration... Instance configuration is compatible with InnoDB cluster The instance &#39;mysqldb2:3306&#39; is valid to be used in an InnoDB cluster. Configuring MySQL instance at mysqldb2:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb2:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. The instance &#39;mysqldb2:3306&#39; is valid to be used in an InnoDB cluster. The instance &#39;mysqldb2:3306&#39; is already ready to be used in an InnoDB cluster. Logger: Tried to log to an uninitialized logger. WARNING: Using a password on the command line interface can be insecure. Validating MySQL instance at mysqldb3:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb3:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. Checking whether existing tables comply with Group Replication requirements... No incompatible tables detected Checking instance configuration... Instance configuration is compatible with InnoDB cluster The instance &#39;mysqldb3:3306&#39; is valid to be used in an InnoDB cluster. Configuring MySQL instance at mysqldb3:3306 for use in an InnoDB cluster... This instance reports its own address as mysqldb3:3306 Clients and other cluster members will communicate with it through this address by default. If this is not correct, the report_host MySQL system variable should be changed. The instance &#39;mysqldb3:3306&#39; is valid to be used in an InnoDB cluster. The instance &#39;mysqldb3:3306&#39; is already ready to be used in an InnoDB cluster. Logger: Tried to log to an uninitialized logger. Setting up InnoDB cluster... A new InnoDB cluster will be created on instance &#39;mysqldb3:3306&#39;. Validating instance configuration at mysqldb3:3306... This instance reports its own address as mysqldb3:3306 Instance configuration is suitable. NOTE: Group Replication will communicate with other members using &#39;mysqldb3:33061&#39;. Use the localAddress option to override. Creating InnoDB cluster &#39;test&#39; on &#39;mysqldb3:3306&#39;... Adding Seed Instance... Adding instances to the cluster.Cluster successfully created. Use Cluster.addInstance() to add MySQL instances. At least 3 instances are needed for the cluster to be able to withstand up to one server failure. WARNING: A GTID set check of the MySQL instance at &#39;mysqldb1:3306&#39; determined that it contains transactions that do not originate from the cluster, which must be discarded before it can join the cluster. mysqldb1:3306 has the following errant GTIDs that do not exist in the cluster: c821ff23-89fa-11ea-a385-0242ac140104:1-5 WARNING: Discarding these extra GTID events can either be done manually or by completely overwriting the state of mysqldb1:3306 with a physical snapshot from an existing cluster member. To use this method by default, set the &#39;recoveryMethod&#39; option to &#39;clone&#39;. Having extra GTID events is not expected, and it is recommended to investigate this further and ensure that the data can be removed prior to choosing the clone recovery method. NOTE: Group Replication will communicate with other members using &#39;mysqldb1:33061&#39;. Use the localAddress option to override. Validating instance configuration at mysqldb1:3306... This instance reports its own address as mysqldb1:3306 Instance configuration is suitable. A new instance will be added to the InnoDB cluster. Depending on the amount of data on the cluster this might take from a few seconds to several hours. Adding instance to the cluster... Monitoring recovery process of the new cluster member. Press ^C to stop monitoring and let it continue in background. Clone based state recovery is now in progress. NOTE: A server restart is expected to happen as part of the clone process. If the server does not support the RESTART command or does not come back after a while, you may need to manually start it back. * Waiting for clone to finish... NOTE: mysqldb1:3306 is being cloned from mysqldb3:3306 ** Stage DROP DATA: Completed ** Stage FILE COPY: Completed ** Stage PAGE COPY: Completed ** Stage REDO COPY: Completed ** Stage FILE SYNC: Completed ** Stage RESTART: Not Started NOTE: mysqldb1:3306 is shutting down... * mysqldb1:3306 has restarted, waiting for clone to finish... * Clone process has finished: 69.05 MB transferred in about 1 second (~1.00 B/s) State recovery already finished for &#39;mysqldb1:3306&#39; .The instance &#39;mysqldb1:3306&#39; was successfully added to the cluster. WARNING: A GTID set check of the MySQL instance at &#39;mysqldb2:3306&#39; determined that it contains transactions that do not originate from the cluster, which must be discarded before it can join the cluster. mysqldb2:3306 has the following errant GTIDs that do not exist in the cluster: c756c519-89fa-11ea-b9b6-0242ac140102:1-5 WARNING: Discarding these extra GTID events can either be done manually or by completely overwriting the state of mysqldb2:3306 with a physical snapshot from an existing cluster member. To use this method by default, set the &#39;recoveryMethod&#39; option to &#39;clone&#39;. Having extra GTID events is not expected, and it is recommended to investigate this further and ensure that the data can be removed prior to choosing the clone recovery method. NOTE: Group Replication will communicate with other members using &#39;mysqldb2:33061&#39;. Use the localAddress option to override. Validating instance configuration at mysqldb2:3306... This instance reports its own address as mysqldb2:3306 Instance configuration is suitable. A new instance will be added to the InnoDB cluster. Depending on the amount of data on the cluster this might take from a few seconds to several hours. Adding instance to the cluster... Monitoring recovery process of the new cluster member. Press ^C to stop monitoring and let it continue in background. Clone based state recovery is now in progress. NOTE: A server restart is expected to happen as part of the clone process. If the server does not support the RESTART command or does not come back after a while, you may need to manually start it back. * Waiting for clone to finish... NOTE: mysqldb2:3306 is being cloned from mysqldb3:3306 ** Stage DROP DATA: Completed ** Stage FILE COPY: Completed ** Stage PAGE COPY: Completed ** Stage REDO COPY: Completed ** Stage FILE SYNC: Completed ** Stage RESTART: Not Started NOTE: mysqldb2:3306 is shutting down... * Waiting for server restart... ready * mysqldb2:3306 has restarted, waiting for clone to finish... * Clone process has finished: 69.05 MB transferred in about 1 second (~1.00 B/s) State recovery already finished for &#39;mysqldb2:3306&#39; The instance &#39;mysqldb2:3306&#39; was successfully added to the cluster. . Instances successfully added to the cluster. InnoDB cluster deployed successfully. * Waiting for server restart... ready 2.3.3 查看集群状态 可以看到集群起来了 3 配置mysql router 进行连接3.1 连接 6446 端口 mysql-router 可以看到路由到 mysqldb3 3.2 关闭mysqldb3，查看连接情况[root@localhost mysql_cluster]# docker stop mysql_cluster_mysql3_1 mysql_cluster_mysql3_1 [root@localhost mysql_cluster]# docker exec -it mysql-shell mysqlsh --uri &#39;root@mysqldb1:3306&#39; Logger: Tried to log to an uninitialized logger. Please provide the password for &#39;root@mysqldb1:3306&#39;: ****** MySQL Shell 8.0.19 Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type &#39;\\help&#39; or &#39;\\?&#39; for help; &#39;\\quit&#39; to exit. Creating a session to &#39;root@mysqldb1:3306&#39; Fetching schema names for autocompletion... Press ^C to stop. Your MySQL connection id is 60 Server version: 8.0.19 MySQL Community Server - GPL No default schema selected; type \\use &lt;schema&gt; to set one. MySQL mysqldb1:3306 ssl JS &gt; var c = dba.getCluster(&#39;test&#39;) MySQL mysqldb1:3306 ssl JS &gt; c.status() &#123; &quot;clusterName&quot;: &quot;test&quot;, &quot;defaultReplicaSet&quot;: &#123; &quot;name&quot;: &quot;default&quot;, &quot;ssl&quot;: &quot;REQUIRED&quot;, &quot;status&quot;: &quot;OK_NO_TOLERANCE&quot;, &quot;statusText&quot;: &quot;Cluster is NOT tolerant to any failures. 1 member is not active&quot;, &quot;topology&quot;: &#123; &quot;mysqldb1:3306&quot;: &#123; &quot;address&quot;: &quot;mysqldb1:3306&quot;, &quot;mode&quot;: &quot;R/W&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;replicationLag&quot;: null, &quot;role&quot;: &quot;HA&quot;, &quot;status&quot;: &quot;ONLINE&quot;, &quot;version&quot;: &quot;8.0.19&quot; &#125;, &quot;mysqldb2:3306&quot;: &#123; &quot;address&quot;: &quot;mysqldb2:3306&quot;, &quot;mode&quot;: &quot;R/W&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;replicationLag&quot;: null, &quot;role&quot;: &quot;HA&quot;, &quot;status&quot;: &quot;ONLINE&quot;, &quot;version&quot;: &quot;8.0.19&quot; &#125;, &quot;mysqldb3:3306&quot;: &#123; &quot;address&quot;: &quot;mysqldb3:3306&quot;, &quot;mode&quot;: &quot;n/a&quot;, &quot;readReplicas&quot;: &#123;&#125;, &quot;role&quot;: &quot;HA&quot;, &quot;shellConnectError&quot;: &quot;MySQL Error 2003 (HY000): Can&#39;t connect to MySQL server on &#39;mysqldb3&#39; (110)&quot;, &quot;status&quot;: &quot;(MISSING)&quot; &#125; &#125;, &quot;topologyMode&quot;: &quot;Multi-Primary&quot; &#125;, &quot;groupInformationSourceMember&quot;: &quot;mysqldb1:3306&quot; &#125; MySQL mysqldb1:3306 ssl JS &gt; 可以看到mysqldb3 不在线 mysqlrouter 连接到了mysqldb1 4 故障恢复4.1 集群某个节点实例关闭1、启动掉线节点实例2、集群会自动加入掉线的节点 4.2 集群断电全部关闭1、启动集群所有实例2、dba.rebootClusterFromCompleteOutage() 4.3 集群某个节点掉线的情况下，然后整个集群断电关闭1、启动集群所有实例2、dba.rebootClusterFromCompleteOutage()3、将断线的节点从集群删除重新加入 4.4 集群某个节点网络断开，实例正常1、恢复网络连接2、Cluster.rejoinInstance(如果集群创建指定了自动加入重试次数，会自动加入) 3、设置 自动加入重试 c.setOption(‘autoRejoinTries’,1000) 4.5 强制删除节点强制删除挂掉的实例cluster.removeInstance(‘root@mysql4:3310’,{force:1}) 增加实例cluster.addInstance(‘root@mysql4:3310’) 5 组复制参数设置group_replication_bootstrap_group=ON作用：集群全部节点挂掉后，重启节点能自动拉起集群，不需要手动去dba.rebootClusterFromCompleteOutage() 设置方式：按照常规方式安装好集群，选择其中一台机器作为bootstrap节点，将上述配置写入my.cnf 注意：集群安装好之前不能将此项配置写入my.cnf,否则mysql实例无法启动 bootstrap 节点挂掉后，集群会选择其他节点写入，但是尽快恢复bootstrap节点到正常状态 group_replication_transaction_size_limit=150000000组复制事务大小限制。默认为145M，可调大到1450M注意：集群安装好之前不能将此项配置写入my.cnf,否则mysql实例无法启动 group_replication_member_expel_timeout=5成员恢复等待时间默认5秒，最大3600秒注意：集群安装好之前不能将此项配置写入my.cnf,否则mysql实例无法启动","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[],"author":"王长金"},{"title":"内网安装区块链网络","slug":"内网安装区块链网络","date":"2020-03-10T11:52:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/03/10/内网安装区块链网络/","link":"","permalink":"http://wangcj.com.cn/2020/03/10/%E5%86%85%E7%BD%91%E5%AE%89%E8%A3%85%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BD%91%E7%BB%9C/","excerpt":"","text":"安装规划域名说明 域名 说明 orderer.cares.com 排序节点 peer0.nkg.com nkg peer节点 ca.cares.com 排序组织证书颁发节点 ca.nkg.com nkg 证书颁发节点 tls.cares.com 全局 tls证书颁发节点 peer0.weh.com weh peer 节点 ca.weh.com weh 证书颁发节点 peer0.tna.com tna peer节点 ca.tna.com tna证书颁发节点 域名规划 IP 域名 192.168.53.50 orderer.cares.com peer0.nkg.com ca.cares.com ca.nkg.com tls.cares.com 192.168.53.51 peer0.weh.com ca.weh.com 192.168.53.52 peer0.tna.com ca.tna.com 基础软件安装（全部机器相同操作）1、go将go的可执行文件路径添加到PATH export PATH=$PATH:/root/fabric/soft/prereq/go/bin设置GOROOT环境变量指向GO_HOME export GOROOT=/root/fabric/soft/prereq/go设置GOPATH环境变量指向源码编译路径 export GOPATH=/root/fabric/gopath2、node将node的可执行文件路径添加到PATH export PATH=$PATH:/root/fabric/soft/prereq/node-v12.16.1-linux-x64/bin3、docker复制docker二进制文件到 /usr/bin复制docker.service containerd.service docker.socket 到 /lib/systemd/system添加docker组 groupadd dockersystemctl enable docker.service systemctl enable docker.socket systemctl enable containerd.service systemctl start docker.service4、fabric复制fabric二进制文件到/usr/bin 复制fabric源码到 $GOPATH fabric 网络搭建CA 安装tls-ca创建目录mkdir -p /root/workspace/tls-ca/&#123;crypto,admin&#125;启动 tls-caexport TLS_CA_HOME=/root/workspace/tls-ca export FABRIC_CA_SERVER_HOME=$TLS_CA_HOME/crypto export FABRIC_CA_SERVER_TLS_ENABLED=true export FABRIC_CA_SERVER_CSR_CN=tls.cares.com export FABRIC_CA_SERVER_CSR_HOSTS=tls.cares.com export FABRIC_CA_SERVER_DEBUG=true export FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:6053 nohup fabric-ca-server start -d -b tls:tlspw --port 6052 &gt; $TLS_CA_HOME/tls-ca-logs 2&gt;&amp;1 &amp;注册TLS证书export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tls-ca/crypto/tls-cert.pem export FABRIC_CA_CLIENT_HOME=/root/workspace/tls-ca/admin fabric-ca-client enroll -d -u https://tls:tlspw@tls.cares.com:6052 fabric-ca-client register -d --id.name peer0.nkg.com --id.secret 1 --id.type peer -u https://tls.cares.com:6052 fabric-ca-client register -d --id.name peer0.weh.com --id.secret 1 --id.type peer -u https://tls.cares.com:6052 fabric-ca-client register -d --id.name peer0.tna.com --id.secret 1 --id.type peer -u https://tls.cares.com:6052 fabric-ca-client register -d --id.name orderer.cares.com --id.secret 1 --id.type orderer -u https://tls.cares.com:6052orderer ca创建目录mkdir -p /root/workspace/order-ca/&#123;crypto,admin&#125;启动orderer caexport ORDERER_CA_HOME=/root/workspace/order-ca export FABRIC_CA_SERVER_HOME=$ORDERER_CA_HOME/crypto export FABRIC_CA_SERVER_TLS_ENABLED=true export FABRIC_CA_SERVER_CSR_CN=ca.cares.com export FABRIC_CA_SERVER_CSR_HOSTS=ca.cares.com export FABRIC_CA_SERVER_DEBUG=true export FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:6055 nohup fabric-ca-server start -d -b rca:rcapw --port 6054 &gt; $ORDERER_CA_HOME/orderer-ca-logs 2&gt;&amp;1 &amp;注册 orderer 组织和orderer adminexport ORDERER_CA_HOME=/root/workspace/order-ca export FABRIC_CA_CLIENT_TLS_CERTFILES=$ORDERER_CA_HOME/crypto/ca-cert.pem export FABRIC_CA_CLIENT_HOME=$ORDERER_CA_HOME/admin fabric-ca-client enroll -d -u https://rca:rcapw@ca.cares.com:6054 fabric-ca-client register -d --id.name orderer.cares.com --id.secret 1 --id.type orderer -u https://ca.cares.com:6054 fabric-ca-client register -d --id.name Admin@orderer.cares.com --id.secret 1 --id.type admin --id.attrs &quot;hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert&quot; -u https://ca.cares.com:6054nkg ca创建目录mkdir -p /root/workspace/nkg-ca/&#123;crypto,admin&#125; 启动nkg caexport NKG_CA_HOME=/root/workspace/nkg-ca export FABRIC_CA_SERVER_HOME=$NKG_CA_HOME/crypto export FABRIC_CA_SERVER_TLS_ENABLED=true export FABRIC_CA_SERVER_CSR_CN=ca.nkg.com export FABRIC_CA_SERVER_CSR_HOSTS=ca.nkg.com export FABRIC_CA_SERVER_DEBUG=true export FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:6057 nohup fabric-ca-server start -d -b rca:rcapw --port 6056 &gt; $NKG_CA_HOME/nkg-ca-logs 2&gt;&amp;1 &amp;注册 nkg peer0，admin,userexport NKG_CA_HOME=/root/workspace/nkg-ca export FABRIC_CA_CLIENT_TLS_CERTFILES=$NKG_CA_HOME/crypto/ca-cert.pem export FABRIC_CA_CLIENT_HOME=$NKG_CA_HOME/admin fabric-ca-client enroll -d -u https://rca:rcapw@ca.nkg.com:6056 fabric-ca-client register -d --id.name peer0.nkg.com --id.secret 1 --id.type peer -u https://ca.nkg.com:6056 fabric-ca-client register -d --id.name Admin@nkg.com --id.secret 1 --id.type user -u https://ca.nkg.com:6056 fabric-ca-client register -d --id.name User1@nkg.com --id.secret 1 --id.type user -u https://ca.nkg.com:6056weh ca创建目录mkdir -p /root/workspace/weh-ca/&#123;crypto,admin&#125;启动weh caexport WEH_CA_HOME=/root/workspace/weh-ca export FABRIC_CA_SERVER_HOME=$WEH_CA_HOME/crypto export FABRIC_CA_SERVER_TLS_ENABLED=true export FABRIC_CA_SERVER_CSR_CN=ca.weh.com export FABRIC_CA_SERVER_CSR_HOSTS=ca.weh.com export FABRIC_CA_SERVER_DEBUG=true export FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:6057 nohup fabric-ca-server start -d -b rca:rcapw --port 6056 &gt; $WEH_CA_HOME/weh-ca-logs 2&gt;&amp;1 &amp;注册 weh peer0，admin,userexport WEH_CA_HOME=/root/workspace/weh-ca export FABRIC_CA_CLIENT_TLS_CERTFILES=$WEH_CA_HOME/crypto/ca-cert.pem export FABRIC_CA_CLIENT_HOME=$WEH_CA_HOME/admin fabric-ca-client enroll -d -u https://rca:rcapw@ca.weh.com:6056 fabric-ca-client register -d --id.name peer0.weh.com --id.secret 1 --id.type peer -u https://ca.weh.com:6056 fabric-ca-client register -d --id.name Admin@weh.com --id.secret 1 --id.type user -u https://ca.weh.com:6056 fabric-ca-client register -d --id.name User1@weh.com --id.secret 1 --id.type user -u https://ca.weh.com:6056tna ca创建目录mkdir -p /root/workspace/tna-ca/&#123;crypto,admin&#125;启动tna caexport TNA_CA_HOME=/root/workspace/tna-ca export FABRIC_CA_SERVER_HOME=$TNA_CA_HOME/crypto export FABRIC_CA_SERVER_TLS_ENABLED=true export FABRIC_CA_SERVER_CSR_CN=ca.tna.com export FABRIC_CA_SERVER_CSR_HOSTS=ca.tna.com export FABRIC_CA_SERVER_DEBUG=true export FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:6057 nohup fabric-ca-server start -d -b rca:rcapw --port 6056 &gt; $TNA_CA_HOME/tna-ca-logs 2&gt;&amp;1 &amp;注册 tna peer0，admin,userexport TNA_CA_HOME=/root/workspace/tna-ca export FABRIC_CA_CLIENT_TLS_CERTFILES=$TNA_CA_HOME/crypto/ca-cert.pem export FABRIC_CA_CLIENT_HOME=$TNA_CA_HOME/admin fabric-ca-client enroll -d -u https://rca:rcapw@ca.tna.com:6056 fabric-ca-client register -d --id.name peer0.tna.com --id.secret 1 --id.type peer -u https://ca.tna.com:6056 fabric-ca-client register -d --id.name Admin@tna.com --id.secret 1 --id.type user -u https://ca.tna.com:6056 fabric-ca-client register -d --id.name User1@tna.com --id.secret 1 --id.type user -u https://ca.tna.com:6056 peer节点安装nkg peer0创建目录mkdir -p /root/workspace/nkg/peer0颁发 nkg peer0 证书export FABRIC_CA_CLIENT_HOME=/root/workspace/nkg/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/nkg-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://peer0.nkg.com:1@ca.nkg.com:6056颁发 TLS 证书export FABRIC_CA_CLIENT_MSPDIR=tls-msp export FABRIC_CA_CLIENT_HOME=/root/workspace/nkg/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tls-ca/crypto/ca-cert.pem fabric-ca-client enroll -d -u https://peer0.nkg.com:1@tls.cares.com:6052 --enrollment.profile tls --csr.hosts peer0.nkg.com将 /root/workspace/nkg/peer0/tls-msp/keystore 下的 key更名为 key.pem 颁发 nkg admin 证书mkdir -p /root/workspace/nkg/admin export FABRIC_CA_CLIENT_HOME=/root/workspace/nkg/admin export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/nkg-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://Admin@nkg.com:1@ca.nkg.com:6056复制admin证书mkdir -p /root/workspace/nkg/peer0/msp/admincerts cp /root/workspace/nkg/admin/msp/signcerts/cert.pem /root/workspace/nkg/peer0/msp/admincerts/cert.pem mkdir -p /root/workspace/nkg/admin/msp/admincerts cp /root/workspace/nkg/admin/msp/signcerts/cert.pem /root/workspace/nkg/admin/msp/admincerts/cert.pem启动peer0export FABRIC_CFG_PATH=/root/fabric/cfg export CORE_PEER_ID=peer0.nkg.com export CORE_PEER_ADDRESS=peer0.nkg.com:7051 export CORE_PEER_LOCALMSPID=nkgMSP export CORE_PEER_MSPCONFIGPATH=/root/workspace/nkg/peer0/msp export FABRIC_LOGGING_SPEC=info export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_CERT_FILE=/root/workspace/nkg/peer0/tls-msp/signcerts/cert.pem export CORE_PEER_TLS_KEY_FILE=/root/workspace/nkg/peer0/tls-msp/keystore/key.pem export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_GOSSIP_USELEADERELECTION=true export CORE_PEER_GOSSIP_ORGLEADER=false export CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.nkg.com:7051 export CORE_PEER_GOSSIP_SKIPHANDSHAKE=true nohup peer node start &gt; /root/workspace/nkg/peer0/peer0.log 2&gt;&amp;1 &amp;weh peer0创建目录mkdir -p /root/workspace/weh/peer0颁发 weh peer0 证书export FABRIC_CA_CLIENT_HOME=/root/workspace/weh/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/weh-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://peer0.weh.com:1@ca.weh.com:6056颁发 TLS 证书#sftp复制 tls.cares.com /root/workspace/tls-ca/crypto/ca-cert.pem 文件到 /root/workspace/tls-ca/crypto mkdir -p /root/workspace/tls-ca/crypto export FABRIC_CA_CLIENT_MSPDIR=tls-msp export FABRIC_CA_CLIENT_HOME=/root/workspace/weh/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tls-ca/crypto/ca-cert.pem fabric-ca-client enroll -d -u https://peer0.weh.com:1@tls.cares.com:6052 --enrollment.profile tls --csr.hosts peer0.weh.com将 /root/workspace/weh/peer0/tls-msp/keystore 下的 key更名为 key.pem 颁发 weh admin 证书mkdir -p /root/workspace/weh/admin export FABRIC_CA_CLIENT_HOME=/root/workspace/weh/admin export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/weh-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://Admin@weh.com:1@ca.weh.com:6056复制admin证书mkdir -p /root/workspace/weh/peer0/msp/admincerts cp /root/workspace/weh/admin/msp/signcerts/cert.pem /root/workspace/weh/peer0/msp/admincerts/cert.pem mkdir -p /root/workspace/weh/admin/msp/admincerts cp /root/workspace/weh/admin/msp/signcerts/cert.pem /root/workspace/weh/admin/msp/admincerts/cert.pem启动peer0export FABRIC_CFG_PATH=/root/fabric/cfg export CORE_PEER_ID=peer0.weh.com export CORE_PEER_ADDRESS=peer0.weh.com:7051 export CORE_PEER_LOCALMSPID=wehMSP export CORE_PEER_MSPCONFIGPATH=/root/workspace/weh/peer0/msp export FABRIC_LOGGING_SPEC=info export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_CERT_FILE=/root/workspace/weh/peer0/tls-msp/signcerts/cert.pem export CORE_PEER_TLS_KEY_FILE=/root/workspace/weh/peer0/tls-msp/keystore/key.pem export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/weh/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_GOSSIP_USELEADERELECTION=true export CORE_PEER_GOSSIP_ORGLEADER=false export CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.weh.com:7051 export CORE_PEER_GOSSIP_SKIPHANDSHAKE=true nohup peer node start &gt; /root/workspace/weh/peer0/peer0.log 2&gt;&amp;1 &amp;tna peer0创建目录mkdir -p /root/workspace/tna/peer0颁发 tna peer0 证书export FABRIC_CA_CLIENT_HOME=/root/workspace/tna/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tna-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://peer0.tna.com:1@ca.tna.com:6056颁发 TLS 证书#sftp复制 tls.cares.com /root/workspace/tls-ca/crypto/ca-cert.pem 文件到 /root/workspace/tls-ca/crypto mkdir -p /root/workspace/tls-ca/crypto export FABRIC_CA_CLIENT_MSPDIR=tls-msp export FABRIC_CA_CLIENT_HOME=/root/workspace/tna/peer0 export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tls-ca/crypto/ca-cert.pem fabric-ca-client enroll -d -u https://peer0.tna.com:1@tls.cares.com:6052 --enrollment.profile tls --csr.hosts peer0.tna.com将 /root/workspace/tna/peer0/tls-msp/keystore 下的 key更名为 key.pem 颁发 tna admin 证书mkdir -p /root/workspace/tna/admin export FABRIC_CA_CLIENT_HOME=/root/workspace/tna/admin export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tna-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://Admin@tna.com:1@ca.tna.com:6056复制admin证书mkdir -p /root/workspace/tna/peer0/msp/admincerts cp /root/workspace/tna/admin/msp/signcerts/cert.pem /root/workspace/tna/peer0/msp/admincerts/cert.pem mkdir -p /root/workspace/tna/admin/msp/admincerts cp /root/workspace/tna/admin/msp/signcerts/cert.pem /root/workspace/tna/admin/msp/admincerts/cert.pem启动peer0export FABRIC_CFG_PATH=/root/fabric/cfg export CORE_PEER_ID=peer0.tna.com export CORE_PEER_ADDRESS=peer0.tna.com:7051 export CORE_PEER_LOCALMSPID=tnaMSP export CORE_PEER_MSPCONFIGPATH=/root/workspace/tna/peer0/msp export FABRIC_LOGGING_SPEC=info export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_CERT_FILE=/root/workspace/tna/peer0/tls-msp/signcerts/cert.pem export CORE_PEER_TLS_KEY_FILE=/root/workspace/tna/peer0/tls-msp/keystore/key.pem export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/tna/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_GOSSIP_USELEADERELECTION=true export CORE_PEER_GOSSIP_ORGLEADER=false export CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.tna.com:7051 export CORE_PEER_GOSSIP_SKIPHANDSHAKE=true nohup peer node start &gt; /root/workspace/tna/peer0/peer0.log 2&gt;&amp;1 &amp;orderer 节点安装orderer.cares.com创建目录mkdir -p /root/workspace/cares/orderer颁发 orderer 证书export FABRIC_CA_CLIENT_HOME=/root/workspace/cares/orderer export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/order-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://orderer.cares.com:1@ca.cares.com:6054颁发 TLS 证书#sftp复制 tls.cares.com /root/workspace/tls-ca/crypto/ca-cert.pem 文件到 /root/workspace/tls-ca/crypto mkdir -p /root/workspace/tls-ca/crypto export FABRIC_CA_CLIENT_MSPDIR=tls-msp export FABRIC_CA_CLIENT_HOME=/root/workspace/cares/orderer export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/tls-ca/crypto/ca-cert.pem fabric-ca-client enroll -d -u https://orderer.cares.com:1@tls.cares.com:6052 --enrollment.profile tls --csr.hosts orderer.cares.com将 /root/workspace/cares/orderer/tls-msp/keystore 下的 key更名为 key.pem 颁发 orderer admin 证书mkdir -p /root/workspace/cares/admin export FABRIC_CA_CLIENT_HOME=/root/workspace/cares/admin export FABRIC_CA_CLIENT_TLS_CERTFILES=/root/workspace/order-ca/crypto/ca-cert.pem export FABRIC_CA_CLIENT_MSPDIR=msp fabric-ca-client enroll -d -u https://Admin@orderer.cares.com:1@ca.cares.com:6054复制admin证书mkdir -p /root/workspace/cares/orderer/msp/admincerts cp /root/workspace/cares/admin/msp/signcerts/cert.pem /root/workspace/cares/orderer/msp/admincerts/cert.pem mkdir -p /root/workspace/cares/admin/msp/admincerts cp /root/workspace/cares/admin/msp/signcerts/cert.pem /root/workspace/cares/admin/msp/admincerts/cert.pem创建组织msp目录mkdir -p /root/workspace/orgs-msp/&#123;nkg,weh,tna,cares&#125;复制各自peer0 下admin 目录msp到上述目录,这里以nkg为例 cp -r /root/workspace/nkg/admin/* /root/workspace/orgs-msp/nkg mkdir -p /root/workspace/orgs-msp/nkg/&#123;admincerts,tlscacerts&#125; cp /root/workspace/orgs-msp/nkg/signcerts/cert.pem /root/workspace/orgs-msp/nkg/admincerts cp /root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem /root/workspace/orgs-msp/nkg/admincerts/tlscacerts编写 /root/workspace/cfg/configtx.yamlOrganizations: - &amp;cares Name: 华东凯亚 ID: ordererMSP MSPDir: /root/workspace/orgs-msp/cares - &amp;nkg Name: 南京机场 ID: nkgMSP MSPDir: /root/workspace/orgs-msp/nkg AnchorPeers: - Host: peer0.nkg.com Port: 7051 - &amp;weh Name: 威海机场 ID: wehMSP MSPDir: /root/workspace/orgs-msp/weh AnchorPeers: - Host: peer0.weh.com Port: 7051 - &amp;tna Name: 济南机场 ID: tnaMSP MSPDir: /root/workspace/orgs-msp/tna AnchorPeers: - Host: peer0.tna.com Port: 7051 Application: &amp;ApplicationDefaults # Organizations is the list of orgs which are defined as participants on # the application side of the network Organizations: Profiles: OrgsOrdererGenesis: Orderer: OrdererType: solo Addresses: - orderer.cares.com:7050 BatchTimeout: 2s BatchSize: MaxMessageCount: 10 AbsoluteMaxBytes: 99 MB PreferredMaxBytes: 512 KB Organizations: - *cares Consortiums: SampleConsortium: Organizations: - *nkg - *weh - *tna OrgsChannel: Consortium: SampleConsortium Application: &lt;&lt;: *ApplicationDefaults Organizations: - *nkg - *weh - *tna生成 anchor 节点文件nkgexport FABRIC_CFG_PATH=/root/workspace/cfg/ configtxgen -profile OrgsChannel -outputAnchorPeersUpdate /root/workspace/blocks/nkgMSPanchors.tx -channelID securitycheck -asOrg nkgwehexport FABRIC_CFG_PATH=/root/workspace/cfg/ configtxgen -profile OrgsChannel -outputAnchorPeersUpdate /root/workspace/blocks/wehMSPanchors.tx -channelID securitycheck -asOrg wehtnaexport FABRIC_CFG_PATH=/root/workspace/cfg/ configtxgen -profile OrgsChannel -outputAnchorPeersUpdate /root/workspace/blocks/tnaMSPanchors.tx -channelID securitycheck -asOrg tna创建系统通道和应用通道export FABRIC_CFG_PATH=/root/workspace/cfg configtxgen -profile OrgsOrdererGenesis -outputBlock /root/workspace/blocks/genesis.block -channelID syschannel configtxgen -profile OrgsChannel -outputCreateChannelTx /root/workspace/blocks/channel.tx -channelID securitycheck启动 orderermkdir -p /root/workspace/cares/data export FABRIC_CFG_PATH=/root/fabric/cfg export ORDERER_HOME=/root/workspace/cares/data export ORDERER_HOST=orderer.cares.com export ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 export ORDERER_GENERAL_GENESISMETHOD=file export ORDERER_GENERAL_GENESISFILE=/root/workspace/blocks/genesis.block export ORDERER_GENERAL_LOCALMSPID=ordererMSP export ORDERER_GENERAL_LOCALMSPDIR=/root/workspace/cares/orderer/msp export ORDERER_GENERAL_TLS_ENABLED=true export ORDERER_GENERAL_TLS_CERTIFICATE=/root/workspace/cares/orderer/tls-msp/signcerts/cert.pem export ORDERER_GENERAL_TLS_PRIVATEKEY=/root/workspace/cares/orderer/tls-msp/keystore/key.pem export ORDERER_GENERAL_TLS_ROOTCAS=[/root/workspace/cares/orderer/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem] export ORDERER_GENERAL_LOGLEVEL=debug export ORDERER_DEBUG_BROADCASTTRACEDIR=/root/workspace/cares/data/logs nohup orderer start &gt; /root/workspace/cares/orderer/orderer.log 2&gt;&amp;1 &amp;创建应用通道securitycheck,并加入nkg 创建 securitycheckexport FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.nkg.com export CORE_PEER_ADDRESS=peer0.nkg.com:7051 export CORE_PEER_LOCALMSPID=nkgMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/nkg/admin/msp peer channel create -c securitycheck -f /root/workspace/blocks/channel.tx -o orderer.cares.com:7050 --outputBlock /root/workspace/blocks/securitycheck.block --tls --cafile /root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pemnkg 加入 securitycheckexport FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.nkg.com export CORE_PEER_ADDRESS=peer0.nkg.com:7051 export CORE_PEER_LOCALMSPID=nkgMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/nkg/admin/msp peer channel join -b /root/workspace/blocks/securitycheck.block peer channel update -o orderer.cares.com:7050 -c securitycheck -f /root/workspace/blocks/nkgMSPanchors.tx --tls --cafile /root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pemweh 加入 securitycheckexport FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.weh.com export CORE_PEER_ADDRESS=peer0.weh.com:7051 export CORE_PEER_LOCALMSPID=wehMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/weh/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/weh/admin/msp peer channel join -b /root/workspace/blocks/securitycheck.block peer channel update -o orderer.cares.com:7050 -c securitycheck -f /root/workspace/blocks/wehMSPanchors.tx --tls --cafile /root/workspace/weh/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pemtna 加入 securitycheckexport FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.tna.com export CORE_PEER_ADDRESS=peer0.tna.com:7051 export CORE_PEER_LOCALMSPID=tnaMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/tna/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/tna/admin/msp peer channel join -b /root/workspace/blocks/securitycheck.block peer channel update -o orderer.cares.com:7050 -c securitycheck -f /root/workspace/blocks/tnaMSPanchors.tx --tls --cafile /root/workspace/tna/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem安装、初始化链码nkg 安装链码export FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.nkg.com export CORE_PEER_ADDRESS=peer0.nkg.com:7051 export CORE_PEER_LOCALMSPID=nkgMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/nkg/admin/msp peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golangweh 安装链码export FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.weh.com export CORE_PEER_ADDRESS=peer0.weh.com:7051 export CORE_PEER_LOCALMSPID=wehMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/weh/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/weh/admin/msp peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golangtna 安装链码export FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.tna.com export CORE_PEER_ADDRESS=peer0.tna.com:7051 export CORE_PEER_LOCALMSPID=tnaMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/tna/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/tna/admin/msp peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golangnkg 初始化并调用链码交易export FABRIC_CFG_PATH=/root/fabric/cfg/ export FABRIC_LOGGING_SPEC=DEBUG export CORE_PEER_ID=peer0.nkg.com export CORE_PEER_ADDRESS=peer0.nkg.com:7051 export CORE_PEER_LOCALMSPID=nkgMSP export CORE_PEER_TLS_ENABLED=true export CORE_PEER_TLS_ROOTCERT_FILE=/root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem export CORE_PEER_MSPCONFIGPATH=/root/workspace/nkg/admin/msp peer chaincode instantiate -o orderer.cares.com:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;OR (&#39;tnaMSP.member&#39;,&#39;wehMSP.member&#39;,&#39;nkgMSP.member&#39;)&quot; --tls --cafile /root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode invoke -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;10&quot;]&#125;&#39; --tls --cafile /root/workspace/nkg/peer0/tls-msp/tlscacerts/tls-tls-cares-com-6052.pem peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39;区块链浏览器 编写go语言业务链码 package main import ( &quot;bytes&quot; &quot;encoding/json&quot; &quot;fmt&quot; &quot;github.com/hyperledger/fabric/core/chaincode/shim&quot; sc &quot;github.com/hyperledger/fabric/protos/peer&quot; &quot;strconv&quot; ) type SecuritySmartContract struct &#123; &#125; type SecurityRecord struct &#123; Id string `json:&quot;id&quot;` // 身份证号 CreateTime string `json:&quot;createTime&quot;` // 违规时间 EventType string `json:&quot;eventType&quot;` // 违规类型 Desc string `json:&quot;desc&quot;` // 违规描述 Score int `json:&quot;score&quot;` // 加减分 Org string `json:&quot;org&quot;` // 组织 &#125; func (s *SecuritySmartContract) Init(APIstub shim.ChaincodeStubInterface) sc.Response &#123; return shim.Success(nil) &#125; func (s *SecuritySmartContract) Invoke(APIstub shim.ChaincodeStubInterface) sc.Response &#123; function, args := APIstub.GetFunctionAndParameters() if function == &quot;add&quot; &#123; return s.add(APIstub, args) &#125; else if function == &quot;queryById&quot; &#123; return s.queryById(APIstub,args) &#125; return shim.Error(&quot;Invalid Smart Contract function name.&quot;) &#125; func (s *SecuritySmartContract) add(APIstub shim.ChaincodeStubInterface, args []string) sc.Response &#123; if len(args) != 6 &#123; return shim.Error(&quot;Incorrect number of arguments. Expecting 5&quot;) &#125; score,_ := strconv.Atoi(args[4]) var r = SecurityRecord&#123;Id: args[0], CreateTime: args[1], EventType: args[2], Desc: args[3],Score: score,Org:args[5]&#125; carAsBytes, _ := json.Marshal(r) APIstub.PutState(args[0], carAsBytes) return shim.Success(nil) &#125; func (s *SecuritySmartContract) queryById(APIstub shim.ChaincodeStubInterface, args []string) sc.Response &#123; if len(args) != 1 &#123; return shim.Error(&quot;Incorrect number of arguments. Expecting 1&quot;) &#125; var id string = args[0]; resultsIterator, err := APIstub.GetHistoryForKey(id) if err != nil &#123; return shim.Error(err.Error()) &#125; defer resultsIterator.Close() var buffer bytes.Buffer buffer.WriteString(&quot;[&quot;) bArrayMemberAlreadyWritten := false for resultsIterator.HasNext() &#123; queryResponse, err := resultsIterator.Next() if err != nil &#123; return shim.Error(err.Error()) &#125; // Add a comma before array members, suppress it for the first array member if bArrayMemberAlreadyWritten == true &#123; buffer.WriteString(&quot;,&quot;) &#125; buffer.WriteString(string(queryResponse.Value)) bArrayMemberAlreadyWritten = true &#125; buffer.WriteString(&quot;]&quot;) fmt.Printf(&quot;- queryById:\\n%s\\n&quot;, buffer.String()) return shim.Success(buffer.Bytes()) &#125; func main() &#123; err := shim.Start(new(SecuritySmartContract)) if err != nil &#123; fmt.Printf(&quot;Error creating new Smart Contract: %s&quot;, err) &#125; &#125;","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"区块链 内网 无互联网","slug":"区块链-内网-无互联网","permalink":"http://wangcj.com.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E5%86%85%E7%BD%91-%E6%97%A0%E4%BA%92%E8%81%94%E7%BD%91/"}],"author":"王长金"},{"title":"Arachni 安全扫描","slug":"Arachni-安全扫描","date":"2020-01-16T09:30:00.000Z","updated":"2021-01-06T13:10:40.000Z","comments":true,"path":"2020/01/16/Arachni-安全扫描/","link":"","permalink":"http://wangcj.com.cn/2020/01/16/Arachni-%E5%AE%89%E5%85%A8%E6%89%AB%E6%8F%8F/","excerpt":"","text":"Arachni是一个包含很多特性、模块化的、高性能的Ruby框架，目的是帮助渗透测试人员和管理者评估现代web应用程序的安全。Arachni是免费、源代码开源的，它支持所有主流操作系统，如：Windows、Mac OS X 、Linux，通过便携式可移植包的形式进行分发，使其满足即时部署的要求。Arachni可导出评估报告。 Arachni是一个能够满足很多使用场景的通用的安全扫描框架，范围覆盖非常广，既包括小到一个命令行指令的扫描，又包括高性能的网格扫描、脚本认证审计、多用户多web合作平台。此外，它简单的REST API使集成变得轻而易举。 最后，由于其集成的浏览器环境，Arachni可以支持高度复杂的web应用程序，这些应用程序大量使用JavaScript、HTML5、DOM操纵和AJAX等技术。Arachni为现代web应用程序技术提供一流的覆盖率、漏洞检测和准确性。 Arachni下载点击下载按钮后，在如下图页面中，选择适合自己系统的安装包。本文中选择的是Windows版的arachni-1.5.1-0.5.12-windows-x86_64.exe。 http://www.arachni-scanner.com/download/ Arachni安装Arachni的两种工作模式本文中使用的是web应用模式，双击arachni_web.bat，在浏览器中访问http://localhost:9292/ Arachni的登录查看README.txt，里面包含Default account details Arachni - Web Application Security Scanner Framework Homepage - http://arachni-scanner.com Blog - http://arachni-scanner.com/blog Documentation - https://github.com/Arachni/arachni/wiki Support - http://support.arachni-scanner.com GitHub page - http://github.com/Arachni/arachni Code Documentation - http://rubydoc.info/github/Arachni/arachni Author - Tasos &quot;Zapotek&quot; Laskos (http://twitter.com/Zap0tek) Twitter - http://twitter.com/ArachniScanner Copyright - 2010-2017 Sarosys LLC License - Arachni Public Source License v1.0 -- see LICENSE file) -------------------------------------------------------------------------------- To use Arachni run the executables under &quot;bin\\&quot;. To launch the Web interface: bin\\arachni_web Default account details: Administrator: E-mail address: admin@admin.admin Password: administrator User: E-mail address: user@user.user Password: regular_user For a quick scan: via the command-line interface: bin\\arachni http://test.com To see the available CLI options: bin\\arachni -h Upgrading/migrating -------------- To migrate your existing data into this new package please see: https://github.com/Arachni/arachni-ui-web/wiki/upgrading Troubleshooting -------------- See the included TROUBLESHOOTING file. Disclaimer -------------- Arachni is free software and you are allowed to use it as you see fit. However, I can&#39;t be held responsible for your actions or for any damage caused by the use of this software. Copying -------------- For the Arachni license please see the LICENSE file. The bundled PhantomJS (http://phantomjs.org/) executable is distributed under the BSD license: https://github.com/ariya/phantomjs/blob/master/LICENSE.BSD 输入管理员的email和password 点击登录按钮，进入如下图所示页面 选择合适的数据库 默认情况下，该接口使用一个SQLite3数据库，并且允许无配置的开箱即用体验。但是，这种设置不适合较大的工作负载，可能会导致稳定性问题或崩溃。 如果您计划在任何给定的时间只运行几个扫描，那么应该不会有任何问题，但是，如果您计划运行和管理多个活动扫描和分派器，那么建议您使用PostgreSQL。 不幸的是，您不能在数据库之间移动数据;因此，如果您打算使用默认数据库来评估Arachni，那么在转移到PostgreSQL之前，请避免执行您不希望丢失其数据的操作。 点击右上角的Administrator，选择Edit account，可以对当前登录用户的密码进行修改。 Arachni的帮助文档https://github.com/Arachni/arachni-ui-web/wiki Arachni新建扫描 Arachni扫描结果 点击具体某个漏洞，可以查看其详情","categories":[{"name":"安全","slug":"安全","permalink":"http://wangcj.com.cn/categories/%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"安全扫描","slug":"安全扫描","permalink":"http://wangcj.com.cn/tags/%E5%AE%89%E5%85%A8%E6%89%AB%E6%8F%8F/"},{"name":"arachni","slug":"arachni","permalink":"http://wangcj.com.cn/tags/arachni/"}],"author":"王长金"},{"title":"JAVA SDK 调用链码 ","slug":"USING-FABRIC-JAVA-SDK","date":"2020-01-16T05:46:00.000Z","updated":"2021-01-06T13:10:43.000Z","comments":true,"path":"2020/01/16/USING-FABRIC-JAVA-SDK/","link":"","permalink":"http://wangcj.com.cn/2020/01/16/USING-FABRIC-JAVA-SDK/","excerpt":"","text":"1,prerequisites1,setup a fabric network follows 《endorsement transaction》2,create a project using a IDE. this case using vscode2,system initial codespackage com.cares.fabrictest.config; import java.util.EnumSet; import java.util.Properties; import com.cares.fabrictest.model.LocalUser; import org.hyperledger.fabric.sdk.ChaincodeID; import org.hyperledger.fabric.sdk.Channel; import org.hyperledger.fabric.sdk.Enrollment; import org.hyperledger.fabric.sdk.HFClient; import org.hyperledger.fabric.sdk.Orderer; import org.hyperledger.fabric.sdk.Peer; import org.hyperledger.fabric.sdk.QueryByChaincodeRequest; import org.hyperledger.fabric.sdk.TransactionProposalRequest; import org.hyperledger.fabric.sdk.TransactionRequest; import org.hyperledger.fabric.sdk.Channel.PeerOptions; import org.hyperledger.fabric.sdk.Peer.PeerRole; import org.hyperledger.fabric.sdk.security.CryptoSuite; import org.hyperledger.fabric.sdk.security.CryptoSuiteFactory; import org.hyperledger.fabric_ca.sdk.HFCAClient; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; @Configuration public class Init &#123; @Value(&quot;$&#123;ca.address&#125;&quot;) String ca_address; @Value(&quot;$&#123;peer.address&#125;&quot;) String peer_address; @Value(&quot;$&#123;peer.name&#125;&quot;) String peer_name; @Value(&quot;$&#123;orderer.address&#125;&quot;) String orderer_address; @Value(&quot;orderer.name&quot;) String orderer_name; @Value(&quot;$&#123;channelname&#125;&quot;) String channelname; @Value(&quot;$&#123;chaincodename&#125;&quot;) String chaincodename; @Value(&quot;$&#123;mspId&#125;&quot;) String mspId; @Value(&quot;$&#123;adminuser&#125;&quot;) String adminuser; @Value(&quot;$&#123;adminpass&#125;&quot;) String adminpass; @Bean public HFCAClient caClient() &#123; Properties props = new Properties(); HFCAClient caClient = null; CryptoSuite cryptoSuite = null; try &#123; props.put(&quot;allowAllHostNames&quot;, &quot;true&quot;); // https加密的 CA需要 放置此属性 ca证书 props.put(&quot;pemBytes&quot;, new byte[0]); caClient = HFCAClient.createNewInstance(ca_address, props); cryptoSuite = CryptoSuiteFactory.getDefault().getCryptoSuite(); caClient.setCryptoSuite(cryptoSuite); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return caClient; &#125; @Bean public HFClient hfClient(HFCAClient hfcaClient) &#123; /* * String keyFile = &quot;../solo-network/msp/keystore/user-key.pem&quot;; String certFile * = &quot;../solo-network/msp/signcerts/user-cert.pem&quot;; */ HFClient client = null; try &#123; Enrollment enrollment = hfcaClient.enroll(adminuser, adminpass); LocalUser user = new LocalUser(&quot;Admin&quot;, mspId, enrollment); client = HFClient.createNewInstance(); client.setCryptoSuite(CryptoSuite.Factory.getCryptoSuite()); client.setUserContext(user); &#125; catch (Exception e) &#123; &#125; return client; &#125; @Bean public Channel channel(HFClient hfClient) throws Exception &#123; Channel channel = hfClient.newChannel(channelname); Peer peer = hfClient.newPeer(peer_name, peer_address); PeerOptions peerOptions = PeerOptions.createPeerOptions(); EnumSet&lt;PeerRole&gt; roles = EnumSet.of(PeerRole.SERVICE_DISCOVERY); peerOptions.setPeerRoles(roles); channel.addPeer(peer,peerOptions); Orderer orderer = hfClient.newOrderer(orderer_name, orderer_address); channel.addOrderer(orderer); channel.initialize(); return channel; &#125; @Bean public ChaincodeID chaincodeID() &#123; ChaincodeID cid = ChaincodeID.newBuilder().setName(chaincodename).build(); return cid; &#125; @Bean public QueryByChaincodeRequest queryByChaincodeRequest(HFClient hfClient, ChaincodeID cid) &#123; QueryByChaincodeRequest req = hfClient.newQueryProposalRequest(); req.setChaincodeID(cid); return req; &#125; @Bean public TransactionProposalRequest transactionProposalRequest(ChaincodeID cid,HFClient hfClient) &#123; TransactionProposalRequest transactionProposalRequest = hfClient.newTransactionProposalRequest(); transactionProposalRequest.setChaincodeID(cid); transactionProposalRequest.setChaincodeLanguage(TransactionRequest.Type.JAVA); return transactionProposalRequest; &#125; &#125; 3, service codepackage com.cares.fabrictest.service.impl; import java.util.Collection;import java.util.concurrent.ExecutionException; import com.cares.fabrictest.service.SecurityCheckService; import org.hyperledger.fabric.sdk.BlockEvent;import org.hyperledger.fabric.sdk.Channel;import org.hyperledger.fabric.sdk.Channel.DiscoveryOptions;import org.hyperledger.fabric.sdk.ProposalResponse;import org.hyperledger.fabric.sdk.QueryByChaincodeRequest;import org.hyperledger.fabric.sdk.TransactionProposalRequest;import org.hyperledger.fabric.sdk.exception.InvalidArgumentException;import org.hyperledger.fabric.sdk.exception.ProposalException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service; @Servicepublic class SecurityCheckServiceImpl implements SecurityCheckService { @Value(&quot;$&#123;airportCode&#125;&quot;) String airportCode; @Autowired Channel channel; @Autowired QueryByChaincodeRequest queryByChaincodeRequest; @Autowired TransactionProposalRequest transactionProposalRequest; @Override public String getHis(String id) &#123; queryByChaincodeRequest.setFcn(&quot;queryCheckHis&quot;); queryByChaincodeRequest.setArgs(id); ProposalResponse[] rsp = new ProposalResponse[0]; try &#123; rsp = channel.queryByChaincode(queryByChaincodeRequest).toArray(new ProposalResponse[0]); &#125; catch (InvalidArgumentException e) &#123; e.printStackTrace(); &#125; catch (ProposalException e) &#123; e.printStackTrace(); &#125; String ret = rsp[0].getProposalResponse().getResponse().getPayload().toStringUtf8(); System.out.format(&quot;rsp message =&gt; %s\\n&quot;,ret); return ret; &#125; @Override public void setCheckRecord(String id, String desc) &#123; transactionProposalRequest.setFcn(&quot;saveCheck&quot;); transactionProposalRequest.setArgs(id,airportCode,desc); Collection&lt;ProposalResponse&gt; rsp2 = null; try &#123; rsp2 = channel.sendTransactionProposal(transactionProposalRequest); &#125; catch (ProposalException e) &#123; e.printStackTrace(); &#125; catch (InvalidArgumentException e) &#123; e.printStackTrace(); &#125; BlockEvent.TransactionEvent event = null; try &#123; event = channel.sendTransaction(rsp2).get(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; catch (ExecutionException e) &#123; e.printStackTrace(); &#125; System.out.format(&quot;txid: %s\\n&quot;, event.getTransactionID()); System.out.format(&quot;valid: %b\\n&quot;, event.isValid()); &#125; @Override public String queryValueA() &#123; queryByChaincodeRequest.setFcn(&quot;query&quot;); queryByChaincodeRequest.setArgs(&quot;a&quot;); ProposalResponse[] rsp = new ProposalResponse[0]; try &#123; rsp = channel.queryByChaincode(queryByChaincodeRequest).toArray(new ProposalResponse[0]); &#125; catch (InvalidArgumentException e) &#123; e.printStackTrace(); &#125; catch (ProposalException e) &#123; e.printStackTrace(); &#125; String ret = rsp[0].getProposalResponse().getResponse().getPayload().toStringUtf8(); return ret; &#125; @Override public void transfer(Long val) &#123; transactionProposalRequest.setFcn(&quot;invoke&quot;); transactionProposalRequest.setArgs(&quot;a&quot;,&quot;b&quot;,val.toString()); Collection&lt;ProposalResponse&gt; rsp2 = null; try &#123; DiscoveryOptions discoveryOptions = DiscoveryOptions.createDiscoveryOptions(); discoveryOptions.setForceDiscovery(true); rsp2 = channel.sendTransactionProposalToEndorsers(transactionProposalRequest,discoveryOptions); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; BlockEvent.TransactionEvent event = null; try &#123; event = channel.sendTransaction(rsp2).get(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; catch (ExecutionException e) &#123; e.printStackTrace(); &#125; System.out.format(&quot;txid: %s\\n&quot;, event.getTransactionID()); System.out.format(&quot;valid: %b\\n&quot;, event.isValid()); &#125;} 4,测试代码4.1 查询链码 @Test void testCA() throws MalformedURLException &#123; System.out.println(checkService.queryValueA()); &#125;4.2 做背书交易 @Test void testTransfer()&#123; Integer before = Integer.valueOf(checkService.queryValueA()); System.out.format(&quot;before transaction a=%s\\n&quot;, before); checkService.transfer(1L); Integer after = Integer.valueOf(checkService.queryValueA()); System.out.format(&quot;after transaction a=%s\\n&quot;, after); assertThat(after, is(before-1)); &#125;5,测试 6，GRPCS加密加密方式与上述配置区别 6.1peer 地址，orderer地址 要以grpcs 开头，fabric 组件都开启了 tls加密 channelname=securitycheck chaincodename=securitycheck orderer.address=grpcs://orderer.cares.com:7050 orderer.name=orderer.cares.com spring.profiles.active=nkg ca.address=https://192.168.53.50:6056 peer.address=grpcs://peer0.nkg.com:7051 peer.name=peer0.nkg.com mspId=nkgMSP airportCode=NKG adminuser=Admin@nkg.com adminpass=1 6.2 java bean @Bean public HFCAClient caClient() &#123; Properties props = new Properties(); HFCAClient caClient = null; CryptoSuite cryptoSuite = null; try &#123; props.put(&quot;allowAllHostNames&quot;, &quot;true&quot;); // https加密的 CA需要 放置此属性 ca证书 props.put(&quot;pemBytes&quot;, new byte[0]); ClassPathResource classPathResource = new ClassPathResource(&quot;nkg/ca-nkg-com-6056.pem&quot;); byte[] pems = FileUtils.readFileToByteArray(classPathResource.getFile()); props.put(&quot;pemBytes&quot;, pems); caClient = HFCAClient.createNewInstance(ca_address, props); cryptoSuite = CryptoSuiteFactory.getDefault().getCryptoSuite(); caClient.setCryptoSuite(cryptoSuite); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return caClient; &#125;@Bean public Channel channel(HFClient hfClient) throws Exception &#123; ClassPathResource classPathResource = new ClassPathResource(&quot;nkg/tls-tls-cares-com-6052.pem&quot;); byte[] pems = FileUtils.readFileToByteArray(classPathResource.getFile()); Channel channel = hfClient.newChannel(channelname); Properties peerProps = new Properties(); peerProps.put(&quot;pemBytes&quot;, pems); peerProps.put(&quot;sslProvider&quot;, &quot;openSSL&quot;); peerProps.put(&quot;negotiationType&quot;, &quot;TLS&quot;); Peer peer = hfClient.newPeer(peer_name, peer_address,peerProps); PeerOptions peerOptions = PeerOptions.createPeerOptions(); EnumSet&lt;PeerRole&gt; roles = EnumSet.of(PeerRole.SERVICE_DISCOVERY); peerOptions.setPeerRoles(roles); channel.addPeer(peer,peerOptions); Properties orderProps = new Properties(); orderProps.put(&quot;pemBytes&quot;, pems); orderProps.put(&quot;sslProvider&quot;, &quot;openSSL&quot;); orderProps.put(&quot;negotiationType&quot;, &quot;TLS&quot;); Orderer orderer = hfClient.newOrderer(orderer_name, orderer_address,orderProps); channel.addOrderer(orderer); channel.initialize(); return channel; &#125; 6.3 测试","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"fabric-java-skd","slug":"fabric-java-skd","permalink":"http://wangcj.com.cn/tags/fabric-java-skd/"},{"name":"endorsement","slug":"endorsement","permalink":"http://wangcj.com.cn/tags/endorsement/"}],"author":"王长金"},{"title":"PLSQL DEVELOPER 插件开发","slug":"PLSQL-DEVELOPER-插件开发","date":"2020-01-15T10:23:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/01/15/PLSQL-DEVELOPER-插件开发/","link":"","permalink":"http://wangcj.com.cn/2020/01/15/PLSQL-DEVELOPER-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/","excerpt":"","text":"一、场景：使用PLSQL编写sql时，有时候会从excel复制一大段数据来执行 in 的操作 比如，select field from tab where field2 in (‘a’,’b’….)，其中field2 是字符类型，那么我们需要给复制过来的每一项加上引号，每一项后面加上逗号。可以用插件快速解决这个问题。 PLSQL插件开发过程和文档在PLSQL安装目录plugindoc有详细文档和列子。这里列出解决上述问题的代码 二、创建菜单char* MenuItemInterface(int Index, bool CreateMenuItem_) &#123; switch (Index) &#123; case 1 : if (CreateMenuItem_) return &quot;我的自定义插件 / &amp;Excel 复制内容处理&quot;; processCopiedText(); return NULL; &#125; return &quot;&quot;; &#125;三、处理复制内容void SplitString(const std::string&amp; s, std::vector&lt;std::string&gt;&amp; v, const std::string&amp; c) &#123; std::string::size_type pos1, pos2; pos2 = s.find(c); pos1 = 0; while (std::string::npos != pos2) &#123; v.push_back(s.substr(pos1, pos2 - pos1)); pos1 = pos2 + c.size(); pos2 = s.find(c, pos1); &#125; if (pos1 != s.length()) v.push_back(s.substr(pos1)); &#125; void processCopiedText() &#123; std::stringstream ss; std::stringstream out; ss&lt;&lt;IDE_GetSelectedText(); std::vector&lt;std::string&gt; v; SplitString(ss.str(), v, &quot;\\r\\n&quot;); for (std::vector&lt;std::string&gt;::size_type i = 0; i != v.size(); ++i) &#123; out &lt;&lt; &quot;&#39;&quot; &lt;&lt; v[i] &lt;&lt; &quot;&#39;&quot;; if (i != v.size() - 1) &#123; out &lt;&lt; &quot;,&quot;&lt;&lt;&quot;\\r\\n&quot;; &#125; &#125; // ShowMessage(out.str().c_str()); std::string proccessedText = out.str(); IDE_SetText((char*)proccessedText.c_str()); &#125;四、实际效果","categories":[{"name":"工具","slug":"工具","permalink":"http://wangcj.com.cn/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"PLSQL","slug":"PLSQL","permalink":"http://wangcj.com.cn/tags/PLSQL/"},{"name":"插件","slug":"插件","permalink":"http://wangcj.com.cn/tags/%E6%8F%92%E4%BB%B6/"}],"author":"王长金"},{"title":"FABRIC 背书交易","slug":"FABRIC-背书交易","date":"2020-01-15T08:04:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/01/15/FABRIC-背书交易/","link":"","permalink":"http://wangcj.com.cn/2020/01/15/FABRIC-%E8%83%8C%E4%B9%A6%E4%BA%A4%E6%98%93/","excerpt":"","text":"1,基础目录网盘地址链接：https://share.weiyun.com/5jn0Kzf 密码：tcvgxn 为减少体积，blockchain-explorer node_modules 全部删除，需要npm install cd $BLOCKCHAIN_EXPLORER/ npm installcd $BLOCKCHAIN_EXPLORER/client npm installcd $BLOCKCHAIN_EXPLORER/ ./start.sh链码实例化指定背书策略是全员背书第三个组织加入前的策略 &quot;AND (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot;第三个组织加入后的策略 &quot;AND (&#39;njairport.member&#39;,&#39;airwh.member&#39;,&#39;tna.member&#39;)&quot;2,自动化脚本 testret()&#123; if [ $1 -ne 0 ]; then exit 1; fi printf &quot;[\\033[36m %s \\033[0m]\\n&quot; &quot;OK&quot; &#125; unsetenv()&#123; unset FABRIC_CFG_PATH unset CORE_PEER_LOCALMSPID unset CORE_PEER_ADDRESS unset CORE_PEER_MSPCONFIGPATH &#125; printf &quot;\\n&quot; TEST_HOME=$(cd $(dirname $0); pwd) ROOT_MSP=$TEST_HOME/certs/root mkdir -p $ROOT_MSP FABRIC_CA=http://admin:admin@orderer.cares.com:5054 printf &#39;%-70s&#39; &#39;clear certs&#39; rm -fr $TEST_HOME/certs/* testret $? if [ -d &quot;$TEST_HOME/logs&quot; ];then rm -fr $TEST_HOME/logs/* else mkdir -p $TEST_HOME/logs fi if [ -d &quot;$TEST_HOME/tmp&quot; ];then rm -fr $TEST_HOME/tmp/* else mkdir -p $TEST_HOME/tmp fi printf &#39;%-70s&#39; &#39;start FABRIC-CA&#39; $TEST_HOME/server/start testret $? reqcerts()&#123; name=$1 type=$2 CERT_DIR=ordererOrgs NODE_DIR=orderers if [ &quot;$type&quot; = &quot;peer&quot; ]; then CERT_DIR=&quot;peerOrgs&quot; NODE_DIR=&quot;peers&quot; fi printf &quot;\\t%-62s&quot; &quot;get cacert of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/ fabric-ca-client getcacert -M $TEST_HOME/certs/$CERT_DIR/$name/msp/ -H $TEST_HOME/certs/root/ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;register orgAdmin of $name&quot; fabric-ca-client register --id.name Admin@$name.cares.com \\ --id.secret 111111 \\ --id.type client \\ --id.affiliation com.cares.$name \\ --id.attrs &#39;&quot;hf.Registrar.Roles=client,orderer,peer,user&quot;,&quot;hf.Registrar.DelegateRoles=client,orderer,peer,user&quot;,hf.Registrar.Attributes=*,hf.GenCRL=true,hf.Revoker=true,hf.AffiliationMgr=true,role=admin:ecert&#39; \\ -H $TEST_HOME/certs/root/ \\ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? sleep 1s printf &#39;\\t%-62s&#39; &quot;enroll orgAdmin of $name&quot; fabric-ca-client enroll -u http://Admin@$name.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;copy admin certs of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts ADMINCERTFROM=$TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/* ADMINCERTTO=$TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts/ cp $ADMINCERTFROM $ADMINCERTTO testret $? mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts cp $ADMINCERTFROM $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts printf &#39;\\t%-62s\\n&#39; &quot;register subAccount using admin of $2&quot; accounts=$3 if [ ! -n &quot;$accounts&quot; ];then accounts=1 fi for((i=0;i&lt;$accounts;i++)); do fabric-ca-client register -u http://localhost:5054 --id.name $type$i@$name.cares.com --id.secret 111111 --id.type $type \\ --id.affiliation com.cares.$name --id.attrs &quot;role=$type:ecert&quot; -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 fabric-ca-client enroll -u http://orderer1@orderer.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts cp $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/cert.pem $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts done &#125; delaffiliation()&#123; fabric-ca-client affiliation list --affiliation $1 -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ];then printf &#39;\\t%-62s&#39; &quot; delete org $1&quot; fabric-ca-client affiliation remove $1 --force -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? fi &#125; printf &#39;%-70s&#39; &#39; wait FABRIC-CA process to be startup&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 0.1s netstat -an|grep 5054|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done testret 0 mkdir -p $ROOT_MSP printf &#39;%-70s&#39; &#39;register MSP ROOT&#39; fabric-ca-client enroll -u $FABRIC_CA -H $ROOT_MSP &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;delete orgs affiliations&#39; delaffiliation com printf &#39;%-70s&#39; &quot;WORK DIR:$TEST_HOME&quot; testret 0 PEER_PIDS=$(ps -ef|grep &#39;peer node start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$PEER_PIDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop peers processes&#39; kill -9 $PEER_PIDS testret $? fi sleep 1s ORDER_PID=$(ps -ef|grep &#39;orderer start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$ORDER_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop orderer process&#39; kill -9 $ORDER_PID testret $? fi sleep 1s EXPLORE_PID=$(ps -ef|grep &#39;node main.js name - hyperledger-explorer&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$EXPLORE_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop FABRIC EXPPLORER&#39; cd $TEST_HOME/blockchain-explorer nohup ./stop.sh &gt; /dev/null 2&gt;&amp;1 &amp; testret $? fi sleep 2s printf &#39;%-70s&#39; &#39;clear data files&#39; rm -rf rm -fr $TEST_HOME/test/data/* testret $? IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop chaincode containers&#39; docker stop $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode containers&#39; docker rm $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode images&#39; docker rmi $(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi mkdir -p $ROOT_MSP printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com&#39; fabric-ca-client affiliation add com -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares&#39; fabric-ca-client affiliation add com.cares -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.orderer&#39; fabric-ca-client affiliation add com.cares.orderer -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.nkg&#39; fabric-ca-client affiliation add com.cares.nkg -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.weh&#39; fabric-ca-client affiliation add com.cares.weh -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.tna&#39; fabric-ca-client affiliation add com.cares.tna -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? mkdir -p $TEST_HOME/certs/&#123;peerOrgs,ordererOrgs&#125; printf &#39;%-70s\\n&#39; &quot;get cert of orderer&quot; reqcerts orderer orderer printf &#39;%-70s\\n&#39; &quot;get cert of nkg&quot; reqcerts nkg peer printf &#39;%-70s\\n&#39; &quot;get cert of weh&quot; reqcerts weh peer printf &#39;%-70s\\n&#39; &quot;get cert of tna&quot; reqcerts tna peer if [ &quot;$1&quot; = &quot;down&quot; ];then exit 0 fi printf &#39;%-70s&#39; &#39;1,create system genesis&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/cfg configtxgen -profile SampleSingleMSPSolo -outputBlock $TEST_HOME/test/data/orderer.genesis.block -channelID sys-security &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;2,create channel genesis&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputCreateChannelTx $TEST_HOME/test/data/securityCheck.channel.tx -channelID securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;3,create anchor njairport&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/njairportMSPanchors.tx -channelID securitycheck -asOrg njairport &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;4,create anchor airwh&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/airwhMSPanchors.tx -channelID securitycheck -asOrg airwh &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;5,start orderer&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/order nohup orderer start &gt; $TEST_HOME/logs/orderer.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;6,start peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg/ nohup peer node start &gt; $TEST_HOME/logs/njairport-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;7,start peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh nohup peer node start &gt; $TEST_HOME/logs/airwh-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s\\n\\t%-62s&#39; &#39;8,create ledger channel &#39; &#39;wait orderer process&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 1s netstat -an|grep 7050|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer channel create -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/securityCheck.channel.tx --outputBlock $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;9,nkg peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;10,weh peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;11,update anchor njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/njairportMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;12,update anchor airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/airwhMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? ## java 链码部署需要下载依赖，编译较慢 这里用go链码快速演示 go链码依赖于 $GOPATH printf &#39;%-70s&#39; &#39;13,install chaincode peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;14,install chaincode peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;15, instantiate chaincode peer0 njairport a=200,b=200&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer chaincode instantiate -o orderer.cares.com:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;AND (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;16, peer0 njairport a transfer 5 to b&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg IMGSTATUS=1 printf &#39;\\t%-62s&#39; &#39;wait chaincode container up&#39; while [ $IMGSTATUS -ne 0 ] do ps -ef|grep &#39;chaincode -peer.address=&#39;|grep -v grep &gt; /dev/null 2&gt;&amp;1 IMGSTATUS=$? done sleep 5s peer chaincode invoke -o orderer.cares.com:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;5&quot;]&#125;&#39; --peerAddresses peer0.nkg.cares.com:7051 --peerAddresses peer0.weh.cares.com:7053 --waitForEvent &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;17,peer0 njairport query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg sleep 3s peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;18,peer0 njairport query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;19,peer0 airwh query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;20,peer0 airwh query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; docker ps|grep &#39;hyperledger/explorer-db&#39; &gt; /dev/null if [ $? -eq 0 ]; then docker exec -it -u postgres postgresql dropdb fabricexplorer &gt; /dev/null sleep 1s docker exec -it -u postgres postgresql /opt/createdb.sh &gt; /dev/null sleep 1s rm -fr $TEST_HOME/blockchain-explorer/wallet/* rm -fr $TEST_HOME/blockchain-explorer/logs/* PRE_KEY=`cat $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json|grep -o &#39;keystore/.*sk&#39;|awk -F / &#39;&#123;print $2&#125;&#39;` if [ -n &quot;$PRE_KEY&quot; ]; then CUR_KEY=`ls $TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp/keystore/` sed -i &quot;s#$PRE_KEY#$CUR_KEY#g&quot; $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json cd $TEST_HOME/blockchain-explorer nohup ./start.sh &gt; /dev/null 2&gt;&amp;1 &amp; fi fi printf &#39;%-70s\\n&#39; &#39;Hyperledger Fabric CA 简易网络 搭建成功&#39; if [ &quot;$1&quot; != &quot;add&quot; ];then exit 0 fi printf &#39;%-70s\\n&#39; &#39;动态组织加入 济南机场&#39; export FABRIC_LOGGING_SPEC=ERROR mkdir -p $TEST_HOME/tmp unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg/tna printf &#39;%-70s&#39; &#39;Generating TNA config material&#39; configtxgen -printOrg tna &gt; $TEST_HOME/tmp/tna.json testret $? printf &#39;%-70s&#39; &#39;Fetching the most recent configuration block for the channel&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer channel fetch config $TEST_HOME/tmp/config_block.pb -o orderer.cares.com:7050 -c securitycheck testret $? printf &#39;%-70s&#39; &#39;Decoding config block to JSON&#39; configtxlator proto_decode --input $TEST_HOME/tmp/config_block.pb --type common.Block | jq .data.data[0].payload.data.config &gt; $TEST_HOME/tmp/config.json testret $? printf &#39;%-70s&#39; &#39;Modify the configuration to append the new org&#39; jq -s &#39;.[0] * &#123;&quot;channel_group&quot;:&#123;&quot;groups&quot;:&#123;&quot;Application&quot;:&#123;&quot;groups&quot;: &#123;&quot;tna&quot;:.[1]&#125;&#125;&#125;&#125;&#125;&#39; $TEST_HOME/tmp/config.json $TEST_HOME/tmp/tna.json &gt; $TEST_HOME/tmp/modified_config.json testret $? printf &#39;%-70s&#39; &#39;write it as a transaction&#39; configtxlator proto_encode --input $TEST_HOME/tmp/config.json --type common.Config &gt; $TEST_HOME/tmp/original_config.pb configtxlator proto_encode --input $TEST_HOME/tmp/modified_config.json --type common.Config &gt; $TEST_HOME/tmp/modified_config.pb configtxlator compute_update --channel_id securitycheck --original $TEST_HOME/tmp/original_config.pb --updated $TEST_HOME/tmp/modified_config.pb &gt; $TEST_HOME/tmp/config_update.pb configtxlator proto_decode --input $TEST_HOME/tmp/config_update.pb --type common.ConfigUpdate &gt; $TEST_HOME/tmp/config_update.json echo &#39;&#123;&quot;payload&quot;:&#123;&quot;header&quot;:&#123;&quot;channel_header&quot;:&#123;&quot;channel_id&quot;:&quot;&#39;securitycheck&#39;&quot;, &quot;type&quot;:2&#125;&#125;,&quot;data&quot;:&#123;&quot;config_update&quot;:&#39;$(cat $TEST_HOME/tmp/config_update.json)&#39;&#125;&#125;&#125;&#39; | jq . &gt; $TEST_HOME/tmp/config_update_in_envelope.json configtxlator proto_encode --input $TEST_HOME/tmp/config_update_in_envelope.json --type common.Envelope &gt; $TEST_HOME/tmp/org3_update_in_envelope.pb testret $? printf &#39;%-70s&#39; &#39;Signing config transaction&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer channel signconfigtx -f $TEST_HOME/tmp/org3_update_in_envelope.pb testret $? printf &#39;%-70s&#39; &#39;Submit config transaction&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer channel update -f $TEST_HOME/tmp/org3_update_in_envelope.pb -c securitycheck -o orderer.cares.com:7050 testret $? printf &#39;%-70s&#39; &#39;startup peer0 of tna&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna nohup peer node start &gt; $TEST_HOME/logs/peer0.tna.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s\\n&#39; &#39;Have Org3 peers join network&#39; printf &#39;\\t%-62s&#39; &quot;Fetching channel config block from orderer...&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/tna/users/Admin@tna.cares.com/msp peer channel fetch 0 $TEST_HOME/tmp/securitycheck.block -o orderer.cares.com:7050 -c securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? export FABRIC_LOGGING_SPEC=ERROR printf &#39;\\t%-62s&#39; &quot;JOIN channel...&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/tna/users/Admin@tna.cares.com/msp sleep 5s peer channel join -b $TEST_HOME/tmp/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;tna install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/tna/users/Admin@tna.cares.com/msp peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &quot;Upgrade chaincode to have Org3 peers on the network&quot; printf &#39;\\t%-62s&#39; &quot;nkg install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;weh install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/weh/users/Admin@weh.cares.com/msp peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;nkg upgrade chaincode test 2.0, initial a=90,b=210&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp peer chaincode upgrade -o orderer.cares.com:7050 -C securitycheck -n test -v 2.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;90&quot;,&quot;b&quot;,&quot;210&quot;]&#125;&#39; -P &quot;AND (&#39;njairport.member&#39;,&#39;airwh.member&#39;,&#39;tna.member&#39;)&quot; &gt; /dev/null testret $? sleep 3s printf &#39;%-70s\\n&#39; &quot;test chaincode after tna join network&quot; printf &#39;\\t%-62s\\n&#39; &quot;tna query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s&#39; &quot;tna do transaction a transfer 10 to b&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode invoke -o orderer.cares.com:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;10&quot;]&#125;&#39; --peerAddresses peer0.nkg.cares.com:7051 --peerAddresses peer0.weh.cares.com:7053 --peerAddresses peer0.tna.cares.com:8051 --waitForEvent &gt; /dev/null 2&gt;&amp;1 testret $? sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;tna query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;nkg query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;weh query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-70s\\n&#39; &quot;济南机场成功加入&quot; 3,区块链浏览器查看背书交易详情3.1 第三个组织加入前 3.2 第三个组织加入后","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"fabric","slug":"fabric","permalink":"http://wangcj.com.cn/tags/fabric/"},{"name":"endorsement","slug":"endorsement","permalink":"http://wangcj.com.cn/tags/endorsement/"},{"name":"动态组织加入","slug":"动态组织加入","permalink":"http://wangcj.com.cn/tags/%E5%8A%A8%E6%80%81%E7%BB%84%E7%BB%87%E5%8A%A0%E5%85%A5/"}],"author":"王长金"},{"title":"FABRIC 组织动态加入","slug":"FABRIC-组织动态加入","date":"2020-01-14T10:13:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/01/14/FABRIC-组织动态加入/","link":"","permalink":"http://wangcj.com.cn/2020/01/14/FABRIC-%E7%BB%84%E7%BB%87%E5%8A%A8%E6%80%81%E5%8A%A0%E5%85%A5/","excerpt":"","text":"1、在《FABRIC CA 简易网络搭建》基础上tna是要加入的新组织 参考 fabric samples Org3 的脚本整理 2、自动化脚本 testret()&#123; if [ $1 -ne 0 ]; then exit 1; fi printf &quot;[\\033[36m %s \\033[0m]\\n&quot; &quot;OK&quot; &#125; unsetenv()&#123; unset FABRIC_CFG_PATH unset CORE_PEER_LOCALMSPID unset CORE_PEER_ADDRESS unset CORE_PEER_MSPCONFIGPATH &#125; printf &quot;\\n&quot; TEST_HOME=$(cd $(dirname $0); pwd) ROOT_MSP=$TEST_HOME/certs/root mkdir -p $ROOT_MSP FABRIC_CA=http://admin:admin@orderer.cares.com:5054 printf &#39;%-70s&#39; &#39;clear certs&#39; rm -fr $TEST_HOME/certs/* testret $? if [ -d &quot;$TEST_HOME/logs&quot; ];then rm -fr $TEST_HOME/logs/* else mkdir -p $TEST_HOME/logs fi if [ -d &quot;$TEST_HOME/tmp&quot; ];then rm -fr $TEST_HOME/tmp/* else mkdir -p $TEST_HOME/tmp fi printf &#39;%-70s&#39; &#39;start FABRIC-CA&#39; $TEST_HOME/server/start testret $? reqcerts()&#123; name=$1 type=$2 CERT_DIR=ordererOrgs NODE_DIR=orderers if [ &quot;$type&quot; = &quot;peer&quot; ]; then CERT_DIR=&quot;peerOrgs&quot; NODE_DIR=&quot;peers&quot; fi printf &quot;\\t%-62s&quot; &quot;get cacert of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/ fabric-ca-client getcacert -M $TEST_HOME/certs/$CERT_DIR/$name/msp/ -H $TEST_HOME/certs/root/ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;register orgAdmin of $name&quot; fabric-ca-client register --id.name Admin@$name.cares.com \\ --id.secret 111111 \\ --id.type client \\ --id.affiliation com.cares.$name \\ --id.attrs &#39;&quot;hf.Registrar.Roles=client,orderer,peer,user&quot;,&quot;hf.Registrar.DelegateRoles=client,orderer,peer,user&quot;,hf.Registrar.Attributes=*,hf.GenCRL=true,hf.Revoker=true,hf.AffiliationMgr=true,role=admin:ecert&#39; \\ -H $TEST_HOME/certs/root/ \\ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? sleep 1s printf &#39;\\t%-62s&#39; &quot;enroll orgAdmin of $name&quot; fabric-ca-client enroll -u http://Admin@$name.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;copy admin certs of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts ADMINCERTFROM=$TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/* ADMINCERTTO=$TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts/ cp $ADMINCERTFROM $ADMINCERTTO testret $? mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts cp $ADMINCERTFROM $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts printf &#39;\\t%-62s\\n&#39; &quot;register subAccount using admin of $2&quot; accounts=$3 if [ ! -n &quot;$accounts&quot; ];then accounts=1 fi for((i=0;i&lt;$accounts;i++)); do fabric-ca-client register -u http://localhost:5054 --id.name $type$i@$name.cares.com --id.secret 111111 --id.type $type \\ --id.affiliation com.cares.$name --id.attrs &quot;role=$type:ecert&quot; --id.attrs &quot;role=admin:ecert&quot; -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 fabric-ca-client enroll -u http://orderer1@orderer.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts cp $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/cert.pem $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts done &#125; delaffiliation()&#123; fabric-ca-client affiliation list --affiliation $1 -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ];then printf &#39;\\t%-62s&#39; &quot; delete org $1&quot; fabric-ca-client affiliation remove $1 --force -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? fi &#125; printf &#39;%-70s&#39; &#39; wait FABRIC-CA process to be startup&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 0.1s netstat -an|grep 5054|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done testret 0 mkdir -p $ROOT_MSP printf &#39;%-70s&#39; &#39;register MSP ROOT&#39; fabric-ca-client enroll -u $FABRIC_CA -H $ROOT_MSP &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;delete orgs affiliations&#39; delaffiliation com printf &#39;%-70s&#39; &quot;WORK DIR:$TEST_HOME&quot; testret 0 PEER_PIDS=$(ps -ef|grep &#39;peer node start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$PEER_PIDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop peers processes&#39; kill -9 $PEER_PIDS testret $? fi sleep 1s ORDER_PID=$(ps -ef|grep &#39;orderer start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$ORDER_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop orderer process&#39; kill -9 $ORDER_PID testret $? fi sleep 1s EXPLORE_PID=$(ps -ef|grep &#39;node main.js name - hyperledger-explorer&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$EXPLORE_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop FABRIC EXPPLORER&#39; cd $TEST_HOME/blockchain-explorer nohup ./stop.sh &gt; /dev/null 2&gt;&amp;1 &amp; testret $? fi sleep 2s printf &#39;%-70s&#39; &#39;clear data files&#39; rm -rf rm -fr $TEST_HOME/test/data/* testret $? IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop chaincode containers&#39; docker stop $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode containers&#39; docker rm $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode images&#39; docker rmi $(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi mkdir -p $ROOT_MSP printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com&#39; fabric-ca-client affiliation add com -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares&#39; fabric-ca-client affiliation add com.cares -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.orderer&#39; fabric-ca-client affiliation add com.cares.orderer -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.nkg&#39; fabric-ca-client affiliation add com.cares.nkg -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.weh&#39; fabric-ca-client affiliation add com.cares.weh -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.tna&#39; fabric-ca-client affiliation add com.cares.tna -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? mkdir -p $TEST_HOME/certs/&#123;peerOrgs,ordererOrgs&#125; printf &#39;%-70s\\n&#39; &quot;get cert of orderer&quot; reqcerts orderer orderer printf &#39;%-70s\\n&#39; &quot;get cert of nkg&quot; reqcerts nkg peer printf &#39;%-70s\\n&#39; &quot;get cert of weh&quot; reqcerts weh peer printf &#39;%-70s\\n&#39; &quot;get cert of tna&quot; reqcerts tna peer if [ &quot;$1&quot; = &quot;down&quot; ];then exit 0 fi printf &#39;%-70s&#39; &#39;1,create system genesis&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/cfg configtxgen -profile SampleSingleMSPSolo -outputBlock $TEST_HOME/test/data/orderer.genesis.block -channelID sys-security &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;2,create channel genesis&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputCreateChannelTx $TEST_HOME/test/data/securityCheck.channel.tx -channelID securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;3,create anchor njairport&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/njairportMSPanchors.tx -channelID securitycheck -asOrg njairport &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;4,create anchor airwh&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/airwhMSPanchors.tx -channelID securitycheck -asOrg airwh &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;5,start orderer&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/order nohup orderer start &gt; $TEST_HOME/logs/orderer.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;6,start peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg/ nohup peer node start &gt; $TEST_HOME/logs/njairport-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;7,start peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh nohup peer node start &gt; $TEST_HOME/logs/airwh-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s\\n\\t%-62s&#39; &#39;8,create ledger channel &#39; &#39;wait orderer process&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 1s netstat -an|grep 7050|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel create -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/securityCheck.channel.tx --outputBlock $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;9,nkg peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;10,weh peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;11,update anchor njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/njairportMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;12,update anchor airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/airwhMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? ## java 链码部署需要下载依赖，编译较慢 这里用go链码快速演示 go链码依赖于 $GOPATH printf &#39;%-70s&#39; &#39;13,install chaincode peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;14, instantiate chaincode peer0 njairport a=200,b=200&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer chaincode instantiate -o orderer.cares.com:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;OR (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;15, peer0 njairport a transfer 5 to b&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg IMGSTATUS=1 printf &#39;\\t%-62s&#39; &#39;wait chaincode container up&#39; while [ $IMGSTATUS -ne 0 ] do ps -ef|grep &#39;chaincode -peer.address=&#39;|grep -v grep &gt; /dev/null 2&gt;&amp;1 IMGSTATUS=$? done sleep 5s peer chaincode invoke -o orderer.cares.com:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;5&quot;]&#125;&#39; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;16,peer0 njairport query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg sleep 3s peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;17,peer0 njairport query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;18,install chaincode peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;19,peer0 airwh query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;20,peer0 airwh query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; docker ps|grep &#39;hyperledger/explorer-db&#39; &gt; /dev/null if [ $? -eq 0 ]; then docker exec -it -u postgres postgresql dropdb fabricexplorer &gt; /dev/null sleep 1s docker exec -it -u postgres postgresql /opt/createdb.sh &gt; /dev/null sleep 1s rm -fr $TEST_HOME/blockchain-explorer/wallet/* rm -fr $TEST_HOME/blockchain-explorer/logs/* PRE_KEY=`cat $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json|grep -o &#39;keystore/.*sk&#39;|awk -F / &#39;&#123;print $2&#125;&#39;` if [ -n &quot;$PRE_KEY&quot; ]; then CUR_KEY=`ls $TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp/keystore/` sed -i &quot;s#$PRE_KEY#$CUR_KEY#g&quot; $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json cd $TEST_HOME/blockchain-explorer nohup ./start.sh &gt; /dev/null 2&gt;&amp;1 &amp; fi fi printf &#39;%-70s\\n&#39; &#39;Hyperledger Fabric CA 简易网络 搭建成功&#39; if [ $1 != &quot;add&quot; ];then exit 0 fi printf &#39;%-70s\\n&#39; &#39;动态组织加入 济南机场&#39; export FABRIC_LOGGING_SPEC=ERROR mkdir -p $TEST_HOME/tmp unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg/tna printf &#39;%-70s&#39; &#39;Generating TNA config material&#39; configtxgen -printOrg tna &gt; $TEST_HOME/tmp/tna.json testret $? printf &#39;%-70s&#39; &#39;Fetching the most recent configuration block for the channel&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer channel fetch config $TEST_HOME/tmp/config_block.pb -o orderer.cares.com:7050 -c securitycheck testret $? printf &#39;%-70s&#39; &#39;Decoding config block to JSON&#39; configtxlator proto_decode --input $TEST_HOME/tmp/config_block.pb --type common.Block | jq .data.data[0].payload.data.config &gt; $TEST_HOME/tmp/config.json testret $? printf &#39;%-70s&#39; &#39;Modify the configuration to append the new org&#39; jq -s &#39;.[0] * &#123;&quot;channel_group&quot;:&#123;&quot;groups&quot;:&#123;&quot;Application&quot;:&#123;&quot;groups&quot;: &#123;&quot;tna&quot;:.[1]&#125;&#125;&#125;&#125;&#125;&#39; $TEST_HOME/tmp/config.json $TEST_HOME/tmp/tna.json &gt; $TEST_HOME/tmp/modified_config.json testret $? printf &#39;%-70s&#39; &#39;write it as a transaction&#39; configtxlator proto_encode --input $TEST_HOME/tmp/config.json --type common.Config &gt; $TEST_HOME/tmp/original_config.pb configtxlator proto_encode --input $TEST_HOME/tmp/modified_config.json --type common.Config &gt; $TEST_HOME/tmp/modified_config.pb configtxlator compute_update --channel_id securitycheck --original $TEST_HOME/tmp/original_config.pb --updated $TEST_HOME/tmp/modified_config.pb &gt; $TEST_HOME/tmp/config_update.pb configtxlator proto_decode --input $TEST_HOME/tmp/config_update.pb --type common.ConfigUpdate &gt; $TEST_HOME/tmp/config_update.json echo &#39;&#123;&quot;payload&quot;:&#123;&quot;header&quot;:&#123;&quot;channel_header&quot;:&#123;&quot;channel_id&quot;:&quot;&#39;securitycheck&#39;&quot;, &quot;type&quot;:2&#125;&#125;,&quot;data&quot;:&#123;&quot;config_update&quot;:&#39;$(cat $TEST_HOME/tmp/config_update.json)&#39;&#125;&#125;&#125;&#39; | jq . &gt; $TEST_HOME/tmp/config_update_in_envelope.json configtxlator proto_encode --input $TEST_HOME/tmp/config_update_in_envelope.json --type common.Envelope &gt; $TEST_HOME/tmp/org3_update_in_envelope.pb testret $? printf &#39;%-70s&#39; &#39;Signing config transaction&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer channel signconfigtx -f $TEST_HOME/tmp/org3_update_in_envelope.pb testret $? printf &#39;%-70s&#39; &#39;Submit config transaction&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer channel update -f $TEST_HOME/tmp/org3_update_in_envelope.pb -c securitycheck -o orderer.cares.com:7050 testret $? printf &#39;%-70s&#39; &#39;startup peer0 of tna&#39; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna nohup peer node start &gt; $TEST_HOME/logs/peer0.tna.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s\\n&#39; &#39;Have Org3 peers join network&#39; printf &#39;\\t%-62s&#39; &quot;Fetching channel config block from orderer...&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer channel fetch 0 $TEST_HOME/tmp/securitycheck.block -o orderer.cares.com:7050 -c securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? export FABRIC_LOGGING_SPEC=ERROR printf &#39;\\t%-62s&#39; &quot;JOIN channel...&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna sleep 5s peer channel join -b $TEST_HOME/tmp/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;tna install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &quot;Upgrade chaincode to have Org3 peers on the network&quot; printf &#39;\\t%-62s&#39; &quot;nkg install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;weh install chaincode test 2.0&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer chaincode install -n test -v 2.0 -l golang -p chaincode_example02 &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;nkg upgrade chaincode test 2.0, initial a=90,b=210&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode upgrade -o orderer.cares.com:7050 -C securitycheck -n test -v 2.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;90&quot;,&quot;b&quot;,&quot;210&quot;]&#125;&#39; -P &quot;OR (&#39;njairport.member&#39;,&#39;airwh.member&#39;,&#39;tna.member&#39;)&quot; &gt; /dev/null testret $? sleep 3s printf &#39;%-70s\\n&#39; &quot;test chaincode after tna join network&quot; printf &#39;\\t%-62s\\n&#39; &quot;tna query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s&#39; &quot;tna do transaction a transfer 10 to b&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode invoke -o orderer.cares.com:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;10&quot;]&#125;&#39; &gt; /dev/null 2&gt;&amp;1 testret $? sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;tna query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/tna peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;nkg query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; sleep 2s printf &#39;\\t%-62s\\n&#39; &quot;weh query a b value&quot; unsetenv export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-70s\\n&#39; &quot;济南机场成功加入&quot; 3、效果图","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"fabric","slug":"fabric","permalink":"http://wangcj.com.cn/tags/fabric/"},{"name":"动态组织加入","slug":"动态组织加入","permalink":"http://wangcj.com.cn/tags/%E5%8A%A8%E6%80%81%E7%BB%84%E7%BB%87%E5%8A%A0%E5%85%A5/"}],"author":"王长金"},{"title":"Fabric CA 简易网络搭建","slug":"Fabric-CA-简易网络搭建","date":"2020-01-10T06:07:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/01/10/Fabric-CA-简易网络搭建/","link":"","permalink":"http://wangcj.com.cn/2020/01/10/Fabric-CA-%E7%AE%80%E6%98%93%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/","excerpt":"","text":"1、最终目录结构 CURRENT_WORK_DIR ~/workspace/ca_solo 先不考虑组件之间的通信tls加密初始 一个orderer节点，两个组织每个组织一个peer节点 /etc/hosts 127.0.0.1 orderer.cares.sh.cn 127.0.0.1 peer0.nkg.cares.sh.cn 127.0.0.1 peer0.weh.cares.com 127.0.0.1 peer0.nkg.cares.com 127.0.0.1 peer0.njairport.com 127.0.0.1 peer1.njairport.com 127.0.0.1 peer0.airwh.com 127.0.0.1 peer1.airwh.com 127.0.0.1 orderer 127.0.0.1 orderer1.cares.com2、启动 FABRIC CAfabric-ca-server init -b admin:admin -H /home/wangcj/workspace/ca_test/servermv fabric-ca-server-config.yaml msp-config.yamlmsp-config.yaml version: 1.4.4 port: 5054 cors: enabled: false origins: - &quot;*&quot; debug: false crlsizelimit: 512000 tls: enabled: false certfile: keyfile: clientauth: type: noclientcert certfiles: ca: name: 上海民航华东凯亚系统集成有限公司 keyfile: certfile: chainfile: crl: # Specifies expiration for the generated CRL. The number of hours # specified by this property is added to the UTC time, the resulting time # is used to set the &#39;Next Update&#39; date of the CRL. expiry: 24h registry: maxenrollments: -1 identities: - name: admin pass: admin type: client affiliation: &quot;&quot; attrs: hf.Registrar.Roles: &quot;*&quot; hf.Registrar.DelegateRoles: &quot;*&quot; hf.Revoker: true hf.IntermediateCA: true hf.GenCRL: true hf.Registrar.Attributes: &quot;*&quot; hf.AffiliationMgr: true db: type: sqlite3 datasource: msp.db tls: enabled: false certfiles: client: certfile: keyfile: affiliations: signing: default: usage: - digital signature expiry: 8760h profiles: ca: usage: - cert sign - crl sign expiry: 43800h caconstraint: isca: true maxpathlen: 0 tls: usage: - signing - key encipherment - server auth - client auth - key agreement expiry: 8760h csr: cn: fabric-ca-server keyrequest: algo: ecdsa size: 256 names: - C: CN ST: &quot;NanJing&quot; L: O: 上海民航华东凯亚系统集成有限公司 OU: 南京研发中心 hosts: - localhost.localdomain - localhost ca: expiry: 131400h pathlength: 1 idemix: rhpoolsize: 1000 nonceexpiration: 15s noncesweepinterval: 15m bccsp: default: SW sw: hash: SHA2 security: 256 filekeystore: # The directory used for the software file-based keystore keystore: msp/keystore cacount: cafiles: intermediate: parentserver: url: caname: enrollment: hosts: profile: label: tls: certfiles: client: certfile: keyfile: cfg: identities: passwordattempts: 10 allowremove: true affiliations: allowremove: true operations: tls: enabled: false cert: file: key: file: clientAuthRequired: false clientRootCAs: files: [] metrics: provider: disabled statsd: network: udp address: 127.0.0.1:8125 writeInterval: 10s prefix: servernohup fabric-ca-server start -c /home/wangcj/workspace/ca_solo/server/msp-config.yaml &gt; /dev/null 2&gt;&amp;1 &amp;3、申请证书3.1 登记服务msp根节点 fabric-ca-client enroll -u http://admin:admin@orderer1.cares.com:5054 -H /home/wangcj/workspace/ca_solo/client/root/3.2 注册组织层级关系fabric-ca-client affiliation add com -H /home/wangcj/workspace/ca_solo/client/root/ fabric-ca-client affiliation add com.cares -H /home/wangcj/workspace/ca_solo/client/root/ fabric-ca-client affiliation add com.cares.orderer -H /home/wangcj/workspace/ca_solo/client/root/ fabric-ca-client affiliation add com.cares.nkg -H /home/wangcj/workspace/ca_solo/client/root/ fabric-ca-client affiliation add com.cares.weh -H /home/wangcj/workspace/ca_solo/client/root/[wangcj@localhost server]$ fabric-ca-client affiliation list -H /home/wangcj/workspace/ca_solo/client/root/ affiliation: com affiliation: com.cares affiliation: com.cares.orderer affiliation: com.cares.nkg affiliation: com.cares.weh3.3 注册证书 注册证书部分参考自动脚本 reqcerts函数，此处不是很准确 3.3.1 orderer 证书mkdir -p /home/wangcj/workspace/ca_solo/client/ordererfabric-ca-client register --id.name orderer.cares.com --id.type orderer --id.affiliation com.care.orderer --id.secret orderer-password --home /home/wangcj/workspace/ca_solo/client/root/ fabric-ca-client enroll -u http://orderer.cares.com:orderer-password@127.0.0.1:5054 --home /home/wangcj/workspace/ca_solo/client/orderer/mkdir -p /home/wangcj/workspace/ca_solo/client/orderer/msp/admincerts cp /home/wangcj/workspace/ca_solo/client/orderer/msp/signcerts/cert.pem /home/wangcj/workspace/ca_solo/client/orderer/msp/admincerts3.3.2 NKG peer0 证书mkdir -p /home/wangcj/workspace/ca_solo/client/nkgfabric-ca-client register --id.name peer0.nkg.cares.com --id.type peer --id.affiliation com.cares.nkg --id.secret peer-password --home /home/wangcj/workspace/ca_solo/client/root/fabric-ca-client enroll -u http://peer0.nkg.cares.com:peer-password@127.0.0.1:5054 --home /home/wangcj/workspace/ca_solo/client/nkg/mkdir -p /home/wangcj/workspace/ca_solo/client/nkg/msp/admincerts cp /home/wangcj/workspace/ca_solo/client/nkg/msp/signcerts/cert.pem /home/wangcj/workspace/ca_solo/client/nkg/msp/admincerts3.3.3 WEH peer0 证书mkdir -p /home/wangcj/workspace/ca_solo/client/wehfabric-ca-client register --id.name peer0.weh.cares.sh --id.type peer --id.affiliation com.cares.weh --id.secret peer-password -H /home/wangcj/workspace/ca_solo/client/root/fabric-ca-client enroll -u http://peer0.weh.cares.sh:peer-password@127.0.0.1:5054 --home /home/wangcj/workspace/ca_solo/client/weh/mkdir -p /home/wangcj/workspace/ca_solo/client/weh/msp/admincerts cp /home/wangcj/workspace/ca_solo/client/weh/msp/signcerts/cert.pem /home/wangcj/workspace/ca_solo/client/weh/msp/admincerts4、启动FABRIC 网络4.1 修改 configtx.yaml--- Organizations: - &amp;orderCares Name: orderCares ID: orderCares Policies: &amp;orderCarestPolicies Readers: Type: Signature Rule: &quot;OR(&#39;orderCares.member&#39;)&quot; Writers: Type: Signature Rule: &quot;OR(&#39;orderCares.member&#39;)&quot; Admins: Type: Signature Rule: &quot;OR(&#39;orderCares.admin&#39;)&quot; MSPDir: /home/wangcj/workspace/ca_solo/client/orderer/msp - &amp;njairport Name: njairport ID: njairport Policies: &amp;njairportPolicies Readers: Type: Signature Rule: &quot;OR(&#39;njairport.member&#39;)&quot; Writers: Type: Signature Rule: &quot;OR(&#39;njairport.member&#39;)&quot; Admins: Type: Signature Rule: &quot;OR(&#39;njairport.admin&#39;)&quot; MSPDir: /home/wangcj/workspace/ca_solo/client/nkg/msp AnchorPeers: - Host: peer0.nkg.cares.com port: 7051 - &amp;airwh Name: airwh ID: airwh Policies: &amp;airwhPolicies Readers: Type: Signature Rule: &quot;OR(&#39;airwh.member&#39;)&quot; Writers: Type: Signature Rule: &quot;OR(&#39;airwh.member&#39;)&quot; Admins: Type: Signature Rule: &quot;OR(&#39;airwh.admin&#39;)&quot; MSPDir: /home/wangcj/workspace/ca_solo/client/weh/msp AnchorPeers: - Host: peer0.weh.cares.com port: 7053 Capabilities: Channel: &amp;ChannelCapabilities V1_4_3: true V1_3: false V1_1: false Orderer: &amp;OrdererCapabilities V1_4_2: true V1_1: false Application: &amp;ApplicationCapabilities V1_4_2: true V1_3: false V1_2: false V1_1: false Application: &amp;ApplicationDefaults ACLs: &amp;ACLsDefault lscc/ChaincodeExists: /Channel/Application/Readers lscc/GetDeploymentSpec: /Channel/Application/Readers lscc/GetChaincodeData: /Channel/Application/Readers lscc/GetInstantiatedChaincodes: /Channel/Application/Readers qscc/GetChainInfo: /Channel/Application/Readers qscc/GetBlockByNumber: /Channel/Application/Readers qscc/GetBlockByHash: /Channel/Application/Readers qscc/GetTransactionByID: /Channel/Application/Readers qscc/GetBlockByTxID: /Channel/Application/Readers cscc/GetConfigBlock: /Channel/Application/Readers cscc/GetConfigTree: /Channel/Application/Readers cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers peer/Propose: /Channel/Application/Writers peer/ChaincodeToChaincode: /Channel/Application/Readers event/Block: /Channel/Application/Readers event/FilteredBlock: /Channel/Application/Readers Organizations: Policies: &amp;ApplicationDefaultPolicies Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; Capabilities: &lt;&lt;: *ApplicationCapabilities Orderer: &amp;OrdererDefaults OrdererType: solo Addresses: - orderer.cares.sh.cn:7050 BatchTimeout: 2s BatchSize: MaxMessageCount: 500 AbsoluteMaxBytes: 10 MB PreferredMaxBytes: 2 MB MaxChannels: 0 Kafka: Brokers: - kafka0:9092 - kafka1:9092 - kafka2:9092 EtcdRaft: Consenters: - Host: raft0.example.com Port: 7050 ClientTLSCert: path/to/ClientTLSCert0 ServerTLSCert: path/to/ServerTLSCert0 - Host: raft1.example.com Port: 7050 ClientTLSCert: path/to/ClientTLSCert1 ServerTLSCert: path/to/ServerTLSCert1 - Host: raft2.example.com Port: 7050 ClientTLSCert: path/to/ClientTLSCert2 ServerTLSCert: path/to/ServerTLSCert2 Options: TickInterval: 500ms ElectionTick: 10 HeartbeatTick: 1 MaxInflightBlocks: 5 SnapshotIntervalSize: 20 MB Organizations: Policies: Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; BlockValidation: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Capabilities: &lt;&lt;: *OrdererCapabilities Channel: &amp;ChannelDefaults Policies: Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; Capabilities: &lt;&lt;: *ChannelCapabilities Profiles: SampleSingleMSPSolo: &lt;&lt;: *ChannelDefaults Orderer: &lt;&lt;: *OrdererDefaults OrdererType: solo Organizations: - *orderCares Consortiums: SampleConsortium: Organizations: - *njairport - *airwh SampleSingleMSPSoloChannel: Consortium: SampleConsortium &lt;&lt;: *ChannelDefaults Application: &lt;&lt;: *ApplicationDefaults Organizations: - *njairport - *airwh Capabilities: &lt;&lt;: *ApplicationCapabilities4.2 peer0 NKG orderer.yaml# Copyright IBM Corp. All Rights Reserved. # # SPDX-License-Identifier: Apache-2.0 # --- ################################################################################ # # Orderer Configuration # # - This controls the type and configuration of the orderer. # ################################################################################ General: # Ledger Type: The ledger type to provide to the orderer. # Two non-production ledger types are provided for test purposes only: # - ram: An in-memory ledger whose contents are lost on restart. # - json: A simple file ledger that writes blocks to disk in JSON format. # Only one production ledger type is provided: # - file: A production file-based ledger. LedgerType: file # Listen address: The IP on which to bind to listen. ListenAddress: 0.0.0.0 # Listen port: The port on which to bind to listen. ListenPort: 7050 # TLS: TLS settings for the GRPC server. TLS: Enabled: false # PrivateKey governs the file location of the private key of the TLS certificate. PrivateKey: /home/wangcj/workspace/solo/config/crypto-config/ordererOrganizations/cares.sh.cn/orderers/orderer.cares.sh.cn/tls/server.key # Certificate governs the file location of the server TLS certificate. Certificate: /home/wangcj/workspace/solo/config/crypto-config/ordererOrganizations/cares.sh.cn/orderers/orderer.cares.sh.cn/tls/server.crt RootCAs: - /home/wangcj/workspace/solo/config/crypto-config/ordererOrganizations/cares.sh.cn/orderers/orderer.cares.sh.cn/tls/ca.crt ClientAuthRequired: false ClientRootCAs: # Keepalive settings for the GRPC server. Keepalive: # ServerMinInterval is the minimum permitted time between client pings. # If clients send pings more frequently, the server will # disconnect them. ServerMinInterval: 60s # ServerInterval is the time between pings to clients. ServerInterval: 7200s # ServerTimeout is the duration the server waits for a response from # a client before closing the connection. ServerTimeout: 20s # Cluster settings for ordering service nodes that communicate with other ordering service nodes # such as Raft based ordering service. Cluster: # SendBufferSize is the maximum number of messages in the egress buffer. # Consensus messages are dropped if the buffer is full, and transaction # messages are waiting for space to be freed. SendBufferSize: 10 # ClientCertificate governs the file location of the client TLS certificate # used to establish mutual TLS connections with other ordering service nodes. ClientCertificate: # ClientPrivateKey governs the file location of the private key of the client TLS certificate. ClientPrivateKey: # The below 4 properties should be either set together, or be unset together. # If they are set, then the orderer node uses a separate listener for intra-cluster # communication. If they are unset, then the general orderer listener is used. # This is useful if you want to use a different TLS server certificates on the # client-facing and the intra-cluster listeners. # ListenPort defines the port on which the cluster listens to connections. ListenPort: # ListenAddress defines the IP on which to listen to intra-cluster communication. ListenAddress: # ServerCertificate defines the file location of the server TLS certificate used for intra-cluster # communication. ServerCertificate: # ServerPrivateKey defines the file location of the private key of the TLS certificate. ServerPrivateKey: # Genesis method: The method by which the genesis block for the orderer # system channel is specified. Available options are &quot;provisional&quot;, &quot;file&quot;: # - provisional: Utilizes a genesis profile, specified by GenesisProfile, # to dynamically generate a new genesis block. # - file: Uses the file provided by GenesisFile as the genesis block. GenesisMethod: file # Genesis profile: The profile to use to dynamically generate the genesis # block to use when initializing the orderer system channel and # GenesisMethod is set to &quot;provisional&quot;. See the configtx.yaml file for the # descriptions of the available profiles. Ignored if GenesisMethod is set to # &quot;file&quot;. GenesisProfile: SampleSingleMSPSolo # Genesis file: The file containing the genesis block to use when # initializing the orderer system channel and GenesisMethod is set to # &quot;file&quot;. Ignored if GenesisMethod is set to &quot;provisional&quot;. GenesisFile: /home/wangcj/workspace/ca_solo/test/data/orderer.genesis.block # LocalMSPDir is where to find the private crypto material needed by the # orderer. It is set relative here as a default for dev environments but # should be changed to the real location in production. LocalMSPDir: /home/wangcj/workspace/ca_solo/client/orderer/msp # LocalMSPID is the identity to register the local MSP material with the MSP # manager. IMPORTANT: The local MSP ID of an orderer needs to match the MSP # ID of one of the organizations defined in the orderer system channel&#39;s # /Channel/Orderer configuration. The sample organization defined in the # sample configuration provided has an MSP ID of &quot;SampleOrg&quot;. LocalMSPID: orderCares # Enable an HTTP service for Go &quot;pprof&quot; profiling as documented at: # https://golang.org/pkg/net/http/pprof Profile: Enabled: false Address: 0.0.0.0:6060 # BCCSP configures the blockchain crypto service providers. BCCSP: # Default specifies the preferred blockchain crypto service provider # to use. If the preferred provider is not available, the software # based provider (&quot;SW&quot;) will be used. # Valid providers are: # - SW: a software based crypto provider # - PKCS11: a CA hardware security module crypto provider. Default: SW # SW configures the software based blockchain crypto provider. SW: # TODO: The default Hash and Security level needs refactoring to be # fully configurable. Changing these defaults requires coordination # SHA2 is hardcoded in several places, not only BCCSP Hash: SHA2 Security: 256 # Location of key store. If this is unset, a location will be # chosen using: &#39;LocalMSPDir&#39;/keystore FileKeyStore: KeyStore: # Authentication contains configuration parameters related to authenticating # client messages Authentication: # the acceptable difference between the current server time and the # client&#39;s time as specified in a client request message TimeWindow: 15m ################################################################################ # # SECTION: File Ledger # # - This section applies to the configuration of the file or json ledgers. # ################################################################################ FileLedger: # Location: The directory to store the blocks in. # NOTE: If this is unset, a new temporary location will be chosen every time # the orderer is restarted, using the prefix specified by Prefix. Location: /home/wangcj/workspace/ca_solo/test/data/orderer # The prefix to use when generating a ledger directory in temporary space. # Otherwise, this value is ignored. Prefix: hyperledger-fabric-ordererledger ################################################################################ # # SECTION: RAM Ledger # # - This section applies to the configuration of the RAM ledger. # ################################################################################ RAMLedger: # History Size: The number of blocks that the RAM ledger is set to retain. # WARNING: Appending a block to the ledger might cause the oldest block in # the ledger to be dropped in order to limit the number total number blocks # to HistorySize. For example, if history size is 10, when appending block # 10, block 0 (the genesis block!) will be dropped to make room for block 10. HistorySize: 1000 ################################################################################ # # SECTION: Kafka # # - This section applies to the configuration of the Kafka-based orderer, and # its interaction with the Kafka cluster. # ################################################################################ Kafka: # Retry: What do if a connection to the Kafka cluster cannot be established, # or if a metadata request to the Kafka cluster needs to be repeated. Retry: # When a new channel is created, or when an existing channel is reloaded # (in case of a just-restarted orderer), the orderer interacts with the # Kafka cluster in the following ways: # 1. It creates a Kafka producer (writer) for the Kafka partition that # corresponds to the channel. # 2. It uses that producer to post a no-op CONNECT message to that # partition # 3. It creates a Kafka consumer (reader) for that partition. # If any of these steps fail, they will be re-attempted every # &lt;ShortInterval&gt; for a total of &lt;ShortTotal&gt;, and then every # &lt;LongInterval&gt; for a total of &lt;LongTotal&gt; until they succeed. # Note that the orderer will be unable to write to or read from a # channel until all of the steps above have been completed successfully. ShortInterval: 5s ShortTotal: 10m LongInterval: 5m LongTotal: 12h # Affects the socket timeouts when waiting for an initial connection, a # response, or a transmission. See Config.Net for more info: # https://godoc.org/github.com/Shopify/sarama#Config NetworkTimeouts: DialTimeout: 10s ReadTimeout: 10s WriteTimeout: 10s # Affects the metadata requests when the Kafka cluster is in the middle # of a leader election.See Config.Metadata for more info: # https://godoc.org/github.com/Shopify/sarama#Config Metadata: RetryBackoff: 250ms RetryMax: 3 # What to do if posting a message to the Kafka cluster fails. See # Config.Producer for more info: # https://godoc.org/github.com/Shopify/sarama#Config Producer: RetryBackoff: 100ms RetryMax: 3 # What to do if reading from the Kafka cluster fails. See # Config.Consumer for more info: # https://godoc.org/github.com/Shopify/sarama#Config Consumer: RetryBackoff: 2s # Settings to use when creating Kafka topics. Only applies when # Kafka.Version is v0.10.1.0 or higher Topic: # The number of Kafka brokers across which to replicate the topic ReplicationFactor: 3 # Verbose: Enable logging for interactions with the Kafka cluster. Verbose: false # TLS: TLS settings for the orderer&#39;s connection to the Kafka cluster. TLS: # Enabled: Use TLS when connecting to the Kafka cluster. Enabled: false # PrivateKey: PEM-encoded private key the orderer will use for # authentication. PrivateKey: # As an alternative to specifying the PrivateKey here, uncomment the # following &quot;File&quot; key and specify the file name from which to load the # value of PrivateKey. #File: path/to/PrivateKey # Certificate: PEM-encoded signed public key certificate the orderer will # use for authentication. Certificate: # As an alternative to specifying the Certificate here, uncomment the # following &quot;File&quot; key and specify the file name from which to load the # value of Certificate. #File: path/to/Certificate # RootCAs: PEM-encoded trusted root certificates used to validate # certificates from the Kafka cluster. RootCAs: # As an alternative to specifying the RootCAs here, uncomment the # following &quot;File&quot; key and specify the file name from which to load the # value of RootCAs. #File: path/to/RootCAs # SASLPlain: Settings for using SASL/PLAIN authentication with Kafka brokers SASLPlain: # Enabled: Use SASL/PLAIN to authenticate with Kafka brokers Enabled: false # User: Required when Enabled is set to true User: # Password: Required when Enabled is set to true Password: # Kafka protocol version used to communicate with the Kafka cluster brokers # (defaults to 0.10.2.0 if not specified) Version: ################################################################################ # # Debug Configuration # # - This controls the debugging options for the orderer # ################################################################################ Debug: # BroadcastTraceDir when set will cause each request to the Broadcast service # for this orderer to be written to a file in this directory BroadcastTraceDir: # DeliverTraceDir when set will cause each request to the Deliver service # for this orderer to be written to a file in this directory DeliverTraceDir: ################################################################################ # # Operations Configuration # # - This configures the operations server endpoint for the orderer # ################################################################################ Operations: # host and port for the operations server ListenAddress: 127.0.0.1:8443 # TLS configuration for the operations endpoint TLS: # TLS enabled Enabled: false # Certificate is the location of the PEM encoded TLS certificate Certificate: # PrivateKey points to the location of the PEM-encoded key PrivateKey: # Most operations service endpoints require client authentication when TLS # is enabled. ClientAuthRequired requires client certificate authentication # at the TLS layer to access all resources. ClientAuthRequired: false # Paths to PEM encoded ca certificates to trust for client authentication ClientRootCAs: [] ################################################################################ # # Metrics Configuration # # - This configures metrics collection for the orderer # ################################################################################ Metrics: # The metrics provider is one of statsd, prometheus, or disabled Provider: disabled # The statsd configuration Statsd: # network type: tcp or udp Network: udp # the statsd server address Address: 127.0.0.1:8125 # The interval at which locally cached counters and gauges are pushed # to statsd; timings are pushed immediately WriteInterval: 30s # The prefix is prepended to all emitted statsd metrics Prefix: ################################################################################ # # Consensus Configuration # # - This section contains config options for a consensus plugin. It is opaque # to orderer, and completely up to consensus implementation to make use of. # ################################################################################ Consensus: # The allowed key-value pairs here depend on consensus plugin. For etcd/raft, # we use following options: # WALDir specifies the location at which Write Ahead Logs for etcd/raft are # stored. Each channel will have its own subdir named after channel ID. WALDir: /var/hyperledger/production/orderer/etcdraft/wal # SnapDir specifies the location at which snapshots for etcd/raft are # stored. Each channel will have its own subdir named after channel ID. SnapDir: /var/hyperledger/production/orderer/etcdraft/snapshot4.3 peer0 NKG core.yaml# Copyright IBM Corp. All Rights Reserved. # # SPDX-License-Identifier: Apache-2.0 # ############################################################################### # # Peer section # ############################################################################### peer: # The Peer id is used for identifying this Peer instance. id: peer0.njairport.com # The networkId allows for logical seperation of networks networkId: dev # The Address at local network interface this Peer will listen on. # By default, it will listen on all network interfaces listenAddress: 0.0.0.0:7051 # The endpoint this peer uses to listen for inbound chaincode connections. # If this is commented-out, the listen address is selected to be # the peer&#39;s address (see below) with port 7052 chaincodeListenAddress: 0.0.0.0:7052 # The endpoint the chaincode for this peer uses to connect to the peer. # If this is not specified, the chaincodeListenAddress address is selected. # And if chaincodeListenAddress is not specified, address is selected from # peer listenAddress. chaincodeAddress: peer0.nkg.cares.com:7052 # When used as peer config, this represents the endpoint to other peers # in the same organization. For peers in other organization, see # gossip.externalEndpoint for more info. # When used as CLI config, this means the peer&#39;s endpoint to interact with address: 0.0.0.0:7051 # Whether the Peer should programmatically determine its address # This case is useful for docker containers. addressAutoDetect: false # Setting for runtime.GOMAXPROCS(n). If n &lt; 1, it does not change the # current setting gomaxprocs: -1 # Keepalive settings for peer server and clients keepalive: # MinInterval is the minimum permitted time between client pings. # If clients send pings more frequently, the peer server will # disconnect them minInterval: 60s # Client keepalive settings for communicating with other peer nodes client: # Interval is the time between pings to peer nodes. This must # greater than or equal to the minInterval specified by peer # nodes interval: 60s # Timeout is the duration the client waits for a response from # peer nodes before closing the connection timeout: 20s # DeliveryClient keepalive settings for communication with ordering # nodes. deliveryClient: # Interval is the time between pings to ordering nodes. This must # greater than or equal to the minInterval specified by ordering # nodes. interval: 60s # Timeout is the duration the client waits for a response from # ordering nodes before closing the connection timeout: 20s # Gossip related configuration gossip: # Bootstrap set to initialize gossip with. # This is a list of other peers that this peer reaches out to at startup. # Important: The endpoints here have to be endpoints of peers in the same # organization, because the peer would refuse connecting to these endpoints # unless they are in the same organization as the peer. bootstrap: # NOTE: orgLeader and useLeaderElection parameters are mutual exclusive. # Setting both to true would result in the termination of the peer # since this is undefined state. If the peers are configured with # useLeaderElection=false, make sure there is at least 1 peer in the # organization that its orgLeader is set to true. # Defines whenever peer will initialize dynamic algorithm for # &quot;leader&quot; selection, where leader is the peer to establish # connection with ordering service and use delivery protocol # to pull ledger blocks from ordering service. It is recommended to # use leader election for large networks of peers. useLeaderElection: true # Statically defines peer to be an organization &quot;leader&quot;, # where this means that current peer will maintain connection # with ordering service and disseminate block across peers in # its own organization orgLeader: false # Interval for membershipTracker polling membershipTrackerInterval: 5s # Overrides the endpoint that the peer publishes to peers # in its organization. For peers in foreign organizations # see &#39;externalEndpoint&#39; endpoint: peer0.nkg.cares.com:7051 # Maximum count of blocks stored in memory maxBlockCountToStore: 100 # Max time between consecutive message pushes(unit: millisecond) maxPropagationBurstLatency: 10ms # Max number of messages stored until a push is triggered to remote peers maxPropagationBurstSize: 10 # Number of times a message is pushed to remote peers propagateIterations: 1 # Number of peers selected to push messages to propagatePeerNum: 3 # Determines frequency of pull phases(unit: second) # Must be greater than digestWaitTime + responseWaitTime pullInterval: 4s # Number of peers to pull from pullPeerNum: 3 # Determines frequency of pulling state info messages from peers(unit: second) requestStateInfoInterval: 4s # Determines frequency of pushing state info messages to peers(unit: second) publishStateInfoInterval: 4s # Maximum time a stateInfo message is kept until expired stateInfoRetentionInterval: # Time from startup certificates are included in Alive messages(unit: second) publishCertPeriod: 10s # Should we skip verifying block messages or not (currently not in use) skipBlockVerification: false # Dial timeout(unit: second) dialTimeout: 3s # Connection timeout(unit: second) connTimeout: 2s # Buffer size of received messages recvBuffSize: 20 # Buffer size of sending messages sendBuffSize: 200 # Time to wait before pull engine processes incoming digests (unit: second) # Should be slightly smaller than requestWaitTime digestWaitTime: 1s # Time to wait before pull engine removes incoming nonce (unit: milliseconds) # Should be slightly bigger than digestWaitTime requestWaitTime: 1500ms # Time to wait before pull engine ends pull (unit: second) responseWaitTime: 2s # Alive check interval(unit: second) aliveTimeInterval: 5s # Alive expiration timeout(unit: second) aliveExpirationTimeout: 25s # Reconnect interval(unit: second) reconnectInterval: 25s # This is an endpoint that is published to peers outside of the organization. # If this isn&#39;t set, the peer will not be known to other organizations. externalEndpoint: peer0.nkg.cares.com:7051 # Leader election service configuration election: # Longest time peer waits for stable membership during leader election startup (unit: second) startupGracePeriod: 15s # Interval gossip membership samples to check its stability (unit: second) membershipSampleInterval: 1s # Time passes since last declaration message before peer decides to perform leader election (unit: second) leaderAliveThreshold: 10s # Time between peer sends propose message and declares itself as a leader (sends declaration message) (unit: second) leaderElectionDuration: 5s pvtData: # pullRetryThreshold determines the maximum duration of time private data corresponding for a given block # would be attempted to be pulled from peers until the block would be committed without the private data pullRetryThreshold: 60s # As private data enters the transient store, it is associated with the peer&#39;s ledger&#39;s height at that time. # transientstoreMaxBlockRetention defines the maximum difference between the current ledger&#39;s height upon commit, # and the private data residing inside the transient store that is guaranteed not to be purged. # Private data is purged from the transient store when blocks with sequences that are multiples # of transientstoreMaxBlockRetention are committed. transientstoreMaxBlockRetention: 1000 # pushAckTimeout is the maximum time to wait for an acknowledgement from each peer # at private data push at endorsement time. pushAckTimeout: 3s # Block to live pulling margin, used as a buffer # to prevent peer from trying to pull private data # from peers that is soon to be purged in next N blocks. # This helps a newly joined peer catch up to current # blockchain height quicker. btlPullMargin: 10 # the process of reconciliation is done in an endless loop, while in each iteration reconciler tries to # pull from the other peers the most recent missing blocks with a maximum batch size limitation. # reconcileBatchSize determines the maximum batch size of missing private data that will be reconciled in a # single iteration. reconcileBatchSize: 10 # reconcileSleepInterval determines the time reconciler sleeps from end of an iteration until the beginning # of the next reconciliation iteration. reconcileSleepInterval: 1m # reconciliationEnabled is a flag that indicates whether private data reconciliation is enable or not. reconciliationEnabled: true # skipPullingInvalidTransactionsDuringCommit is a flag that indicates whether pulling of invalid # transaction&#39;s private data from other peers need to be skipped during the commit time and pulled # only through reconciler. skipPullingInvalidTransactionsDuringCommit: false # Gossip state transfer related configuration state: # indicates whenever state transfer is enabled or not # default value is true, i.e. state transfer is active # and takes care to sync up missing blocks allowing # lagging peer to catch up to speed with rest network enabled: true # checkInterval interval to check whether peer is lagging behind enough to # request blocks via state transfer from another peer. checkInterval: 10s # responseTimeout amount of time to wait for state transfer response from # other peers responseTimeout: 3s # batchSize the number of blocks to request via state transfer from another peer batchSize: 10 # blockBufferSize reflect the maximum distance between lowest and # highest block sequence number state buffer to avoid holes. # In order to ensure absence of the holes actual buffer size # is twice of this distance blockBufferSize: 100 # maxRetries maximum number of re-tries to ask # for single state transfer request maxRetries: 3 # TLS Settings # Note that peer-chaincode connections through chaincodeListenAddress is # not mutual TLS auth. See comments on chaincodeListenAddress for more info tls: # Require server-side TLS enabled: false # Require client certificates / mutual TLS. # Note that clients that are not configured to use a certificate will # fail to connect to the peer. clientAuthRequired: false # X.509 certificate used for TLS server cert: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/njairport.com/peers/peer0.njairport.com/tls/server.crt # Private key used for TLS server (and client if clientAuthEnabled # is set to true key: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/njairport.com/peers/peer0.njairport.com/tls/server.key # Trusted root certificate chain for tls.cert rootcert: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/njairport.com/peers/peer0.njairport.com/tls/ca.crt # Set of root certificate authorities used to verify client certificates clientRootCAs: files: - /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/njairport.com/peers/peer0.njairport.com/tls/ca.crt # Private key used for TLS when making client connections. If # not set, peer.tls.key.file will be used instead clientKey: file: # X.509 certificate used for TLS when making client connections. # If not set, peer.tls.cert.file will be used instead clientCert: file: # Authentication contains configuration parameters related to authenticating # client messages authentication: # the acceptable difference between the current server time and the # client&#39;s time as specified in a client request message timewindow: 15m # Path on the file system where peer will store data (eg ledger). This # location must be access control protected to prevent unintended # modification that might corrupt the peer operations. fileSystemPath: /home/wangcj/workspace/ca_solo/test/data/peer0.nkg.cares.com # BCCSP (Blockchain crypto provider): Select which crypto implementation or # library to use BCCSP: Default: SW # Settings for the SW crypto provider (i.e. when DEFAULT: SW) SW: # TODO: The default Hash and Security level needs refactoring to be # fully configurable. Changing these defaults requires coordination # SHA2 is hardcoded in several places, not only BCCSP Hash: SHA2 Security: 256 # Location of Key Store FileKeyStore: # If &quot;&quot;, defaults to &#39;mspConfigPath&#39;/keystore KeyStore: # Settings for the PKCS#11 crypto provider (i.e. when DEFAULT: PKCS11) PKCS11: # Location of the PKCS11 module library Library: # Token Label Label: # User PIN Pin: Hash: Security: FileKeyStore: KeyStore: # Path on the file system where peer will find MSP local configurations mspConfigPath: /home/wangcj/workspace/ca_solo/client/nkg/msp # Identifier of the local MSP # ----!!!!IMPORTANT!!!-!!!IMPORTANT!!!-!!!IMPORTANT!!!!---- # Deployers need to change the value of the localMspId string. # In particular, the name of the local MSP ID of a peer needs # to match the name of one of the MSPs in each of the channel # that this peer is a member of. Otherwise this peer&#39;s messages # will not be identified as valid by other nodes. localMspId: njairport # CLI common client config options client: # connection timeout connTimeout: 3s # Delivery service related config deliveryclient: # The total time to spend retrying connections to ordering nodes # before giving up and returning an error. reconnectTotalTimeThreshold: 3600s # The connection timeout when connecting to ordering service nodes. connTimeout: 3s # The maximum delay between consecutive connection retry attempts to # ordering nodes. reConnectBackoffThreshold: 3600s # A list of orderer endpoint addresses which should be overridden # when found in channel configurations. addressOverrides: # - from: # to: # caCertsFile: # - from: # to: # caCertsFile: # Type for the local MSP - by default it&#39;s of type bccsp localMspType: bccsp # Used with Go profiling tools only in none production environment. In # production, it should be disabled (eg enabled: false) profile: enabled: false listenAddress: 0.0.0.0:6060 # The admin service is used for administrative operations such as # control over logger levels, etc. # Only peer administrators can use the service. adminService: # The interface and port on which the admin server will listen on. # If this is commented out, or the port number is equal to the port # of the peer listen address - the admin service is attached to the # peer&#39;s service (defaults to 7051). #listenAddress: 0.0.0.0:7055 # Handlers defines custom handlers that can filter and mutate # objects passing within the peer, such as: # Auth filter - reject or forward proposals from clients # Decorators - append or mutate the chaincode input passed to the chaincode # Endorsers - Custom signing over proposal response payload and its mutation # Valid handler definition contains: # - A name which is a factory method name defined in # core/handlers/library/library.go for statically compiled handlers # - library path to shared object binary for pluggable filters # Auth filters and decorators are chained and executed in the order that # they are defined. For example: # authFilters: # - # name: FilterOne # library: /opt/lib/filter.so # - # name: FilterTwo # decorators: # - # name: DecoratorOne # - # name: DecoratorTwo # library: /opt/lib/decorator.so # Endorsers are configured as a map that its keys are the endorsement system chaincodes that are being overridden. # Below is an example that overrides the default ESCC and uses an endorsement plugin that has the same functionality # as the default ESCC. # If the &#39;library&#39; property is missing, the name is used as the constructor method in the builtin library similar # to auth filters and decorators. # endorsers: # escc: # name: DefaultESCC # library: /etc/hyperledger/fabric/plugin/escc.so handlers: authFilters: - name: DefaultAuth - name: ExpirationCheck # This filter checks identity x509 certificate expiration decorators: - name: DefaultDecorator endorsers: escc: name: DefaultEndorsement library: validators: vscc: name: DefaultValidation library: # library: /etc/hyperledger/fabric/plugin/escc.so # Number of goroutines that will execute transaction validation in parallel. # By default, the peer chooses the number of CPUs on the machine. Set this # variable to override that choice. # NOTE: overriding this value might negatively influence the performance of # the peer so please change this value only if you know what you&#39;re doing validatorPoolSize: # The discovery service is used by clients to query information about peers, # such as - which peers have joined a certain channel, what is the latest # channel config, and most importantly - given a chaincode and a channel, # what possible sets of peers satisfy the endorsement policy. discovery: enabled: true # Whether the authentication cache is enabled or not. authCacheEnabled: true # The maximum size of the cache, after which a purge takes place authCacheMaxSize: 1000 # The proportion (0 to 1) of entries that remain in the cache after the cache is purged due to overpopulation authCachePurgeRetentionRatio: 0.75 # Whether to allow non-admins to perform non channel scoped queries. # When this is false, it means that only peer admins can perform non channel scoped queries. orgMembersAllowedAccess: false ############################################################################### # # VM section # ############################################################################### vm: # Endpoint of the vm management system. For docker can be one of the following in general # unix:///var/run/docker.sock # http://localhost:2375 # https://localhost:2376 endpoint: unix:///var/run/docker.sock # settings for docker vms docker: tls: enabled: false ca: file: docker/ca.crt cert: file: docker/tls.crt key: file: docker/tls.key # Enables/disables the standard out/err from chaincode containers for # debugging purposes attachStdout: false # Parameters on creating docker container. # Container may be efficiently created using ipam &amp; dns-server for cluster # NetworkMode - sets the networking mode for the container. Supported # standard values are: `host`(default),`bridge`,`ipvlan`,`none`. # Dns - a list of DNS servers for the container to use. # Note: `Privileged` `Binds` `Links` and `PortBindings` properties of # Docker Host Config are not supported and will not be used if set. # LogConfig - sets the logging driver (Type) and related options # (Config) for Docker. For more info, # https://docs.docker.com/engine/admin/logging/overview/ # Note: Set LogConfig using Environment Variables is not supported. hostConfig: NetworkMode: host Dns: # - 192.168.0.1 LogConfig: Type: json-file Config: max-size: &quot;50m&quot; max-file: &quot;5&quot; Memory: 2147483648 ############################################################################### # # Chaincode section # ############################################################################### chaincode: # The id is used by the Chaincode stub to register the executing Chaincode # ID with the Peer and is generally supplied through ENV variables # the `path` form of ID is provided when installing the chaincode. # The `name` is used for all other requests and can be any string. id: path: name: # Generic builder environment, suitable for most chaincode types builder: $(DOCKER_NS)/fabric-ccenv:latest # Enables/disables force pulling of the base docker images (listed below) # during user chaincode instantiation. # Useful when using moving image tags (such as :latest) pull: false golang: # golang will never need more than baseos runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION) # whether or not golang chaincode should be linked dynamically dynamicLink: false car: # car may need more facilities (JVM, etc) in the future as the catalog # of platforms are expanded. For now, we can just use baseos runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION) java: # This is an image based on java:openjdk-8 with addition compiler # tools added for java shim layer packaging. # This image is packed with shim layer libraries that are necessary # for Java chaincode runtime. runtime: $(DOCKER_NS)/fabric-javaenv:$(ARCH)-$(PROJECT_VERSION) node: # need node.js engine at runtime, currently available in baseimage # but not in baseos runtime: $(BASE_DOCKER_NS)/fabric-baseimage:$(ARCH)-$(BASE_VERSION) # Timeout duration for starting up a container and waiting for Register # to come through. 1sec should be plenty for chaincode unit tests startuptimeout: 300s # Timeout duration for Invoke and Init calls to prevent runaway. # This timeout is used by all chaincodes in all the channels, including # system chaincodes. # Note that during Invoke, if the image is not available (e.g. being # cleaned up when in development environment), the peer will automatically # build the image, which might take more time. In production environment, # the chaincode image is unlikely to be deleted, so the timeout could be # reduced accordingly. executetimeout: 30s # There are 2 modes: &quot;dev&quot; and &quot;net&quot;. # In dev mode, user runs the chaincode after starting peer from # command line on local machine. # In net mode, peer will run chaincode in a docker container. mode: net # keepalive in seconds. In situations where the communiction goes through a # proxy that does not support keep-alive, this parameter will maintain connection # between peer and chaincode. # A value &lt;= 0 turns keepalive off keepalive: 0 # system chaincodes whitelist. To add system chaincode &quot;myscc&quot; to the # whitelist, add &quot;myscc: enable&quot; to the list below, and register in # chaincode/importsysccs.go system: cscc: enable lscc: enable escc: enable vscc: enable qscc: enable # System chaincode plugins: # System chaincodes can be loaded as shared objects compiled as Go plugins. # See examples/plugins/scc for an example. # Plugins must be white listed in the chaincode.system section above. systemPlugins: # example configuration: # - enabled: true # name: myscc # path: /opt/lib/myscc.so # invokableExternal: true # invokableCC2CC: true # Logging section for the chaincode container logging: # Default level for all loggers within the chaincode container level: info # Override default level for the &#39;shim&#39; logger shim: warning # Format for the chaincode container logs format: &#39;%&#123;color&#125;%&#123;time:2006-01-02 15:04:05.000 MST&#125; [%&#123;module&#125;] %&#123;shortfunc&#125; -&gt; %&#123;level:.4s&#125; %&#123;id:03x&#125;%&#123;color:reset&#125; %&#123;message&#125;&#39; ############################################################################### # # Ledger section - ledger configuration encompases both the blockchain # and the state # ############################################################################### ledger: blockchain: state: # stateDatabase - options are &quot;goleveldb&quot;, &quot;CouchDB&quot; # goleveldb - default state database stored in goleveldb. # CouchDB - store state database in CouchDB stateDatabase: goleveldb # Limit on the number of records to return per query totalQueryLimit: 100000 couchDBConfig: # It is recommended to run CouchDB on the same server as the peer, and # not map the CouchDB container port to a server port in docker-compose. # Otherwise proper security must be provided on the connection between # CouchDB client (on the peer) and server. couchDBAddress: 127.0.0.1:5984 # This username must have read and write authority on CouchDB username: # The password is recommended to pass as an environment variable # during start up (eg CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD). # If it is stored here, the file must be access control protected # to prevent unintended users from discovering the password. password: # Number of retries for CouchDB errors maxRetries: 3 # Number of retries for CouchDB errors during peer startup maxRetriesOnStartup: 12 # CouchDB request timeout (unit: duration, e.g. 20s) requestTimeout: 35s # Limit on the number of records per each CouchDB query # Note that chaincode queries are only bound by totalQueryLimit. # Internally the chaincode may execute multiple CouchDB queries, # each of size internalQueryLimit. internalQueryLimit: 1000 # Limit on the number of records per CouchDB bulk update batch maxBatchUpdateSize: 1000 # Warm indexes after every N blocks. # This option warms any indexes that have been # deployed to CouchDB after every N blocks. # A value of 1 will warm indexes after every block commit, # to ensure fast selector queries. # Increasing the value may improve write efficiency of peer and CouchDB, # but may degrade query response time. warmIndexesAfterNBlocks: 1 # Create the _global_changes system database # This is optional. Creating the global changes database will require # additional system resources to track changes and maintain the database createGlobalChangesDB: false history: # enableHistoryDatabase - options are true or false # Indicates if the history of key updates should be stored. # All history &#39;index&#39; will be stored in goleveldb, regardless if using # CouchDB or alternate database for the state. enableHistoryDatabase: true ############################################################################### # # Operations section # ############################################################################### operations: # host and port for the operations server listenAddress: 127.0.0.1:9443 # TLS configuration for the operations endpoint tls: # TLS enabled enabled: false # path to PEM encoded server certificate for the operations server cert: file: # path to PEM encoded server key for the operations server key: file: # most operations service endpoints require client authentication when TLS # is enabled. clientAuthRequired requires client certificate authentication # at the TLS layer to access all resources. clientAuthRequired: false # paths to PEM encoded ca certificates to trust for client authentication clientRootCAs: files: [] ############################################################################### # # Metrics section # ############################################################################### metrics: # metrics provider is one of statsd, prometheus, or disabled provider: disabled # statsd configuration statsd: # network type: tcp or udp network: udp # statsd server address address: 127.0.0.1:8125 # the interval at which locally cached counters and gauges are pushed # to statsd; timings are pushed immediately writeInterval: 10s # prefix is prepended to all emitted statsd metrics prefix:4.4 peer0 WEH core.yaml# Copyright IBM Corp. All Rights Reserved. # # SPDX-License-Identifier: Apache-2.0 # ############################################################################### # # Peer section # ############################################################################### peer: # The Peer id is used for identifying this Peer instance. id: peer0.airwh.com # The networkId allows for logical seperation of networks networkId: devairwh # The Address at local network interface this Peer will listen on. # By default, it will listen on all network interfaces listenAddress: 0.0.0.0:7053 # The endpoint this peer uses to listen for inbound chaincode connections. # If this is commented-out, the listen address is selected to be # the peer&#39;s address (see below) with port 7052 chaincodeListenAddress: 0.0.0.0:7054 # The endpoint the chaincode for this peer uses to connect to the peer. # If this is not specified, the chaincodeListenAddress address is selected. # And if chaincodeListenAddress is not specified, address is selected from # peer listenAddress. chaincodeAddress: peer0.weh.cares.com:7054 # When used as peer config, this represents the endpoint to other peers # in the same organization. For peers in other organization, see # gossip.externalEndpoint for more info. # When used as CLI config, this means the peer&#39;s endpoint to interact with address: peer0.weh.cares.com:7053 # Whether the Peer should programmatically determine its address # This case is useful for docker containers. addressAutoDetect: false # Setting for runtime.GOMAXPROCS(n). If n &lt; 1, it does not change the # current setting gomaxprocs: -1 # Keepalive settings for peer server and clients keepalive: # MinInterval is the minimum permitted time between client pings. # If clients send pings more frequently, the peer server will # disconnect them minInterval: 60s # Client keepalive settings for communicating with other peer nodes client: # Interval is the time between pings to peer nodes. This must # greater than or equal to the minInterval specified by peer # nodes interval: 60s # Timeout is the duration the client waits for a response from # peer nodes before closing the connection timeout: 20s # DeliveryClient keepalive settings for communication with ordering # nodes. deliveryClient: # Interval is the time between pings to ordering nodes. This must # greater than or equal to the minInterval specified by ordering # nodes. interval: 60s # Timeout is the duration the client waits for a response from # ordering nodes before closing the connection timeout: 20s # Gossip related configuration gossip: # Bootstrap set to initialize gossip with. # This is a list of other peers that this peer reaches out to at startup. # Important: The endpoints here have to be endpoints of peers in the same # organization, because the peer would refuse connecting to these endpoints # unless they are in the same organization as the peer. bootstrap: # NOTE: orgLeader and useLeaderElection parameters are mutual exclusive. # Setting both to true would result in the termination of the peer # since this is undefined state. If the peers are configured with # useLeaderElection=false, make sure there is at least 1 peer in the # organization that its orgLeader is set to true. # Defines whenever peer will initialize dynamic algorithm for # &quot;leader&quot; selection, where leader is the peer to establish # connection with ordering service and use delivery protocol # to pull ledger blocks from ordering service. It is recommended to # use leader election for large networks of peers. useLeaderElection: true # Statically defines peer to be an organization &quot;leader&quot;, # where this means that current peer will maintain connection # with ordering service and disseminate block across peers in # its own organization orgLeader: false # Interval for membershipTracker polling membershipTrackerInterval: 5s # Overrides the endpoint that the peer publishes to peers # in its organization. For peers in foreign organizations # see &#39;externalEndpoint&#39; endpoint: peer0.weh.cares.com:7053 # Maximum count of blocks stored in memory maxBlockCountToStore: 100 # Max time between consecutive message pushes(unit: millisecond) maxPropagationBurstLatency: 10ms # Max number of messages stored until a push is triggered to remote peers maxPropagationBurstSize: 10 # Number of times a message is pushed to remote peers propagateIterations: 1 # Number of peers selected to push messages to propagatePeerNum: 3 # Determines frequency of pull phases(unit: second) # Must be greater than digestWaitTime + responseWaitTime pullInterval: 4s # Number of peers to pull from pullPeerNum: 3 # Determines frequency of pulling state info messages from peers(unit: second) requestStateInfoInterval: 4s # Determines frequency of pushing state info messages to peers(unit: second) publishStateInfoInterval: 4s # Maximum time a stateInfo message is kept until expired stateInfoRetentionInterval: # Time from startup certificates are included in Alive messages(unit: second) publishCertPeriod: 10s # Should we skip verifying block messages or not (currently not in use) skipBlockVerification: false # Dial timeout(unit: second) dialTimeout: 3s # Connection timeout(unit: second) connTimeout: 2s # Buffer size of received messages recvBuffSize: 20 # Buffer size of sending messages sendBuffSize: 200 # Time to wait before pull engine processes incoming digests (unit: second) # Should be slightly smaller than requestWaitTime digestWaitTime: 1s # Time to wait before pull engine removes incoming nonce (unit: milliseconds) # Should be slightly bigger than digestWaitTime requestWaitTime: 1500ms # Time to wait before pull engine ends pull (unit: second) responseWaitTime: 2s # Alive check interval(unit: second) aliveTimeInterval: 5s # Alive expiration timeout(unit: second) aliveExpirationTimeout: 25s # Reconnect interval(unit: second) reconnectInterval: 25s # This is an endpoint that is published to peers outside of the organization. # If this isn&#39;t set, the peer will not be known to other organizations. externalEndpoint: peer0.weh.cares.com:7053 # Leader election service configuration election: # Longest time peer waits for stable membership during leader election startup (unit: second) startupGracePeriod: 15s # Interval gossip membership samples to check its stability (unit: second) membershipSampleInterval: 1s # Time passes since last declaration message before peer decides to perform leader election (unit: second) leaderAliveThreshold: 10s # Time between peer sends propose message and declares itself as a leader (sends declaration message) (unit: second) leaderElectionDuration: 5s pvtData: # pullRetryThreshold determines the maximum duration of time private data corresponding for a given block # would be attempted to be pulled from peers until the block would be committed without the private data pullRetryThreshold: 60s # As private data enters the transient store, it is associated with the peer&#39;s ledger&#39;s height at that time. # transientstoreMaxBlockRetention defines the maximum difference between the current ledger&#39;s height upon commit, # and the private data residing inside the transient store that is guaranteed not to be purged. # Private data is purged from the transient store when blocks with sequences that are multiples # of transientstoreMaxBlockRetention are committed. transientstoreMaxBlockRetention: 1000 # pushAckTimeout is the maximum time to wait for an acknowledgement from each peer # at private data push at endorsement time. pushAckTimeout: 3s # Block to live pulling margin, used as a buffer # to prevent peer from trying to pull private data # from peers that is soon to be purged in next N blocks. # This helps a newly joined peer catch up to current # blockchain height quicker. btlPullMargin: 10 # the process of reconciliation is done in an endless loop, while in each iteration reconciler tries to # pull from the other peers the most recent missing blocks with a maximum batch size limitation. # reconcileBatchSize determines the maximum batch size of missing private data that will be reconciled in a # single iteration. reconcileBatchSize: 10 # reconcileSleepInterval determines the time reconciler sleeps from end of an iteration until the beginning # of the next reconciliation iteration. reconcileSleepInterval: 1m # reconciliationEnabled is a flag that indicates whether private data reconciliation is enable or not. reconciliationEnabled: true # skipPullingInvalidTransactionsDuringCommit is a flag that indicates whether pulling of invalid # transaction&#39;s private data from other peers need to be skipped during the commit time and pulled # only through reconciler. skipPullingInvalidTransactionsDuringCommit: false # Gossip state transfer related configuration state: # indicates whenever state transfer is enabled or not # default value is true, i.e. state transfer is active # and takes care to sync up missing blocks allowing # lagging peer to catch up to speed with rest network enabled: true # checkInterval interval to check whether peer is lagging behind enough to # request blocks via state transfer from another peer. checkInterval: 10s # responseTimeout amount of time to wait for state transfer response from # other peers responseTimeout: 3s # batchSize the number of blocks to request via state transfer from another peer batchSize: 10 # blockBufferSize reflect the maximum distance between lowest and # highest block sequence number state buffer to avoid holes. # In order to ensure absence of the holes actual buffer size # is twice of this distance blockBufferSize: 100 # maxRetries maximum number of re-tries to ask # for single state transfer request maxRetries: 3 # TLS Settings # Note that peer-chaincode connections through chaincodeListenAddress is # not mutual TLS auth. See comments on chaincodeListenAddress for more info tls: # Require server-side TLS enabled: false # Require client certificates / mutual TLS. # Note that clients that are not configured to use a certificate will # fail to connect to the peer. clientAuthRequired: false # X.509 certificate used for TLS server cert: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/airwh.com/peers/peer0.airwh.com/tls/server.crt # Private key used for TLS server (and client if clientAuthEnabled # is set to true key: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/airwh.com/peers/peer0.airwh.com/tls/server.key # Trusted root certificate chain for tls.cert rootcert: file: /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/airwh.com/peers/peer0.airwh.com/tls/ca.crt # Set of root certificate authorities used to verify client certificates clientRootCAs: files: - /home/wangcj/workspace/solo/config/crypto-config/peerOrganizations/airwh.com/peers/peer0.airwh.com/tls/ca.crt # Private key used for TLS when making client connections. If # not set, peer.tls.key.file will be used instead clientKey: file: # X.509 certificate used for TLS when making client connections. # If not set, peer.tls.cert.file will be used instead clientCert: file: # Authentication contains configuration parameters related to authenticating # client messages authentication: # the acceptable difference between the current server time and the # client&#39;s time as specified in a client request message timewindow: 15m # Path on the file system where peer will store data (eg ledger). This # location must be access control protected to prevent unintended # modification that might corrupt the peer operations. fileSystemPath: /home/wangcj/workspace/ca_solo/test/data/peer0.weh.cares.com/ # BCCSP (Blockchain crypto provider): Select which crypto implementation or # library to use BCCSP: Default: SW # Settings for the SW crypto provider (i.e. when DEFAULT: SW) SW: # TODO: The default Hash and Security level needs refactoring to be # fully configurable. Changing these defaults requires coordination # SHA2 is hardcoded in several places, not only BCCSP Hash: SHA2 Security: 256 # Location of Key Store FileKeyStore: # If &quot;&quot;, defaults to &#39;mspConfigPath&#39;/keystore KeyStore: # Settings for the PKCS#11 crypto provider (i.e. when DEFAULT: PKCS11) PKCS11: # Location of the PKCS11 module library Library: # Token Label Label: # User PIN Pin: Hash: Security: FileKeyStore: KeyStore: # Path on the file system where peer will find MSP local configurations mspConfigPath: /home/wangcj/workspace/ca_solo/client/weh/msp # Identifier of the local MSP # ----!!!!IMPORTANT!!!-!!!IMPORTANT!!!-!!!IMPORTANT!!!!---- # Deployers need to change the value of the localMspId string. # In particular, the name of the local MSP ID of a peer needs # to match the name of one of the MSPs in each of the channel # that this peer is a member of. Otherwise this peer&#39;s messages # will not be identified as valid by other nodes. localMspId: airwh # CLI common client config options client: # connection timeout connTimeout: 3s # Delivery service related config deliveryclient: # The total time to spend retrying connections to ordering nodes # before giving up and returning an error. reconnectTotalTimeThreshold: 3600s # The connection timeout when connecting to ordering service nodes. connTimeout: 3s # The maximum delay between consecutive connection retry attempts to # ordering nodes. reConnectBackoffThreshold: 3600s # A list of orderer endpoint addresses which should be overridden # when found in channel configurations. addressOverrides: # - from: # to: # caCertsFile: # - from: # to: # caCertsFile: # Type for the local MSP - by default it&#39;s of type bccsp localMspType: bccsp # Used with Go profiling tools only in none production environment. In # production, it should be disabled (eg enabled: false) profile: enabled: false listenAddress: 0.0.0.0:6060 # The admin service is used for administrative operations such as # control over logger levels, etc. # Only peer administrators can use the service. adminService: # The interface and port on which the admin server will listen on. # If this is commented out, or the port number is equal to the port # of the peer listen address - the admin service is attached to the # peer&#39;s service (defaults to 7051). #listenAddress: 0.0.0.0:7055 # Handlers defines custom handlers that can filter and mutate # objects passing within the peer, such as: # Auth filter - reject or forward proposals from clients # Decorators - append or mutate the chaincode input passed to the chaincode # Endorsers - Custom signing over proposal response payload and its mutation # Valid handler definition contains: # - A name which is a factory method name defined in # core/handlers/library/library.go for statically compiled handlers # - library path to shared object binary for pluggable filters # Auth filters and decorators are chained and executed in the order that # they are defined. For example: # authFilters: # - # name: FilterOne # library: /opt/lib/filter.so # - # name: FilterTwo # decorators: # - # name: DecoratorOne # - # name: DecoratorTwo # library: /opt/lib/decorator.so # Endorsers are configured as a map that its keys are the endorsement system chaincodes that are being overridden. # Below is an example that overrides the default ESCC and uses an endorsement plugin that has the same functionality # as the default ESCC. # If the &#39;library&#39; property is missing, the name is used as the constructor method in the builtin library similar # to auth filters and decorators. # endorsers: # escc: # name: DefaultESCC # library: /etc/hyperledger/fabric/plugin/escc.so handlers: authFilters: - name: DefaultAuth - name: ExpirationCheck # This filter checks identity x509 certificate expiration decorators: - name: DefaultDecorator endorsers: escc: name: DefaultEndorsement library: validators: vscc: name: DefaultValidation library: # library: /etc/hyperledger/fabric/plugin/escc.so # Number of goroutines that will execute transaction validation in parallel. # By default, the peer chooses the number of CPUs on the machine. Set this # variable to override that choice. # NOTE: overriding this value might negatively influence the performance of # the peer so please change this value only if you know what you&#39;re doing validatorPoolSize: # The discovery service is used by clients to query information about peers, # such as - which peers have joined a certain channel, what is the latest # channel config, and most importantly - given a chaincode and a channel, # what possible sets of peers satisfy the endorsement policy. discovery: enabled: true # Whether the authentication cache is enabled or not. authCacheEnabled: true # The maximum size of the cache, after which a purge takes place authCacheMaxSize: 1000 # The proportion (0 to 1) of entries that remain in the cache after the cache is purged due to overpopulation authCachePurgeRetentionRatio: 0.75 # Whether to allow non-admins to perform non channel scoped queries. # When this is false, it means that only peer admins can perform non channel scoped queries. orgMembersAllowedAccess: false ############################################################################### # # VM section # ############################################################################### vm: # Endpoint of the vm management system. For docker can be one of the following in general # unix:///var/run/docker.sock # http://localhost:2375 # https://localhost:2376 endpoint: unix:///var//run/docker.sock # settings for docker vms docker: tls: enabled: false ca: file: docker/ca.crt cert: file: docker/tls.crt key: file: docker/tls.key # Enables/disables the standard out/err from chaincode containers for # debugging purposes attachStdout: false # Parameters on creating docker container. # Container may be efficiently created using ipam &amp; dns-server for cluster # NetworkMode - sets the networking mode for the container. Supported # standard values are: `host`(default),`bridge`,`ipvlan`,`none`. # Dns - a list of DNS servers for the container to use. # Note: `Privileged` `Binds` `Links` and `PortBindings` properties of # Docker Host Config are not supported and will not be used if set. # LogConfig - sets the logging driver (Type) and related options # (Config) for Docker. For more info, # https://docs.docker.com/engine/admin/logging/overview/ # Note: Set LogConfig using Environment Variables is not supported. hostConfig: NetworkMode: host Dns: # - 192.168.0.1 LogConfig: Type: json-file Config: max-size: &quot;50m&quot; max-file: &quot;5&quot; Memory: 2147483648 ############################################################################### # # Chaincode section # ############################################################################### chaincode: # The id is used by the Chaincode stub to register the executing Chaincode # ID with the Peer and is generally supplied through ENV variables # the `path` form of ID is provided when installing the chaincode. # The `name` is used for all other requests and can be any string. id: path: name: # Generic builder environment, suitable for most chaincode types builder: $(DOCKER_NS)/fabric-ccenv:latest # Enables/disables force pulling of the base docker images (listed below) # during user chaincode instantiation. # Useful when using moving image tags (such as :latest) pull: false golang: # golang will never need more than baseos runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION) # whether or not golang chaincode should be linked dynamically dynamicLink: false car: # car may need more facilities (JVM, etc) in the future as the catalog # of platforms are expanded. For now, we can just use baseos runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION) java: # This is an image based on java:openjdk-8 with addition compiler # tools added for java shim layer packaging. # This image is packed with shim layer libraries that are necessary # for Java chaincode runtime. runtime: $(DOCKER_NS)/fabric-javaenv:$(ARCH)-$(PROJECT_VERSION) node: # need node.js engine at runtime, currently available in baseimage # but not in baseos runtime: $(BASE_DOCKER_NS)/fabric-baseimage:$(ARCH)-$(BASE_VERSION) # Timeout duration for starting up a container and waiting for Register # to come through. 1sec should be plenty for chaincode unit tests startuptimeout: 300s # Timeout duration for Invoke and Init calls to prevent runaway. # This timeout is used by all chaincodes in all the channels, including # system chaincodes. # Note that during Invoke, if the image is not available (e.g. being # cleaned up when in development environment), the peer will automatically # build the image, which might take more time. In production environment, # the chaincode image is unlikely to be deleted, so the timeout could be # reduced accordingly. executetimeout: 30s # There are 2 modes: &quot;dev&quot; and &quot;net&quot;. # In dev mode, user runs the chaincode after starting peer from # command line on local machine. # In net mode, peer will run chaincode in a docker container. mode: net # keepalive in seconds. In situations where the communiction goes through a # proxy that does not support keep-alive, this parameter will maintain connection # between peer and chaincode. # A value &lt;= 0 turns keepalive off keepalive: 0 # system chaincodes whitelist. To add system chaincode &quot;myscc&quot; to the # whitelist, add &quot;myscc: enable&quot; to the list below, and register in # chaincode/importsysccs.go system: cscc: enable lscc: enable escc: enable vscc: enable qscc: enable # System chaincode plugins: # System chaincodes can be loaded as shared objects compiled as Go plugins. # See examples/plugins/scc for an example. # Plugins must be white listed in the chaincode.system section above. systemPlugins: # example configuration: # - enabled: true # name: myscc # path: /opt/lib/myscc.so # invokableExternal: true # invokableCC2CC: true # Logging section for the chaincode container logging: # Default level for all loggers within the chaincode container level: info # Override default level for the &#39;shim&#39; logger shim: warning # Format for the chaincode container logs format: &#39;%&#123;color&#125;%&#123;time:2006-01-02 15:04:05.000 MST&#125; [%&#123;module&#125;] %&#123;shortfunc&#125; -&gt; %&#123;level:.4s&#125; %&#123;id:03x&#125;%&#123;color:reset&#125; %&#123;message&#125;&#39; ############################################################################### # # Ledger section - ledger configuration encompases both the blockchain # and the state # ############################################################################### ledger: blockchain: state: # stateDatabase - options are &quot;goleveldb&quot;, &quot;CouchDB&quot; # goleveldb - default state database stored in goleveldb. # CouchDB - store state database in CouchDB stateDatabase: goleveldb # Limit on the number of records to return per query totalQueryLimit: 100000 couchDBConfig: # It is recommended to run CouchDB on the same server as the peer, and # not map the CouchDB container port to a server port in docker-compose. # Otherwise proper security must be provided on the connection between # CouchDB client (on the peer) and server. couchDBAddress: 127.0.0.1:5984 # This username must have read and write authority on CouchDB username: # The password is recommended to pass as an environment variable # during start up (eg CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD). # If it is stored here, the file must be access control protected # to prevent unintended users from discovering the password. password: # Number of retries for CouchDB errors maxRetries: 3 # Number of retries for CouchDB errors during peer startup maxRetriesOnStartup: 12 # CouchDB request timeout (unit: duration, e.g. 20s) requestTimeout: 35s # Limit on the number of records per each CouchDB query # Note that chaincode queries are only bound by totalQueryLimit. # Internally the chaincode may execute multiple CouchDB queries, # each of size internalQueryLimit. internalQueryLimit: 1000 # Limit on the number of records per CouchDB bulk update batch maxBatchUpdateSize: 1000 # Warm indexes after every N blocks. # This option warms any indexes that have been # deployed to CouchDB after every N blocks. # A value of 1 will warm indexes after every block commit, # to ensure fast selector queries. # Increasing the value may improve write efficiency of peer and CouchDB, # but may degrade query response time. warmIndexesAfterNBlocks: 1 # Create the _global_changes system database # This is optional. Creating the global changes database will require # additional system resources to track changes and maintain the database createGlobalChangesDB: false history: # enableHistoryDatabase - options are true or false # Indicates if the history of key updates should be stored. # All history &#39;index&#39; will be stored in goleveldb, regardless if using # CouchDB or alternate database for the state. enableHistoryDatabase: true ############################################################################### # # Operations section # ############################################################################### operations: # host and port for the operations server listenAddress: 127.0.0.1:9446 # TLS configuration for the operations endpoint tls: # TLS enabled enabled: false # path to PEM encoded server certificate for the operations server cert: file: # path to PEM encoded server key for the operations server key: file: # most operations service endpoints require client authentication when TLS # is enabled. clientAuthRequired requires client certificate authentication # at the TLS layer to access all resources. clientAuthRequired: false # paths to PEM encoded ca certificates to trust for client authentication clientRootCAs: files: [] ############################################################################### # # Metrics section # ############################################################################### metrics: # metrics provider is one of statsd, prometheus, or disabled provider: disabled # statsd configuration statsd: # network type: tcp or udp network: udp # statsd server address address: 127.0.0.1:8125 # the interval at which locally cached counters and gauges are pushed # to statsd; timings are pushed immediately writeInterval: 10s # prefix is prepended to all emitted statsd metrics prefix:4.5、创建系统创世块export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg configtxgen -profile SampleSingleMSPSolo -outputBlock /home/wangcj/workspace/ca_solo/test/data/orderer.genesis.block -channelID sys-security4.6、创建账本创世块export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg configtxgen -profile SampleSingleMSPSoloChannel -outputCreateChannelTx /home/wangcj/workspace/ca_solo/test/data/securityCheck.channel.tx -channelID securitycheck4.7、创建 NKG 锚节点文件export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate /home/wangcj/workspace/ca_solo/test/data/njairportMSPanchors.tx -channelID securitycheck -asOrg njairport4.8、创建 WEH 锚节点文件export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/cfg configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate /home/wangcj/workspace/ca_solo/test/data/airwhMSPanchors.tx -channelID securitycheck -asOrg airwh4.8、创建 WEH 锚节点文件 4.9、启动ordererexport FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/order/ orderer start 4.10、启动 NKG peer0export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer node start4.11、启动 WEH peer0export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer node start4.12、创建通道export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer channel create -o orderer1.cares.com:7050 -c securitycheck -f /home/wangcj/workspace/ca_solo/test/data/securityCheck.channel.tx --outputBlock /home/wangcj/workspace/ca_solo/test/data/securitycheck.block 4.13、NKG peer0加入通道export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer channel join -b /home/wangcj/workspace/ca_solo/test/data/securitycheck.block peer channel update -o orderer1.cares.com:7050 -c securitycheck -f /home/wangcj/workspace/ca_solo/test/data/njairportMSPanchors.tx 4.14、WEH peer0加入通道export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer channel join -b /home/wangcj/workspace/ca_solo/test/data/securitycheck.block peer channel update -o orderer1.cares.com:7050 -c securitycheck -f /home/wangcj/workspace/ca_solo/test/data/airwhMSPanchors.tx 4.15、WEH peer0 部署链码export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/weh peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang 4.16、NKG peer0 部署链码export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang 4.17、NKG peer0 实例化链码export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode instantiate -o orderer1.cares.com:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;OR (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot; 4.18、NKG peer0 做转账交易export FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode invoke -o orderer.cares.sh.cn:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;5&quot;]&#125;&#39; 4.19、NKG peer0 查询 aexport FABRIC_CFG_PATH=/home/wangcj/workspace/ca_solo/config/peers/nkg peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; 5、自动化脚本 testret()&#123; if [ $1 -ne 0 ]; then exit 1; fi printf &quot;[\\033[36m %s \\033[0m]\\n&quot; &quot;OK&quot; &#125; unsetenv()&#123; unset FABRIC_CFG_PATH unset CORE_PEER_LOCALMSPID unset CORE_PEER_ADDRESS unset CORE_PEER_MSPCONFIGPATH &#125; printf &quot;\\n&quot; TEST_HOME=$(cd $(dirname $0); pwd) ROOT_MSP=$TEST_HOME/certs/root mkdir -p $ROOT_MSP FABRIC_CA=http://admin:admin@orderer.cares.com:5054 printf &#39;%-70s&#39; &#39;clear certs&#39; rm -fr $TEST_HOME/certs/* testret $? if [ -d &quot;$TEST_HOME/logs&quot; ];then rm -fr $TEST_HOME/logs/* else mkdir -p $TEST_HOME/logs fi printf &#39;%-70s&#39; &#39;start FABRIC-CA&#39; $TEST_HOME/server/start testret $? delaffiliation()&#123; fabric-ca-client affiliation list --affiliation $1 -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ];then printf &#39;\\t%-62s&#39; &quot; delete org $1&quot; fabric-ca-client affiliation remove $1 --force -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? fi &#125; printf &#39;%-70s&#39; &#39; wait FABRIC-CA process to be startup&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 0.1s netstat -an|grep 5054|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done testret 0 mkdir -p $ROOT_MSP printf &#39;%-70s&#39; &#39;register MSP ROOT&#39; fabric-ca-client enroll -u $FABRIC_CA -H $ROOT_MSP &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;delete orgs affiliations&#39; delaffiliation com printf &#39;%-70s&#39; &quot;WORK DIR:$TEST_HOME&quot; testret 0 PEER_PIDS=$(ps -ef|grep &#39;peer node start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$PEER_PIDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop peers processes&#39; kill -9 $PEER_PIDS testret $? fi sleep 1s ORDER_PID=$(ps -ef|grep &#39;orderer start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$ORDER_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop orderer process&#39; kill -9 $ORDER_PID testret $? fi sleep 1s EXPLORE_PID=$(ps -ef|grep &#39;node main.js name - hyperledger-explorer&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$EXPLORE_PID&quot; ]; then printf &#39;%-70s&#39; &#39;stop FABRIC EXPPLORER&#39; cd $TEST_HOME/blockchain-explorer nohup ./stop.sh &gt; /dev/null 2&gt;&amp;1 &amp; testret $? fi sleep 2s printf &#39;%-70s&#39; &#39;clear data files&#39; rm -rf rm -fr $TEST_HOME/test/data/* testret $? IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;stop chaincode containers&#39; docker stop $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode containers&#39; docker rm $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-70s&#39; &#39;remove chaincode images&#39; docker rmi $(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi mkdir -p $ROOT_MSP printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com&#39; fabric-ca-client affiliation add com -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares&#39; fabric-ca-client affiliation add com.cares -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;register org affiliations&#39; printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.orderer&#39; fabric-ca-client affiliation add com.cares.orderer -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.nkg&#39; fabric-ca-client affiliation add com.cares.nkg -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &#39;register affiliations com.cares.weh&#39; fabric-ca-client affiliation add com.cares.weh -H $ROOT_MSP -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? reqcerts()&#123; name=$1 type=$2 CERT_DIR=ordererOrgs NODE_DIR=orderers if [ &quot;$type&quot; = &quot;peer&quot; ]; then CERT_DIR=&quot;peerOrgs&quot; NODE_DIR=&quot;peers&quot; fi printf &quot;\\t%-62s&quot; &quot;get cacert of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/ fabric-ca-client getcacert -M $TEST_HOME/certs/$CERT_DIR/$name/msp/ -H $TEST_HOME/certs/root/ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;register orgAdmin of $name&quot; fabric-ca-client register --id.name Admin@$name.cares.com \\ --id.secret 111111 \\ --id.type client \\ --id.affiliation com.cares.$name \\ --id.attrs &#39;&quot;hf.Registrar.Roles=client,orderer,peer,user&quot;,&quot;hf.Registrar.DelegateRoles=client,orderer,peer,user&quot;,hf.Registrar.Attributes=*,hf.GenCRL=true,hf.Revoker=true,hf.AffiliationMgr=true,role=admin:ecert&#39; \\ -H $TEST_HOME/certs/root/ \\ -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? sleep 1s printf &#39;\\t%-62s&#39; &quot;enroll orgAdmin of $name&quot; fabric-ca-client enroll -u http://Admin@$name.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;\\t%-62s&#39; &quot;copy admin certs of $name&quot; mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts ADMINCERTFROM=$TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/* ADMINCERTTO=$TEST_HOME/certs/$CERT_DIR/$name/msp/admincerts/ cp $ADMINCERTFROM $ADMINCERTTO testret $? mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts cp $ADMINCERTFROM $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/admincerts printf &#39;\\t%-62s\\n&#39; &quot;register subAccount using admin of $2&quot; accounts=$3 if [ ! -n &quot;$accounts&quot; ];then accounts=1 fi for((i=0;i&lt;$accounts;i++)); do fabric-ca-client register -u http://localhost:5054 --id.name $type$i@$name.cares.com --id.secret 111111 --id.type $type \\ --id.affiliation com.cares.$name --id.attrs &quot;role=$type:ecert&quot; --id.attrs &quot;role=admin:ecert&quot; -H $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 fabric-ca-client enroll -u http://orderer1@orderer.cares.com:111111@localhost:5054 -H $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com -u $FABRIC_CA &gt; /dev/null 2&gt;&amp;1 mkdir -p $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts cp $TEST_HOME/certs/$CERT_DIR/$name/users/Admin@$name.cares.com/msp/signcerts/cert.pem $TEST_HOME/certs/$CERT_DIR/$name/$NODE_DIR/$type$i@$name.cares.com/msp/admincerts done &#125; mkdir -p $TEST_HOME/certs/&#123;peerOrgs,ordererOrgs&#125; printf &#39;%-70s\\n&#39; &quot;get cert of orderer&quot; reqcerts orderer orderer printf &#39;%-70s\\n&#39; &quot;get cert of nkg&quot; reqcerts nkg peer printf &#39;%-70s\\n&#39; &quot;get cert of weh&quot; reqcerts weh peer if [ &quot;$1&quot; = &quot;down&quot; ];then exit 0 fi printf &#39;%-70s&#39; &#39;1,create system genesis&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/cfg configtxgen -profile SampleSingleMSPSolo -outputBlock $TEST_HOME/test/data/orderer.genesis.block -channelID sys-security &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;2,create channel genesis&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputCreateChannelTx $TEST_HOME/test/data/securityCheck.channel.tx -channelID securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;3,create anchor njairport&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/njairportMSPanchors.tx -channelID securitycheck -asOrg njairport &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;4,create anchor airwh&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/airwhMSPanchors.tx -channelID securitycheck -asOrg airwh &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;5,start orderer&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/order nohup orderer start &gt; $TEST_HOME/logs/orderer.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;6,start peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg/ nohup peer node start &gt; $TEST_HOME/logs/njairport-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s&#39; &#39;7,start peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh nohup peer node start &gt; $TEST_HOME/logs/airwh-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-70s\\n\\t%-62s&#39; &#39;8,create ledger channel &#39; &#39;wait orderer process&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 1s netstat -an|grep 7050|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel create -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/securityCheck.channel.tx --outputBlock $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;9,nkg peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;10,weh peer0 join channel&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;11,update anchor njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/njairportMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;12,update anchor airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer channel update -o orderer.cares.com:7050 -c securitycheck -f $TEST_HOME/test/data/airwhMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? ## java 链码部署需要下载依赖，编译较慢 这里用go链码快速演示 go链码依赖于 $GOPATH printf &#39;%-70s&#39; &#39;13,install chaincode peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;14, instantiate chaincode peer0 njairport a=200,b=200&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg peer chaincode instantiate -o orderer.cares.com:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;OR (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s\\n&#39; &#39;15, peer0 njairport a transfer 5 to b&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg IMGSTATUS=1 printf &#39;\\t%-62s&#39; &#39;wait chaincode container up&#39; while [ $IMGSTATUS -ne 0 ] do ps -ef|grep &#39;chaincode -peer.address=&#39;|grep -v grep &gt; /dev/null 2&gt;&amp;1 IMGSTATUS=$? done sleep 5s peer chaincode invoke -o orderer.cares.com:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;5&quot;]&#125;&#39; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;21,peer0 njairport query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/nkg sleep 3s peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;22,peer0 njairport query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;13,install chaincode peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-70s&#39; &#39;23,peer0 airwh query value of a&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/peers/weh peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-70s&#39; &#39;24,peer0 airwh query value of b&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; docker ps|grep &#39;hyperledger/explorer-db&#39; &gt; /dev/null if [ $? -eq 0 ]; then docker exec -it -u postgres postgresql dropdb fabricexplorer &gt; /dev/null sleep 1s docker exec -it -u postgres postgresql /opt/createdb.sh &gt; /dev/null sleep 1s rm -fr $TEST_HOME/blockchain-explorer/wallet/* rm -fr $TEST_HOME/blockchain-explorer/logs/* PRE_KEY=`cat $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json|grep -o &#39;keystore/.*sk&#39;|awk -F / &#39;&#123;print $2&#125;&#39;` if [ -n &quot;$PRE_KEY&quot; ]; then CUR_KEY=`ls $TEST_HOME/certs/peerOrgs/nkg/users/Admin@nkg.cares.com/msp/keystore/` sed -i &quot;s#$PRE_KEY#$CUR_KEY#g&quot; $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json cd $TEST_HOME/blockchain-explorer nohup ./start.sh &gt; /dev/null 2&gt;&amp;1 &amp; fi fi printf &#39;%-70s\\n&#39; &#39;Hyperledger Fabric CA 简易网络 搭建成功&#39;","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"FABRIC_CA ","slug":"FABRIC-CA","permalink":"http://wangcj.com.cn/tags/FABRIC-CA/"},{"name":"FABRIC 网络","slug":"FABRIC-网络","permalink":"http://wangcj.com.cn/tags/FABRIC-%E7%BD%91%E7%BB%9C/"}],"author":"王长金"},{"title":"Hyperledger Fabric 简易网络安装","slug":"Hyperledger-Fabric-简易网络安装","date":"2020-01-09T02:19:00.000Z","updated":"2021-01-06T13:10:41.000Z","comments":true,"path":"2020/01/09/Hyperledger-Fabric-简易网络安装/","link":"","permalink":"http://wangcj.com.cn/2020/01/09/Hyperledger-Fabric-%E7%AE%80%E6%98%93%E7%BD%91%E7%BB%9C%E5%AE%89%E8%A3%85/","excerpt":"","text":"1、前提1.1 、本机已安装docker，go1.2 、已经拉取 Hyperledger Fabric 镜像1.3 、Hyperledger Fabric 二进制已经在 $PATH中2、脚本testret()&#123; if [ $1 -ne 0 ]; then exit 1; fi printf &quot;\\033[36m \\t\\t\\t [OK] \\033[0m\\n&quot; &#125; unsetenv()&#123; unset FABRIC_CFG_PATH unset CORE_PEER_LOCALMSPID unset CORE_PEER_ADDRESS unset CORE_PEER_MSPCONFIGPATH &#125; TEST_HOME=$(cd $(dirname $0); pwd) printf &#39;%s%s\\n&#39; &#39;WORK DIR:&#39; $TEST_HOME PEER_PIDS=$(ps -ef|grep &#39;peer node start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$PEER_PIDS&quot; ]; then printf &#39;%-50s&#39; &#39;停止PEER进程&#39; kill -9 $PEER_PIDS testret $? fi sleep 2s ORDER_PID=$(ps -ef|grep &#39;orderer start&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$ORDER_PID&quot; ]; then printf &#39;%-50s&#39; &#39;停止ORDERER进程&#39; kill -9 $ORDER_PID testret $? fi sleep 2s EXPLORE_PID=$(ps -ef|grep &#39;node main.js name - hyperledger-explorer&#39;|grep -v grep|awk &#39;&#123;print $2&#125;&#39;) if [ -n &quot;$EXPLORE_PID&quot; ]; then printf &#39;%-46s&#39; &#39;停止 FABRIC EXPPLORER&#39; cd $TEST_HOME/blockchain-explorer nohup ./stop.sh &gt; /dev/null 2&gt;&amp;1 &amp; testret $? fi sleep 2s printf &#39;%-50s&#39; &#39;清理证书文件&#39; rm -fr $TEST_HOME/config/crypto-config/\\* testret $? printf &#39;%-50s&#39; &#39;清理数据文件&#39; rm -rf rm -fr $TEST_HOME/test/data/\\* testret $? IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-50s&#39; &#39;停止链码容器&#39; docker stop $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-50s&#39; &#39;删除链码容器&#39; docker rm $(docker ps -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $1&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi IMG_IDS=$(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) if [ -n &quot;$IMG_IDS&quot; ]; then printf &#39;%-50s&#39; &#39;清除链码镜像&#39; docker rmi $(docker images -a|grep -E &#39;dev-peer|devairwh-peer&#39;|awk &#39;&#123;print $3&#125;&#39;) &gt; /dev/null 2&gt;&amp;1 testret $? fi printf &#39;%-50s&#39; &#39;生成证书文件&#39; cryptogen generate --config $TEST_HOME/config/crypto-config.yaml --output $TEST_HOME/config/crypto-config &gt; /dev/null 2&gt;&amp;1 testret $? sleep 2s printf &#39;%-50s&#39; &#39;1,创建系统创世快&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/config/order configtxgen -profile SampleSingleMSPSolo -outputBlock $TEST_HOME/test/data/orderer.genesis.block -channelID sys-security &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;2,创建通道创世快&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputCreateChannelTx $TEST_HOME/test/data/securityCheck.channel.tx -channelID securitycheck &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;3,生成锚点文件 njairport&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/njairportMSPanchors.tx -channelID securitycheck -asOrg njairport &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;4,生成锚点文件 airwh&#39; configtxgen -profile SampleSingleMSPSoloChannel -outputAnchorPeersUpdate $TEST_HOME/test/data/airwhMSPanchors.tx -channelID securitycheck -asOrg airwh &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-46s&#39; &#39;5,启动orderer&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/order nohup orderer start &gt; ./logs/orderer.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-46s&#39; &#39;6,启动 peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0/ nohup peer node start &gt; $TEST_HOME/logs/njairport-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-46s&#39; &#39;7,启动 peer1 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer1 nohup peer node start &gt; $TEST_HOME/logs/njairport-peer1.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-46s&#39; &#39;8,启动 peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0/ nohup peer node start &gt; $TEST_HOME/logs/airwh-peer0.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-46s&#39; &#39;9,启动 peer1 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer1 nohup peer node start &gt; $TEST_HOME/logs/airwh-peer1.log 2&gt;&amp;1 &amp; testret $? printf &#39;%-46s\\n\\t%-42s&#39; &#39;10,创建通道&#39; &#39;等待orderer进程启动&#39; LISTENSTATUS=1 while [ $LISTENSTATUS -ne 0 ] do sleep 1s netstat -an|grep 7050|grep LISTEN &gt; /dev/null 2&gt;&amp;1 LISTENSTATUS=$? done unsetenv export CORE_PEER_LOCALMSPID=airwh export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0/ export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp peer channel create -o orderer.cares.sh.cn:7050 -c securitycheck -f $TEST_HOME/test/data/securityCheck.channel.tx --outputBlock $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;11,airwh peer0 加入通道&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0/ export CORE_PEER_LOCALMSPID=airwh export CORE_PEER_ADDRESS=peer0.airwh.com:7053 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp/ peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;12,airwh peer1 加入通道&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer1 export CORE_PEER_LOCALMSPID=airwh export CORE_PEER_ADDRESS=peer1.airwh.com:7056 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp/ peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;13,njairport peer0 加入通道&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0 export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;14,njairport peer1 加入通道&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer1 export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer1.njairport.com:8051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ peer channel join -b $TEST_HOME/test/data/securitycheck.block &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;15,更新锚节点 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0 export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ peer channel update -o orderer.cares.sh.cn:7050 -c securitycheck -f $TEST_HOME/test/data/njairportMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;16,更新锚节点 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0 export CORE_PEER_LOCALMSPID=airwh export CORE_PEER_ADDRESS=peer0.airwh.com:7053 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp/ peer channel update -o orderer.cares.sh.cn:7050 -c securitycheck -f $TEST_HOME/test/data/airwhMSPanchors.tx &gt; /dev/null 2&gt;&amp;1 testret $? ## java 链码部署需要下载依赖，编译较慢 这里用go链码快速演示 go链码依赖于 $GOPATH printf &#39;%-50s&#39; &#39;17,部署链码 peer0 njairport&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0/ export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;18,部署链码 peer0 airwh&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0/ export CORE_PEER_LOCALMSPID=airwh export CORE_PEER_ADDRESS=peer0.airwh.com:7053 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp/ peer chaincode install -n test -v 1.0 -p chaincode_example02 -l golang &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;19,实例化链码 peer0 njairport a=200,b=200&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0/ export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ peer chaincode instantiate -o orderer.cares.sh.cn:7050 -C securitycheck -n test -l golang -v 1.0 -c &#39;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;200&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&#39; -P &quot;OR (&#39;airwh.member&#39;,&#39;njairport.member&#39;)&quot; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-46s\\n\\t%-42s&#39; &#39;20, peer0 njairport 写入数据 a 转给 b 5&#39; &#39;等待链码容器部署&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0/ export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ IMGSTATUS=1 while [ $IMGSTATUS -ne 0 ] do ps -ef|grep &#39;chaincode -peer.address=peer0.njairport.com:7052&#39;|grep -v grep &gt; /dev/null 2&gt;&amp;1 IMGSTATUS=$? done sleep 10s peer chaincode invoke -o orderer.cares.sh.cn:7050 -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;5&quot;]&#125;&#39; &gt; /dev/null 2&gt;&amp;1 testret $? printf &#39;%-50s&#39; &#39;21,peer0 njairport 查询数据 a 的值&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/njairport/peer0/ export CORE_PEER_LOCALMSPID=njairport export CORE_PEER_ADDRESS=peer0.njairport.com:7051 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/ sleep 3s peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-46s&#39; &#39;&#39; testret $? printf &#39;%-50s&#39; &#39;22,peer0 njairport 查询数据 b 的值&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-46s&#39; &#39;&#39; testret $? printf &#39;%-50s&#39; &#39;23,peer0 airwh 查询数据 a 的值&#39; unsetenv export FABRIC_CFG_PATH=$TEST_HOME/test/config/airwh/peer0/ export CORE_PEER_LOCALMSPID=airwh export CORE_PEER_ADDRESS=peer0.airwh.com:7053 export CORE_PEER_MSPCONFIGPATH=$TEST_HOME/config/crypto-config/peerOrganizations/airwh.com/users/Admin@airwh.com/msp/ peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#39; printf &#39;%-46s&#39; &#39;&#39; testret $? printf &#39;%-50s&#39; &#39;24,peer0 airwh 查询数据 b 的值&#39; peer chaincode query -C securitycheck -n test -c &#39;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;b&quot;]&#125;&#39; printf &#39;%-46s&#39; &#39;&#39; testret $? docker ps|grep &#39;hyperledger/explorer-db&#39; &gt; /dev/null if [ $? -eq 0 ]; then docker exec -it -u postgres postgresql dropdb fabricexplorer &gt; /dev/null sleep 1s docker exec -it -u postgres postgresql /opt/createdb.sh &gt; /dev/null sleep 1s rm -fr $TEST_HOME/blockchain-explorer/wallet/\\* PRE_KEY=`cat $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json |grep -e &quot;$TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/keystore/&quot;|awk -F / &#39;&#123;print $NF&#125;&#39;|awk -F \\&quot; &#39;&#123;print $1&#125;&#39;` if [ -n &quot;PRE_KEY&quot; ]; then CUR_KEY=`ls $TEST_HOME/config/crypto-config/peerOrganizations/njairport.com/users/Admin@njairport.com/msp/keystore/` sed -i &quot;s#$PRE_KEY#$CUR_KEY#g&quot; $TEST_HOME/blockchain-explorer/app/platform/fabric/connection-profile/first-network.json cd $TEST_HOME/blockchain-explorer nohup ./start.sh &gt; /dev/null 2&gt;&amp;1 &amp; fi fi printf &#39;%-50s\\n&#39; &#39;Hyperledger Fabric 简易网络搭建成功&#39; 3、执行","categories":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"}],"tags":[{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"hyperledger fabric","slug":"hyperledger-fabric","permalink":"http://wangcj.com.cn/tags/hyperledger-fabric/"},{"name":"fabric 网络搭建","slug":"fabric-网络搭建","permalink":"http://wangcj.com.cn/tags/fabric-%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/"}],"author":"王长金"},{"title":"Redis 安装","slug":"Redis-安装","date":"2020-01-08T03:04:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/01/08/Redis-安装/","link":"","permalink":"http://wangcj.com.cn/2020/01/08/Redis-%E5%AE%89%E8%A3%85/","excerpt":"","text":"安装软件 rpm -ivh redis-3.2.12-2.el7.x86_64.rpm 配置vi /etc/redis.conf 设置开机启动并启动redissystemctl enable redis.service systemctl start redis.service 查看状态 测试","categories":[{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[],"author":"王长金"},{"title":"ORACLE 12C 克隆可插拔数据库","slug":"ORACLE-12C-克隆可插拔数据库","date":"2020-01-08T01:25:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/01/08/ORACLE-12C-克隆可插拔数据库/","link":"","permalink":"http://wangcj.com.cn/2020/01/08/ORACLE-12C-%E5%85%8B%E9%9A%86%E5%8F%AF%E6%8F%92%E6%8B%94%E6%95%B0%E6%8D%AE%E5%BA%93/","excerpt":"","text":"1、登录到根容器 sqlplus /nolog conn / as sysdba 2、克隆orclpdb1 为 datacenter 3、查看监听","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[],"author":"John Doe"},{"title":"MYSQL 清理binlog","slug":"MYSQL-清理binlog-1","date":"2020-01-08T01:20:00.000Z","updated":"2021-01-06T13:10:42.000Z","comments":true,"path":"2020/01/08/MYSQL-清理binlog-1/","link":"","permalink":"http://wangcj.com.cn/2020/01/08/MYSQL-%E6%B8%85%E7%90%86binlog-1/","excerpt":"","text":"自动删除binglog参数设置group_replication_transaction_size_limit=0 #设置事务大小无限制 expire_logs_days=3 #binlog 保留3天 innodb cluster 自动加入集群参数autoRejoinTries Cluster.setOption(&#39;autoRejoinTries&#39;, 10) 手动删除3天前的日志PURGE BINARY LOGS BEFORE DATE(NOW() - INTERVAL 3 DAY) + INTERVAL 0 SECOND;","categories":[{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"日志清理","slug":"日志清理","permalink":"http://wangcj.com.cn/tags/%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86/"}],"author":"John Doe"}],"categories":[{"name":"ETL","slug":"ETL","permalink":"http://wangcj.com.cn/categories/ETL/"},{"name":"博客","slug":"博客","permalink":"http://wangcj.com.cn/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/categories/%E6%89%93%E5%8C%85/"},{"name":"前端","slug":"前端","permalink":"http://wangcj.com.cn/categories/%E5%89%8D%E7%AB%AF/"},{"name":"SPRINGBOOT ","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"},{"name":"硬件","slug":"硬件","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/categories/JCEF/"},{"name":"计算机视觉","slug":"计算机视觉","permalink":"http://wangcj.com.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"},{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/categories/JNI/"},{"name":"SHELL","slug":"SHELL","permalink":"http://wangcj.com.cn/categories/SHELL/"},{"name":"JAVA","slug":"JAVA","permalink":"http://wangcj.com.cn/categories/JAVA/"},{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/categories/JNA/"},{"name":"JAVA","slug":"JNA/JAVA","permalink":"http://wangcj.com.cn/categories/JNA/JAVA/"},{"name":"JNA","slug":"硬件/JNA","permalink":"http://wangcj.com.cn/categories/%E7%A1%AC%E4%BB%B6/JNA/"},{"name":"JAVA","slug":"JCEF/JAVA","permalink":"http://wangcj.com.cn/categories/JCEF/JAVA/"},{"name":"机房","slug":"机房","permalink":"http://wangcj.com.cn/categories/%E6%9C%BA%E6%88%BF/"},{"name":"中间件","slug":"中间件","permalink":"http://wangcj.com.cn/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"SPRING CLOUD","slug":"SPRING-CLOUD","permalink":"http://wangcj.com.cn/categories/SPRING-CLOUD/"},{"name":"java","slug":"java","permalink":"http://wangcj.com.cn/categories/java/"},{"name":"SPRINGCLOUD","slug":"SPRINGCLOUD","permalink":"http://wangcj.com.cn/categories/SPRINGCLOUD/"},{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/categories/docker/"},{"name":"JCEF","slug":"JAVA/JCEF","permalink":"http://wangcj.com.cn/categories/JAVA/JCEF/"},{"name":"jna","slug":"jna","permalink":"http://wangcj.com.cn/categories/jna/"},{"name":"航空业务","slug":"航空业务","permalink":"http://wangcj.com.cn/categories/%E8%88%AA%E7%A9%BA%E4%B8%9A%E5%8A%A1/"},{"name":"数据库","slug":"数据库","permalink":"http://wangcj.com.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://wangcj.com.cn/categories/SPRINGBOOT/"},{"name":"WINDOWS","slug":"WINDOWS","permalink":"http://wangcj.com.cn/categories/WINDOWS/"},{"name":"历史","slug":"历史","permalink":"http://wangcj.com.cn/categories/%E5%8E%86%E5%8F%B2/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://wangcj.com.cn/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"linux","slug":"linux","permalink":"http://wangcj.com.cn/categories/linux/"},{"name":"网络","slug":"网络","permalink":"http://wangcj.com.cn/categories/%E7%BD%91%E7%BB%9C/"},{"name":"自动化测试","slug":"自动化测试","permalink":"http://wangcj.com.cn/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"},{"name":"安全","slug":"安全","permalink":"http://wangcj.com.cn/categories/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"http://wangcj.com.cn/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"kettle","slug":"kettle","permalink":"http://wangcj.com.cn/tags/kettle/"},{"name":"java 脚本","slug":"java-脚本","permalink":"http://wangcj.com.cn/tags/java-%E8%84%9A%E6%9C%AC/"},{"name":"hexo 博客","slug":"hexo-博客","permalink":"http://wangcj.com.cn/tags/hexo-%E5%8D%9A%E5%AE%A2/"},{"name":"读取jar中的transformation","slug":"读取jar中的transformation","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E5%8F%96jar%E4%B8%AD%E7%9A%84transformation/"},{"name":"NSIS","slug":"NSIS","permalink":"http://wangcj.com.cn/tags/NSIS/"},{"name":"打包","slug":"打包","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8C%85/"},{"name":"自定义页面","slug":"自定义页面","permalink":"http://wangcj.com.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2/"},{"name":"拖拽","slug":"拖拽","permalink":"http://wangcj.com.cn/tags/%E6%8B%96%E6%8B%BD/"},{"name":"bootstrap tree table","slug":"bootstrap-tree-table","permalink":"http://wangcj.com.cn/tags/bootstrap-tree-table/"},{"name":"IBMMQ","slug":"IBMMQ","permalink":"http://wangcj.com.cn/tags/IBMMQ/"},{"name":"发送IBMMQ","slug":"发送IBMMQ","permalink":"http://wangcj.com.cn/tags/%E5%8F%91%E9%80%81IBMMQ/"},{"name":"监听IBMMQ","slug":"监听IBMMQ","permalink":"http://wangcj.com.cn/tags/%E7%9B%91%E5%90%ACIBMMQ/"},{"name":"JNI","slug":"JNI","permalink":"http://wangcj.com.cn/tags/JNI/"},{"name":"热敏打印机","slug":"热敏打印机","permalink":"http://wangcj.com.cn/tags/%E7%83%AD%E6%95%8F%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"mp4播放支持","slug":"mp4播放支持","permalink":"http://wangcj.com.cn/tags/mp4%E6%92%AD%E6%94%BE%E6%94%AF%E6%8C%81/"},{"name":"cef编译","slug":"cef编译","permalink":"http://wangcj.com.cn/tags/cef%E7%BC%96%E8%AF%91/"},{"name":"人脸跟踪","slug":"人脸跟踪","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8%E8%B7%9F%E8%B8%AA/"},{"name":"人脸web展示","slug":"人脸web展示","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8web%E5%B1%95%E7%A4%BA/"},{"name":"FFMPEG","slug":"FFMPEG","permalink":"http://wangcj.com.cn/tags/FFMPEG/"},{"name":"视频格式转换","slug":"视频格式转换","permalink":"http://wangcj.com.cn/tags/%E8%A7%86%E9%A2%91%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"},{"name":"JNI 调瑞为SDK","slug":"JNI-调瑞为SDK","permalink":"http://wangcj.com.cn/tags/JNI-%E8%B0%83%E7%91%9E%E4%B8%BASDK/"},{"name":"JNI  总结","slug":"JNI-总结","permalink":"http://wangcj.com.cn/tags/JNI-%E6%80%BB%E7%BB%93/"},{"name":"请求拦截处理","slug":"请求拦截处理","permalink":"http://wangcj.com.cn/tags/%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%A4%84%E7%90%86/"},{"name":"人脸识别","slug":"人脸识别","permalink":"http://wangcj.com.cn/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"},{"name":"javacv","slug":"javacv","permalink":"http://wangcj.com.cn/tags/javacv/"},{"name":"JNA","slug":"JNA","permalink":"http://wangcj.com.cn/tags/JNA/"},{"name":"摄像头","slug":"摄像头","permalink":"http://wangcj.com.cn/tags/%E6%91%84%E5%83%8F%E5%A4%B4/"},{"name":"远程脚本执行","slug":"远程脚本执行","permalink":"http://wangcj.com.cn/tags/%E8%BF%9C%E7%A8%8B%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C/"},{"name":"分布式","slug":"分布式","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"},{"name":"分布式内存","slug":"分布式内存","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%86%85%E5%AD%98/"},{"name":"加密","slug":"加密","permalink":"http://wangcj.com.cn/tags/%E5%8A%A0%E5%AF%86/"},{"name":"NETTY","slug":"NETTY","permalink":"http://wangcj.com.cn/tags/NETTY/"},{"name":"读护照","slug":"读护照","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E6%8A%A4%E7%85%A7/"},{"name":"JCEF","slug":"JCEF","permalink":"http://wangcj.com.cn/tags/JCEF/"},{"name":"编译","slug":"编译","permalink":"http://wangcj.com.cn/tags/%E7%BC%96%E8%AF%91/"},{"name":"读取身份证","slug":"读取身份证","permalink":"http://wangcj.com.cn/tags/%E8%AF%BB%E5%8F%96%E8%BA%AB%E4%BB%BD%E8%AF%81/"},{"name":"测试","slug":"测试","permalink":"http://wangcj.com.cn/tags/%E6%B5%8B%E8%AF%95/"},{"name":"jcef","slug":"jcef","permalink":"http://wangcj.com.cn/tags/jcef/"},{"name":"js 调用java","slug":"js-调用java","permalink":"http://wangcj.com.cn/tags/js-%E8%B0%83%E7%94%A8java/"},{"name":"服务器安装","slug":"服务器安装","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85/"},{"name":"nginx","slug":"nginx","permalink":"http://wangcj.com.cn/tags/nginx/"},{"name":"stream","slug":"stream","permalink":"http://wangcj.com.cn/tags/stream/"},{"name":"tcp 负载","slug":"tcp-负载","permalink":"http://wangcj.com.cn/tags/tcp-%E8%B4%9F%E8%BD%BD/"},{"name":"flv.js","slug":"flv-js","permalink":"http://wangcj.com.cn/tags/flv-js/"},{"name":"直播","slug":"直播","permalink":"http://wangcj.com.cn/tags/%E7%9B%B4%E6%92%AD/"},{"name":"屏幕录制","slug":"屏幕录制","permalink":"http://wangcj.com.cn/tags/%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6/"},{"name":"spring cloud bus","slug":"spring-cloud-bus","permalink":"http://wangcj.com.cn/tags/spring-cloud-bus/"},{"name":"vue","slug":"vue","permalink":"http://wangcj.com.cn/tags/vue/"},{"name":"低版本浏览器兼容","slug":"低版本浏览器兼容","permalink":"http://wangcj.com.cn/tags/%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9/"},{"name":"推送","slug":"推送","permalink":"http://wangcj.com.cn/tags/%E6%8E%A8%E9%80%81/"},{"name":"docker","slug":"docker","permalink":"http://wangcj.com.cn/tags/docker/"},{"name":"日志清理","slug":"日志清理","permalink":"http://wangcj.com.cn/tags/%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86/"},{"name":"netty 连接管理","slug":"netty-连接管理","permalink":"http://wangcj.com.cn/tags/netty-%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/"},{"name":"netty","slug":"netty","permalink":"http://wangcj.com.cn/tags/netty/"},{"name":"断线重连","slug":"断线重连","permalink":"http://wangcj.com.cn/tags/%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E/"},{"name":"嵌入式谷歌浏览器","slug":"嵌入式谷歌浏览器","permalink":"http://wangcj.com.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"sqlserver","slug":"sqlserver","permalink":"http://wangcj.com.cn/tags/sqlserver/"},{"name":"备份还原","slug":"备份还原","permalink":"http://wangcj.com.cn/tags/%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/"},{"name":"源码编译","slug":"源码编译","permalink":"http://wangcj.com.cn/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"},{"name":"mysql8.0.22","slug":"mysql8-0-22","permalink":"http://wangcj.com.cn/tags/mysql8-0-22/"},{"name":"jna","slug":"jna","permalink":"http://wangcj.com.cn/tags/jna/"},{"name":"监听设备插拔","slug":"监听设备插拔","permalink":"http://wangcj.com.cn/tags/%E7%9B%91%E5%90%AC%E8%AE%BE%E5%A4%87%E6%8F%92%E6%8B%94/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://wangcj.com.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"redis","slug":"redis","permalink":"http://wangcj.com.cn/tags/redis/"},{"name":"qt5 打包","slug":"qt5-打包","permalink":"http://wangcj.com.cn/tags/qt5-%E6%89%93%E5%8C%85/"},{"name":"图形","slug":"图形","permalink":"http://wangcj.com.cn/tags/%E5%9B%BE%E5%BD%A2/"},{"name":"串口通信","slug":"串口通信","permalink":"http://wangcj.com.cn/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"},{"name":"oracle","slug":"oracle","permalink":"http://wangcj.com.cn/tags/oracle/"},{"name":"快速删除重复数据","slug":"快速删除重复数据","permalink":"http://wangcj.com.cn/tags/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/"},{"name":"fabric","slug":"fabric","permalink":"http://wangcj.com.cn/tags/fabric/"},{"name":"fabric 2.2.0","slug":"fabric-2-2-0","permalink":"http://wangcj.com.cn/tags/fabric-2-2-0/"},{"name":"NFS","slug":"NFS","permalink":"http://wangcj.com.cn/tags/NFS/"},{"name":"angular4","slug":"angular4","permalink":"http://wangcj.com.cn/tags/angular4/"},{"name":"多tab","slug":"多tab","permalink":"http://wangcj.com.cn/tags/%E5%A4%9Atab/"},{"name":"SVG","slug":"SVG","permalink":"http://wangcj.com.cn/tags/SVG/"},{"name":"动画","slug":"动画","permalink":"http://wangcj.com.cn/tags/%E5%8A%A8%E7%94%BB/"},{"name":"angularjs","slug":"angularjs","permalink":"http://wangcj.com.cn/tags/angularjs/"},{"name":"调试","slug":"调试","permalink":"http://wangcj.com.cn/tags/%E8%B0%83%E8%AF%95/"},{"name":"打印表格","slug":"打印表格","permalink":"http://wangcj.com.cn/tags/%E6%89%93%E5%8D%B0%E8%A1%A8%E6%A0%BC/"},{"name":"分页","slug":"分页","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E9%A1%B5/"},{"name":"token文件下载","slug":"token文件下载","permalink":"http://wangcj.com.cn/tags/token%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"},{"name":"javascript","slug":"javascript","permalink":"http://wangcj.com.cn/tags/javascript/"},{"name":"css","slug":"css","permalink":"http://wangcj.com.cn/tags/css/"},{"name":"悼念","slug":"悼念","permalink":"http://wangcj.com.cn/tags/%E6%82%BC%E5%BF%B5/"},{"name":"LDAP","slug":"LDAP","permalink":"http://wangcj.com.cn/tags/LDAP/"},{"name":"分页查询","slug":"分页查询","permalink":"http://wangcj.com.cn/tags/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"},{"name":"错误处理","slug":"错误处理","permalink":"http://wangcj.com.cn/tags/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"},{"name":"ZIP64","slug":"ZIP64","permalink":"http://wangcj.com.cn/tags/ZIP64/"},{"name":"thymeleaf","slug":"thymeleaf","permalink":"http://wangcj.com.cn/tags/thymeleaf/"},{"name":"SESSION","slug":"SESSION","permalink":"http://wangcj.com.cn/tags/SESSION/"},{"name":"事件监听","slug":"事件监听","permalink":"http://wangcj.com.cn/tags/%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"},{"name":"xxljob","slug":"xxljob","permalink":"http://wangcj.com.cn/tags/xxljob/"},{"name":"日志","slug":"日志","permalink":"http://wangcj.com.cn/tags/%E6%97%A5%E5%BF%97/"},{"name":"后台启动","slug":"后台启动","permalink":"http://wangcj.com.cn/tags/%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8/"},{"name":"算术验证码","slug":"算术验证码","permalink":"http://wangcj.com.cn/tags/%E7%AE%97%E6%9C%AF%E9%AA%8C%E8%AF%81%E7%A0%81/"},{"name":"路由配置","slug":"路由配置","permalink":"http://wangcj.com.cn/tags/%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/"},{"name":"消息读取","slug":"消息读取","permalink":"http://wangcj.com.cn/tags/%E6%B6%88%E6%81%AF%E8%AF%BB%E5%8F%96/"},{"name":"OSB","slug":"OSB","permalink":"http://wangcj.com.cn/tags/OSB/"},{"name":"MSMQ","slug":"MSMQ","permalink":"http://wangcj.com.cn/tags/MSMQ/"},{"name":"systemctl","slug":"systemctl","permalink":"http://wangcj.com.cn/tags/systemctl/"},{"name":"加解密","slug":"加解密","permalink":"http://wangcj.com.cn/tags/%E5%8A%A0%E8%A7%A3%E5%AF%86/"},{"name":"mysql5.7","slug":"mysql5-7","permalink":"http://wangcj.com.cn/tags/mysql5-7/"},{"name":"innodb cluster","slug":"innodb-cluster","permalink":"http://wangcj.com.cn/tags/innodb-cluster/"},{"name":"keepalived","slug":"keepalived","permalink":"http://wangcj.com.cn/tags/keepalived/"},{"name":"WEEDFS","slug":"WEEDFS","permalink":"http://wangcj.com.cn/tags/WEEDFS/"},{"name":"主从","slug":"主从","permalink":"http://wangcj.com.cn/tags/%E4%B8%BB%E4%BB%8E/"},{"name":"rabbit mq","slug":"rabbit-mq","permalink":"http://wangcj.com.cn/tags/rabbit-mq/"},{"name":"集群安装","slug":"集群安装","permalink":"http://wangcj.com.cn/tags/%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"},{"name":"rabbitmq","slug":"rabbitmq","permalink":"http://wangcj.com.cn/tags/rabbitmq/"},{"name":"jaxb","slug":"jaxb","permalink":"http://wangcj.com.cn/tags/jaxb/"},{"name":"xxl-job","slug":"xxl-job","permalink":"http://wangcj.com.cn/tags/xxl-job/"},{"name":"服务注册","slug":"服务注册","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C/"},{"name":"自动化测试","slug":"自动化测试","permalink":"http://wangcj.com.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"},{"name":"服务配置","slug":"服务配置","permalink":"http://wangcj.com.cn/tags/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"},{"name":"区块链 内网 无互联网","slug":"区块链-内网-无互联网","permalink":"http://wangcj.com.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E5%86%85%E7%BD%91-%E6%97%A0%E4%BA%92%E8%81%94%E7%BD%91/"},{"name":"安全扫描","slug":"安全扫描","permalink":"http://wangcj.com.cn/tags/%E5%AE%89%E5%85%A8%E6%89%AB%E6%8F%8F/"},{"name":"arachni","slug":"arachni","permalink":"http://wangcj.com.cn/tags/arachni/"},{"name":"fabric-java-skd","slug":"fabric-java-skd","permalink":"http://wangcj.com.cn/tags/fabric-java-skd/"},{"name":"endorsement","slug":"endorsement","permalink":"http://wangcj.com.cn/tags/endorsement/"},{"name":"PLSQL","slug":"PLSQL","permalink":"http://wangcj.com.cn/tags/PLSQL/"},{"name":"插件","slug":"插件","permalink":"http://wangcj.com.cn/tags/%E6%8F%92%E4%BB%B6/"},{"name":"动态组织加入","slug":"动态组织加入","permalink":"http://wangcj.com.cn/tags/%E5%8A%A8%E6%80%81%E7%BB%84%E7%BB%87%E5%8A%A0%E5%85%A5/"},{"name":"FABRIC_CA ","slug":"FABRIC-CA","permalink":"http://wangcj.com.cn/tags/FABRIC-CA/"},{"name":"FABRIC 网络","slug":"FABRIC-网络","permalink":"http://wangcj.com.cn/tags/FABRIC-%E7%BD%91%E7%BB%9C/"},{"name":"区块链","slug":"区块链","permalink":"http://wangcj.com.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"},{"name":"hyperledger fabric","slug":"hyperledger-fabric","permalink":"http://wangcj.com.cn/tags/hyperledger-fabric/"},{"name":"fabric 网络搭建","slug":"fabric-网络搭建","permalink":"http://wangcj.com.cn/tags/fabric-%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/"}]}